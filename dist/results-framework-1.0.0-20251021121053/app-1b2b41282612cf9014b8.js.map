{"version":3,"sources":["webpack:///webpack/bootstrap 1b2b41282612cf9014b8","webpack:///./scripts/index.js","webpack:///./scripts/app.js","webpack:///./core/ndp-framework.js","webpack:///./scripts/resultsFrameworkModule.js","webpack:///./common/dhis2.metadata.js","webpack:///./common/dhis2.angular.services.js","webpack:///./common/dhis2.angular.directives.js","webpack:///./common/dhis2.angular.validations.js","webpack:///./common/dhis2.angular.filters.js","webpack:///./common/dhis2.angular.controllers.js","webpack:///./scripts/services.js","webpack:///./scripts/filters.js","webpack:///./scripts/directives.js","webpack:///./scripts/controllers.js","webpack:///./components/action/action-output-controller.js","webpack:///./components/cluster/cluster-controller.js","webpack:///./components/completeness/completeness-controller.js","webpack:///./components/dictionary/dictionary-controller.js","webpack:///./components/dictionary/dictionary-details-controller.js","webpack:///./components/explanation/datavalue-explanation-controller.js","webpack:///./components/faq/faq-controller.js","webpack:///./components/goal/goal-controller.js","webpack:///./components/home/home-controller.js","webpack:///./components/intermediate-outcome/intermediate-outcome-controller.js","webpack:///./components/library/library-controller.js","webpack:///./components/llg/llg-controller.js","webpack:///./components/log/log-controller.js","webpack:///./components/mda/mda-controller.js","webpack:///./components/objective/objective-controller.js","webpack:///./components/outcome/outcome-controller.js","webpack:///./components/output/output-controller.js","webpack:///./components/outree/orgunit-controller.js","webpack:///./components/policy/policy-controller.js","webpack:///./components/project/project-controller.js","webpack:///./components/sdg/sdg-controller.js","webpack:///./components/settings/settings-controller.js","webpack:///./components/vision/vision-controller.js"],"names":["require","scriptElement","document","createElement","type","src","dhisConfig","apiRoot","body","appendChild","cssElement","jQuery","Dhis2HeaderBar","initHeaderBar","querySelector","noLoadingIndicator","angular","module","value","config","$httpProvider","$routeProvider","$translateProvider","defaults","useXDomain","headers","common","when","templateUrl","controller","otherwise","redirectTo","preferredLanguage","useSanitizeValueStrategy","useLoader","run","$rootScope","maxOptionSize","dhis2","util","namespace","ndp","emptyOrganisationUnits","DHIS2URL","i18n_no_orgunits","i18n_offline_notification","i18n_online_notification","i18n_ajax_login_failed","optionSetsInPromise","attributesInPromise","batchSize","store","metaDataCached","memoryOnly","$","hasClass","adapters","storage","InMemoryAdapter","IndexedDBAdapter","DomLocalStorageAdapter","Store","name","DomSessionStorageAdapter","objectStores","safeEach","arr","fn","each","ready","ajaxSetup","cache","show","bind","event","loggedIn","setHeaderMessage","setHeaderDelayMessage","form","join","ajax_login","username","val","password","post","success","ret","availability","syncCheckAvailability","alert","downloadDataElements","dataElementType","def","Deferred","open","then","getMetaDataElementsByType","metaDes","filterMissingDataElements","missingDes","getDataElements","resolve","promise","downloadGroupSets","code","groupSetType","getMetaDataElementGroupSetsByType","metaDegs","filterMissingDataElementGroupSets","missingDegs","getDataElementGroupSets","degs","getDataElementGroups","des","downloadMetaData","metadataCached","JSON","parse","sessionStorage","getItem","Promise","console","log","getUserAccessibleDataSets","getUserAccessiblePrograms","getMetaOptionSets","filterMissingOptionSets","getOptionSets","getMetaCategoryCombos","filterMissingCategoryCombos","getCategoryCombos","getMetaAttributes","filterMissingAttributes","getAttributes","getMetaPrograms","filterMissingPrograms","getPrograms","getMetaLegendSets","filterMissingLegendSets","getLegendSets","getMetaCategoryOptionGroupSets","filterMissingCategoryOptionGroupSets","getCategoryOptionGroupSets","getMetaOptionGroups","filterMissingOptionGroups","getOptionGroups","getMetaOptionGroupSets","filterMissingOptionGroupSets","getOptionGroupSets","downloadAllMetaData","getOrgUnitLevels","getSystemSetting","getMetaDataElements","getMetaDataElementGroups","filterMissingDataElementGroups","getMetaDataElementGroupSets","getMetaDataSets","filterMissingDataSets","getDataSets","metadata","getMetaObject","getKeys","done","res","length","getMetaObjects","localStorage","getMetaObjectIds","objs","filterMissingObjIds","ids","getBatches","getLinkedMetaDataElements","dataElements","getLinkedMetaDataElementGroups","groups","filter","getMetaIndicatorGroups","filterMissingIndicatorGroups","getIndicatorGroups","processObject","custSeparator","formulaRegex","expressionRegex","operatorRegex","expressionMatcher","obj","expressionPattern","operandPattern","src2","match","exec","replace","push","split","cartesianProduct","arrays","i","j","l","m","a1","o","splice","concat","chunk","array","size","chunks","slice","processMetaDataAttribute","attributeValues","attribute","valueType","parseFloat","getMetaDataAttribute","metaAttribute","parseInt","objNames","url","ajax","encodeURI","data","response","_","values","fail","db","filterMissingObjIdsWithCheck","mainDef","mainPromise","builder","build","missingObjIds","d","p","get","id","version","func","batches","results","batch","result","fetchBatchItems","toString","count","categories","ca","categoryOptions","co","mappedOrganisationUnits","organisationUnits","map","ou","categoryOptionCombos","cat","displayName","cocs","sortedOptionCombos","coc","opts","itsc","intersection","access","sections","sec","indicators","forEach","ind","params","greyedFields","gf","dimensionItem","dataSetElements","dse","dataElement","programStages","stage","programStageDataElements","pstde","programTrackedEntityAttributes","pta","trackedEntityAttribute","options","op","setAll","stringify","SessionStorageService","element","injector","set","dataElementGroups","_degs","deg","_des","de","programs","pr","prop","oo","level","processOptionCombos","getSharingSetting","dWrite","dRead","mRead","mWrite","write","read","att","Object","keys","key","categoryCombos","optionCombos","cc","d2Services","factory","$q","$http","getTranslationStrings","locale","defaultUrl","tx","parseJavaProperties","getLocale","settings","keyUiLocale","deferred","defer","translations","userProfile","service","getAuthorities","roles","authority","userCredentials","userRoles","role","authorities","auth","getUserAuthorities","canDeleteEvent","canAddOrUpdateEvent","canSearchTei","canDeleteTei","canRegisterTei","canEnrollTei","canUnEnrollTei","canAdministerDashboard","fileName","$window","setItem","clearAll","removeItem","getSetting","dhis2CalendarFormat","keyDateFormat","keyCalendar","momentFormat","storedFormat","isObject","$filter","CalendarService","getDate","dateValue","calendarSetting","moment","_d","Date","format","formatToHrsMins","dateFormat","formatToHrsMinsSecs","getToday","tdy","calendars","instance","newDate","today","_year","_month","_day","formatFromUserToApi","formatFromApiToUser","getDateAfterOffsetDays","offSetDays","date","setDate","fromJSDate","dateAfterOffset","getDifference","startDate","endDate","firstdate","toMomentFormat","seconddate","diff","dateValues","_dateValue","isValid","convertedDate","getCode","getName","$translate","DateUtils","OptionSetService","CurrentSelection","FileService","DialogService","formatDataValue","optionSets","destination","fileNames","getFileNames","validation","isNumber","optionSetValue","optionSet","String","setFileNames","displayBooleanAsYesNo","isUndefined","userHasValidRole","indexOf","userHasWriteAccess","object","objectId","userHasReadAccess","getUsername","getProduct","op1","op2","formatNumber","num","Intl","NumberFormat","getSum","getTotal","getValue","item","sum","a","b","reduce","getPercent","turnOffPercent","turnOffDecimal","toFixed","getRoleHeaders","instant","getOptionComboIdFromOptionNames","optionComboMap","optionNames","selectedAttributeOcboName","selectedAttributeOcobo","reverse","splitRoles","pushRoles","existingRoles","r","extractRoles","getOptionIds","errorNotifier","status","dialogOptions","headerText","bodyText","message","showDialog","getNumeratorAndDenominatorIds","expressionRegx","numerator","den","denominator","numeratorOptionCombo","denominatorOptionCombo","populateOuLevels","orgUnit","ouLevels","lowestLevel","ouModes","lvl","selectedOuMode","processDataSet","ds","getReportName","reportType","reportRole","ouName","ouLevel","peName","reportName","displayNme","getDataElementTotal","dataValues","total","getIndicatorResult","denVal","numVal","numExpression","copy","matcher","k","operand","isTotal","substring","denExpression","eval","isNaN","roundTo","factor","dummyPromise","getPerformanceOverviewHeaders","ac","order","lRange","printStyle","style","ma","hRange","na","nd","getFixedRanges","isDescending","ranges","green","greenColor","yellowStart","yellowEnd","yellowColor","red","redColor","greyColor","getFixedTrafficStyle","inlineStyle","yellow","grey","getTrafficColorForValue","color","Number","getFormattedAnalyticsResponse","reportData","rows","multiplier","divisor","metaData","getDictionaryCompleteness","completeness","header","completenessRate","isGreen","isYellow","NotificationService","getForProgramStage","programStage","htmlCode","dataEntryForm","inputRegex","inputFields","hasEventDate","inputField","inputElement","parseHTML","attributes","nodeName","fieldId","newInputField","hasOwnProperty","getAttributesAsString","prStDe","commonInputFieldProperty","optionSetId","maxDate","allowFutureDate","showNotifcationDialog","addPopOver","getForTrackedEntity","trackedEntityForm","target","trackedEntityFormAttributes","hasProgramDate","attId","fieldName","programId","attMaxDate","isTrackerAssociate","mandatory","unique","enMaxDate","selectEnrollmentDatesInFuture","displayIncidentDate","inMaxDate","selectIncidentDatesInFuture","attributesAsString","htmlCodeToInsertPopOver","popOverContent","tagToInsertPopOver","tagWithPopOver","insertPopOverSpanToTag","tagToInsertPopOverSpan","description","attValue","popOverSpanElement","tagWithPopOverSpan","index","attr","html","outerHTML","selectedItem","setSelectedItem","getSelectedItem","$modal","modalDefaults","backdrop","keyboard","modalFade","modalOptions","closeButtonText","actionButtonText","showModal","customModalDefaults","customModalOptions","tempModalDefaults","tempModalOptions","extend","$scope","$modalInstance","ok","close","dismiss","dialogDefaults","backdropClick","customDialogDefaults","customDialogOptions","tempDialogDefaults","tempDialogOptions","errorMsgheader","errorMsgBody","showNotifcationWithOptions","page","pageSize","itemCount","pageCount","toolBarDisplay","setPage","getPageCount","getPage","setPageSize","getPageSize","setItemCount","getItemCount","setPageCount","setToolBarDisplay","getToolBarDisplay","lowerLimit","pageCountLimitPerPageDiff","low","Math","ceil","max","GRIDCOLUMNS_URL","columnExists","cols","colExists","gridColumns","httpMessage","method","error","columns","gridColumnsFromSessionStore","uid","download","upload","file","formData","FormData","append","transformRequest","identity","undefined","MetaDataFactory","staticReplacements","regExp","RegExp","replacement","performStaticReplacements","expression","staticReplacement","loadRules","programUid","getAll","constants","getByProgram","pis","variables","programRules","pi","displayInForm","newAction","content","displayDescription","programRuleActionType","location","newRule","shortname","program","condition","programRuleActions","variablesInCondition","variablesInData","valueCountPresent","positiveValueCountPresent","variableObjectsCurrentExpression","pushDirectAddressedVariable","variableWithCurls","variableName","variableNameParts","newVariableObject","programRuleVariableSourceType","useCodeForOptionSet","variableInCondition","pushed","variableInData","valueCountText","variableCurrentRule","zeroPosValueCountText","programIndicators","rules","programValidations","programVariables","prs","rule","actions","programStageId","$log","processSingleValue","processedValue","warn","pushVariable","variablename","varValue","allValues","varType","variablefound","variablePrefix","variableEventDate","processedValues","alternateValue","variableValue","variableType","hasValue","getDataElementValueOrCodeForValueInternal","dataElementId","allDes","processValue","getDataElementValueOrCode","getDataElementValueOrCodeForValue","getVariables","allProgramRules","executingEvent","evs","selectedEntity","selectedEnrollment","programVariable","trackedEntityAttributeId","valueFound","byStage","isDefined","eventDate","all","previousvalue","previousEventDate","currentEventPassed","optionSetCode","dueDate","enrollmentDate","enrollment","incidentDate","constant","VariableService","DHIS2EventFactory","RulesFactory","orderByFilter","NUMBER_OF_EVENTS_IN_SCOPE","crossEventRulesExist","lastEventId","lastEventDate","lastProgramId","eventScopeExceptCurrent","replaceVariables","variablesHash","variablespresent","variablepresent","runDhisFunctions","flag","dhisFunctions","parameters","continueLooping","expressionUpdated","brokenExecution","dhisFunction","regularExFunctionCall","callsToThisFunction","callToThisFunction","justparameters","trim","numParameters","runExpression","floored","floor","dividend","rest","returnString","daystoadd","newdate","add","newdatestring","number","output","variableObject","valueToCompare","ceiled","rounded","round","inputToValidate","pattern","regEx","matchFound","baseNumber","baseDigits","firstDigit","secondDigit","firstSum","baseNumberLength","firstWeights","secondWeights","secondSum","string","numChars","startChar","endChar","splitArray","returnPart","beforereplacement","identifier","answer","debug","dhisfunctionsevaluated","verbose","info","e","determineValueType","performCreateEventAction","effect","currentEvents","valArray","newEventDataValues","idList","active","valParts","valId","valVal","valuesAlreadyExists","currentEvent","misMatch","currentDataValue","newEvent","trackedEntityInstance","notes","dontPersistOnCreate","notPersisted","$broadcast","create","internalExecuteRules","allDataElements","isArray","ruleeffects","ruleEffectKey","updatedEffectsExits","eventsCreated","ruleEffective","action","programIndicator","programStageSection","ineffect","oldData","nameWithoutBrackets","createdNow","variabletoassign","updatedValue","internalProcessEvent","dataValue","internalGetOrLoadScope","orgUnitId","pager","ordering","field","direction","filterings","getByFilters","newestEvents","previousEvents","eventIdDictionary","allEventsWithPossibleDuplicates","events","eventInScope","allEventsInScope","allEvents","internalGetOrLoadRules","executeRules","flags","loadAndExecuteRulesScope","scope","processRuleEffectsForTrackedEntityAttributes","context","currentTei","teiOriginalValues","attributesById","hiddenFields","assignedFields","hiddenSections","warningMessages","processRuleEffectsForEvent","eventId","currentEventOriginalValues","prStDes","formName","headerTxt","bodyTxt","processRuleEffectAttribute","selectedTei","tei","currentEventOriginialValue","affectedEvent","teiAttributesEffects","eventEffects","reconstructEvent","dvs","coordinate","latitude","longitude","refreshList","eventList","continueLoop","getEventExpiryStatus","selectedOrgUnit","completedDate","daysAfterCompletion","completeEventsExpiryDays","currentSelection","relationshipInfo","sortedTeiIds","selectedTeiEvents","relationshipOwner","advancedSearchOptions","trackedEntities","setRelationshipInfo","getRelationshipInfo","setOptionSets","setAttributesById","getAttributesById","setOuLevels","getOuLevels","setSortedTeiIds","getSortedTeiIds","setSelectedTeiEvents","getSelectedTeiEvents","setRelationshipOwner","getRelationshipOwner","setLocation","getLocation","setAdvancedSearchOptions","searchOptions","getAdvancedSearchOptions","setTrackedEntities","getTrackedEntities","setSortColumn","sortColumn","setColumnReverse","reverseSortStatus","setGridColumns","getAuditHistoryData","dataId","dataType","orgUnitPromise","rootOrgUnitPromise","orgUnitTreePromise","getChildren","getViewTreeRoot","dataViewOrganisationUnits","getSearchTreeRoot","teiSearchOrganisationUnits","getOrgUnits","fieldUrl","getOrgUnit","d2Directives","directive","$timeout","restrict","link","attrs","one","names","tc","treeLoaded","$apply","selection","responseReceived","addClass","setListenerFunction","setSelectedOu","trigger","$watch","focus","click","toggle","autocomplete","source","select","ui","findByName","elem","calendarsPicker","onSelect","blurOrChange","change","which","$eval","d2Enter","preventDefault","$compile","$templateCache","title","template","placement","heading","popover","on","contains","sortable","connectWith","placeholder","tolerance","handle","widgetsOrder","getSortedItems","receive","biggerWidgets","smallerWidgets","movedIsIdentifeid","Paginator","paginator","elm","customDataEntryForm","contents","customRegistrationForm","contextMenu","menuHeight","height","menuWidth","width","winHeight","window","winWidth","pageX","pageY","css","left","top","hide","$parse","ctrl","minDate","calendar","initializeDatePicker","sDate","eDate","changeMonth","yearRange","duration","showAnim","renderer","picker","themeRollerRenderer","$setViewValue","DHIS2EventService","d2FileInputList","d2FileInput","d2FileInputName","d2FileInputCurrentName","d2FileInputPs","inputFieldId","updateModel","update","files","fileResource","updatedSingleValueEvent","updatedFullValueEvent","updateForSingleValue","valueGetter","d2FileInputDelete","nameGetter","nameSetter","assign","nameIdMap","showAuditHistory","openModal","ops","required","disabled","customOnClick","currentElement","$element","$attrs","CommonUtils","clickedButton","valueClicked","buttonValue","originalValue","tempValue","getDisabledValue","inValue","getDisabledIcon","radioButtonColor","errorStatus","radioButtonImage","$document","onDeselected","preSelected","abortDeselect","documentEventListenerSet","elementClicked","documentClick","modalPresent","calendarPresent","calendarPresentInEvent","parents","off","ngModel","setValidity","numberType","isRequired","$validators","posInt","isPositiveInt","negInt","isNegativeInt","zeroPositiveInt","isZeroOrPositiveInt","int","isInt","ngRequired","dateValidator","futureDateValidator","isAfter","customCoordinateValidator","latitudeValidator","longitudeValidator","optionValidator","TEIService","uniqunessValidatior","attributeData","$asyncValidators","uniqunessValidator","modelValue","viewValue","currentValue","programUrl","ouMode","attUrl","ouId","selectedProgram","programScope","orgUnitScope","search","selectedTeiId","reject","ngDisabled","d2Filters","filters","filterTypes","dateFilter","textFilter","numberFilter","filteredData","start","end","dateComparator","numberComparator","filterText","toLowerCase","vote","hideEmptyRow","hasData","input","rowsPerPage","beingTrimmed","trimmingComplete","beforeTrimming","items","filtered","confidential","trimmed","Array","d2Controllers","hiddenGridColumns","showHideColumns","gridColumn","leafletData","currentLevel","maxZoom","center","lat","lng","zoom","systemSetting","setCoordinateLabel","zoomInLabel","zoomOutLabel","centerMapLabel","contextmenuItems","text","callback","setCoordinate","separator","zoomIn","zoomOut","centerMap","mapDefaults","contextmenu","contextmenuWidth","geojsonMarkerOptions","radius","fillColor","weight","opacity","fillOpacity","marker","m1","draggable","userNotification","headerMessage","errorMesage","highlightFeature","layer","setStyle","dashArray","L","Browser","ie","opera","edge","bringToFront","resetHighlight","pointToLayer","feature","latlng","circleMarker","onEachFeature","properties","_layers","eachLayer","bindContextMenu","contextmenuInheritItems","getGeoJsonByOuLevel","initialize","mode","parent","parentGraph","currentGeojson","getMap","latlngs","features","geometry","coordinates","coord","points","GeoJSON","coordsToLatLng","setView","fitBounds","geocoder","control","keyMapzenSearchApiKey","markers","addTo","c","getLatLng","zoomMap","captureCoordinate","$on","args","model","AuditHistoryDataService","searchPlaceholder","auditColumns","itemList","uniqueRows","reponseData","trackedEntityDataValueAudits","trackedEntityAttributeValueAudits","audit","displayFormName","auditType","modifiedBy","created","sort","OrgUnitFactory","selectedOrgUnitId","expandOrgUnit","path","hasChildren","children","attachOrgUnit","orgUnits","selectedOuFetched","levelsFetched","expandCollapse","setSelectedOrgUnit","icons","getIcons","ndpFrameworkServices","currentStore","selectedMenu","setSelectedMenu","getSelectedMenu","clusterDataSet","setClusterDataSet","getClusterDataSet","getMenu","menuFile","getPeriods","periodType","periodOffset","futurePeriods","period","generator","PeriodGenerator","DatePicker","d2Periods","generateReversedPeriods","filterOpenPeriods","_startDate","padStart","_endDate","iso","getPreviousPeriod","periodId","allPeriods","previousPeriod","getForDates","getQuarters","pe","sortName","DDStorageService","getMappedOptionCombos","oco","getBtaDimensions","dimension","category","catFound","btaDimension","categoryCombo","actualDimension","targetDimension","baselineDimension","dimensionType","bta","actual","baseline","getBsrDimensions","bsrDimension","plannedDimension","approvedDimension","releaseDimension","spentDimension","bsr","planned","approved","release","spent","getLlgFinanceDimensions","sectors","workPlans","programmes","outputs","fundTypes","programmeInfo","workPlanInfo","cogs","categoryOptionGroups","cog","sector","programme","workPlan","categoryCode","hasTargetDimension","isDefault","getActionDataSets","allowMultiOrgUnitEntry","multiOrganisationUnitForms","dss","multiDs","dataSets","pushedDss","toLocaleLowerCase","entryMode","getTargetDataSets","dataSetType","getActionAndTargetDataSets","getByOu","selectedDataSet","legth","getAllByProperty","selectedObjects","getByProperty","selectedObject","dataElementsById","categoryCombosById","_de","getByOptionSet","optionGroups","chain","og","subPrograms","objectives","interventions","getSectors","organisationUnitGroupSets","ogss","ogs","orgUnitGroupSetType","organisationUnitGroups","getByGroup","group","orgUnitGroupType","getByGroupOrgUnitOnly","getByVote","getFinancialData","processed","dv","v","categoryOptionCombo","attributeOptionCombo","lg","llgInfo","prInfo","parentLgCode","parentLgName","subCounty","fundType","cumFinancialYear","periods","periodsBySortName","getDataInBatch","promises","u","dimensions","dx","getData","processData","dataParams","keyDataParams","btaDimensions","reportPeriods","baseLineTargetActualDimensions","dataExists","dataHeaders","performanceOverviewHeaders","totalRows","dataElementRows","hasPhysicalPerformanceData","dataElementRowIndex","tableRows","povTableRows","filterResultData","oc","dimensionId","filterParams","filterTargetData","filterBudgetData","filterBudgetValueData","valueExists","isActionData","extractRange","isTrafficLight","legends","startValue","endValue","getTrafficLight","deId","aoc","legendSets","legendSetsById","defaultLegendSet","descendingIndicatorType","t","colSpan","targetFilter","targetData","hasTargetData","displayActionBudgetData","isRowData","periodStart","periodEnd","denDimensionId","numDimensionId","dm","completenessNum","completenessDen","selectedDataElementGroupSets","expected","available","generateCompletenessInfo","_deg","dh","dataElementGroupsById","deCount","pov","povPercent","tableRow","dataElementCode","dataElementGroup","dataElementGroupSet","styles","hasBudgetData","bVal","dhId","rh","ph","rv","pv","trafficLight","hasResultData","targetValue","ah","th","av","tv","prcnt","povTableRow","dataElementSize","dataElementGroupId","getLocalData","getByOrgUnitAndProgram","faqs","ev","faq","faqResponse","bytesToSize","bytes","sizes","pow","processDocuments","documents","doc","dateUploaded","uploadedBy","storedBy","contentLength","contentType","skipPaging","typeDataElement","fileDataElement","dataElementById","folder","mda","orgUnitName","eventUid","dhis2Event","deleteEvent","delete","put","getMultiple","eventIds","_events","getForMultipleOptionCombos","attributeCategoryUrl","getForMultiplePrograms","pgSize","pg","teis","instances","projects","project","trackedEntity","enrollments","len","relationships","to","getKpi","kpis","trackedEntityInstances","kpi","getProjectKpi","indVal","indRegex","getDataValueSet","Analytics","FinancialDataService","selectedCluster","selectedFiscalYear","clusterPeriods","clusterDataElementGroupSets","clusterGroups","ndpProgramme","degss","dataElementGroupSets","allDataElementGroups","indicatorGroupType","analyticsUrl","budgetSpentReleaseDimensions","pHeaders","prds","clusterPerformanceOverviewHeaders","h","hasClusterData","clusterData","cost","clusterMetaData","selectedDataElementGroup","selectedKra","maxPeriod","processedData","clusterColumnId","clusterProgramData","A","M","N","X","cpd","st","pcnt","processDataElement","disaggregation","dataSet","pt","votes","indicatorGroups","groupSets","indicatorGroupSets","gs","totalDataElements","getDataElement","ndpFrameworkFilters","programmeDataElement","f","ndpFrameworkDirectives","d2Blur","tabMenus","highest","selector","goNext","isolateScope","next","goPrev","prev","selectedLabel","availableLabel","displayAttr","selected","current","dataLoading","scopeAttr","loading","newValue","oldValue","filterOut","original","toFilter","entity","refreshAvailable","addAll","remove","removeAll","ndpFrameworkControllers","ndpFramework","SelectedMenuService","PeriodService","OptionComboService","ResulstChainService","DataValueService","ClusterDataService","reportReady","optionSetsById","ndpObjectives","ndpProgrammes","selectedNdpProgram","selectedSubProgramme","selectedPeriods","openFuturePeriods","selectedPeriodType","explanations","commentRow","horizontalMenus","view","class","getOutputs","populateMenu","resetDataView","piapResultsChain","subProgrammes","resultsFrameworkChain","piapObjectives","selectedObjective","selectedIntervention","getBasePeriod","basePeriod","getBase","optionGroupSets","btaResponse","bsrResponse","selectedPeriodNames","performanceOverviewLegends","periodsById","getAnalyticsData","selectedResultsLevel","reportStarted","row","percent","getClusterData","clusterReportReady","clusterReportStarted","showOrgUnitTree","modalInstance","validOrgUnits","selectedOu","exportData","blob","Blob","getElementById","innerHTML","saveAs","getIndicatorDictionary","dictionaryItem","fullFetched","getExplanations","showExplanation","dataValueSetUrl","comment","explanation","exp","getDataValueExplanation","windowClass","getCoverage","currentView","find","resetTheView","menu","$event","displayProjectOutputs","displayDepartmentOutPuts","clusters","getOutcomes","isNDPProgramme","ndpProgram","sectorsOpgs","clusterOutcomes","getHeaderClass","selectedNdp","selectedNDP","indicatorGroupSetType","getCompleteness","DictionaryService","selectedDataElementGroups","classificationGroupSets","classificationGroups","classificationDataElements","dataSetsById","dictionaryItems","selectedDictionary","dictionaryHeaders","groupSetSize","financialPerformance","showProjectDetails","classificationGroup","invalid","resetView","getDataElementGroupSetsForNdp","getSelectedDataElementGroups","selectedClassification","fetchIndicators","sortHeader","colSize","fetch","jumpToPage","resetPageSize","sortItems","filterIndicators","showDetails","itemExists","horizontalMenu","DocumentService","fetchExplanation","dataPeriods","dataVotes","votesById","details","periodTypes","decc","selectedCoc","dscc","selectedAoc","pushedVotes","pushedPeriods","attachment","docs","downloadFile","stopPropagation","EventService","showFaqResponse","selectedFaq","programType","programDomain","selectedProgramStage","loadProgramDetails","prDes","dynamicHeaders","prDe","fetchEvents","showReportFilters","kra","goals","selectedGoal","physicalPerformance","kras","getGoals","dataElementGroupSetName","pHeadersLength","displayVision2040","NDPMenuService","slides","currentNDP","isCurrentNDP","menuItems","root","address","href","hasNoNDP","setBottomMenu","domain","bottomMenu","goToMenu","menuLink","getMenuStyle","getTreeMenuStyle","menuItem","isSubMenuOpen","NPD","toggleSubMenu","menuName","getObjectives","populateMenuOld","getAnalyticsDataOld","theRows","descDataElement","selectedOptionSet","ndpDocumentFolders","programDocumentFolders","selectedNdpDocumentFolder","selectedProgrammeDocumentFolder","fileInput","showFileUpload","isProgrammeDocument","staticHeaders","documentFolderType","docDe","typeDe","isDocumentFolder","progDe","lenth","OrgUnitGroupSetService","selectedVote","selectedSector","getInterventions","programObjective","llgs","legendSet","groupSetIds","groupSetId","activeHorizontalMenu","resultData","performanceData","physicalPerformanceData","cumulativeData","filterData","Duw5yep8Vae","voteDataElementGroupSets","lgs","resultsFrameworkLevel","piapResultsChainByCode","mdas","hasEmptyRows","treeLoadingStarted","cancel","ProgramFactory","ProjectService","showOnlyCoreProject","coreProjectAttribute","bac","timePerformance","costPerformance","showProjectFilter","performanceHeaders","resetData","fetchProgramDetails","prstDe","fetchProjects","projectFetchStarted","projectsFetched","searchProjects","programsById","kpiProgram","getProjectDetails","selectedProject","projectKpis","selectedSdg","selectedTarget","targets","selectedSdgGoal","selectedIndicator","getTargets","sdgGoals","costData","costEffData","sdgView","getRFInformation","$route","clear","reload","vision2040","charts","tables","maps","ccs","downloadLabel","getBaselineValue","getTargetValue","getVision2040Value"],"mappings":"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","file":"app-1b2b41282612cf9014b8.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1b2b41282612cf9014b8","require('./app.js');\n\n\n// WEBPACK FOOTER //\n// ./scripts/index.js","import '../core/ndp-framework.js'\n\nimport './resultsFrameworkModule.js'\n\n// common files\nimport '../common/dhis2.metadata.js'\nimport '../common/dhis2.angular.services.js'\nimport '../common/dhis2.angular.directives.js'\nimport '../common/dhis2.angular.validations.js'\nimport '../common/dhis2.angular.filters.js'\nimport '../common/dhis2.angular.controllers.js'\n\n// App files\nimport '../scripts/services.js'\nimport '../scripts/filters.js'\nimport '../scripts/directives.js'\nimport '../scripts/controllers.js'\n\nimport '../components/action/action-output-controller.js'\nimport '../components/cluster/cluster-controller.js'\nimport '../components/completeness/completeness-controller.js'\nimport '../components/dictionary/dictionary-controller.js'\nimport '../components/dictionary/dictionary-details-controller.js'\nimport '../components/explanation/datavalue-explanation-controller.js'\nimport '../components/faq/faq-controller.js'\nimport '../components/goal/goal-controller.js'\nimport '../components/home/home-controller.js'\nimport '../components/intermediate-outcome/intermediate-outcome-controller.js'\nimport '../components/library/library-controller.js'\nimport '../components/llg/llg-controller.js'\nimport '../components/log/log-controller.js'\nimport '../components/mda/mda-controller.js'\nimport '../components/objective/objective-controller.js'\nimport '../components/outcome/outcome-controller.js'\nimport '../components/output/output-controller.js'\nimport '../components/outree/orgunit-controller.js'\nimport '../components/policy/policy-controller.js'\nimport '../components/project/project-controller.js'\nimport '../components/sdg/sdg-controller.js'\nimport '../components/settings/settings-controller.js'\nimport '../components/vision/vision-controller.js'\n\nlet scriptElement = document.createElement(\"script\");\nscriptElement.type = \"text/javascript\";\nscriptElement.src = env.dhisConfig.apiRoot + \"/api/files/script\";\ndocument.body.appendChild(scriptElement);\n\nlet cssElement = document.createElement(\"css\");\ncssElement.type = \"text/css\";\ncssElement.src = env.dhisConfig.apiRoot + \"/api/files/style\";\ndocument.body.appendChild(cssElement);\n\njQuery(function () {\n    Dhis2HeaderBar.initHeaderBar(document.querySelector('#header'), env.dhisConfig.apiRoot + '/api', { noLoadingIndicator: true });\n});\n\n/* App Module */\nangular.module('ndpFramework')\n\n.value('DHIS2URL', env.dhisConfig.apiRoot)\n\n.config(function($httpProvider, $routeProvider, $translateProvider) {\n\n    $httpProvider.defaults.useXDomain = true;\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n\n    $routeProvider.when('/home', {\n        templateUrl:'components/home/home.html',\n        controller: 'HomeController'\n    }).when('/sdg', {\n        templateUrl:'components/sdg/sdg-status.html',\n        controller: 'SDGController'\n    }).otherwise({\n        redirectTo : '/home'\n    });\n\n    $translateProvider.preferredLanguage('en');\n    $translateProvider.useSanitizeValueStrategy('escaped');\n    $translateProvider.useLoader('i18nLoader');\n})\n\n.run(function($rootScope){\n    $rootScope.maxOptionSize = 1000;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/app.js","\n/* global dhis2, angular, selection, i18n_ajax_login_failed, _, Promise, await */\n\ndhis2.util.namespace('dhis2.ndp');\n\n// whether current user has any organisation units\ndhis2.ndp.emptyOrganisationUnits = false;\n\nvar DHIS2URL = '..'\n\nvar i18n_no_orgunits = 'No organisation unit attached to current user, no data entry possible';\nvar i18n_offline_notification = 'You are offline';\nvar i18n_online_notification = 'You are online';\nvar i18n_ajax_login_failed = 'Login failed, check your username and password and try again';\n\nvar optionSetsInPromise = [];\nvar attributesInPromise = [];\ndhis2.ndp.batchSize = 50;\n\ndhis2.ndp.store = null;\ndhis2.ndp.metaDataCached = dhis2.ndp.metaDataCached || false;\ndhis2.ndp.memoryOnly = $('html').hasClass('ie7') || $('html').hasClass('ie8');\nvar adapters = [];\nif( dhis2.ndp.memoryOnly ) {\n    adapters = [ dhis2.storage.InMemoryAdapter ];\n} else {\n    adapters = [ dhis2.storage.IndexedDBAdapter, dhis2.storage.DomLocalStorageAdapter, dhis2.storage.InMemoryAdapter ];\n}\n\ndhis2.ndp.store = new dhis2.storage.Store({\n    name: 'dhis2ndp',\n    adapters: [dhis2.storage.IndexedDBAdapter, dhis2.storage.DomSessionStorageAdapter, dhis2.storage.InMemoryAdapter],\n    objectStores: ['dataElements', 'dataElementGroups', 'dataElementGroupSets', 'dataSets', 'optionSets', 'categoryCombos', 'attributes', 'ouLevels', 'programs', 'legendSets', 'categoryOptionGroupSets', 'optionGroups', 'optionGroupSets']\n});\n\n(function($) {\n    $.safeEach = function(arr, fn)\n    {\n        if (arr)\n        {\n            $.each(arr, fn);\n        }\n    };\n})(jQuery);\n\n/**\n * Page init. The order of events is:\n *\n * 1. Load ouwt\n * 2. Load meta-data (and notify ouwt)\n *\n */\n$(document).ready(function()\n{\n    $.ajaxSetup({\n        type: 'POST',\n        cache: false\n    });\n\n    $('#loaderSpan').show();\n});\n\n$(document).bind('dhis2.online', function(event, loggedIn)\n{\n    if (loggedIn)\n    {\n        if (dhis2.ndp.emptyOrganisationUnits) {\n            setHeaderMessage(i18n_no_orgunits);\n        }\n        else {\n            setHeaderDelayMessage(i18n_online_notification);\n        }\n    }\n    else\n    {\n        var form = [\n            '<form style=\"display:inline;\">',\n            '<label for=\"username\">Username</label>',\n            '<input name=\"username\" id=\"username\" type=\"text\" style=\"width: 70px; margin-left: 10px; margin-right: 10px\" size=\"10\"/>',\n            '<label for=\"password\">Password</label>',\n            '<input name=\"password\" id=\"password\" type=\"password\" style=\"width: 70px; margin-left: 10px; margin-right: 10px\" size=\"10\"/>',\n            '<button id=\"login_button\" type=\"button\">Login</button>',\n            '</form>'\n        ].join('');\n\n        setHeaderMessage(form);\n        ajax_login();\n    }\n});\n\n$(document).bind('dhis2.offline', function()\n{\n    if (dhis2.ndp.emptyOrganisationUnits) {\n        setHeaderMessage(i18n_no_orgunits);\n    }\n    else {\n        setHeaderMessage(i18n_offline_notification);\n    }\n});\n\nfunction ajax_login()\n{\n    $('#login_button').bind('click', function()\n    {\n        var username = $('#username').val();\n        var password = $('#password').val();\n\n        $.post('../dhis-web-commons-security/login.action', {\n            'j_username': username,\n            'j_password': password\n        }).success(function()\n        {\n            var ret = dhis2.availability.syncCheckAvailability();\n\n            if (!ret)\n            {\n                alert(i18n_ajax_login_failed);\n            }\n        });\n    });\n}\n\n// -----------------------------------------------------------------------------\n// Metadata downloading\n// -----------------------------------------------------------------------------\ndhis2.ndp.downloadDataElements = function( dataElementType )\n{\n    var def = $.Deferred();\n    dhis2.ndp.store.open().then(function(){\n        getMetaDataElementsByType( dataElementType ).then(function( metaDes ){\n            filterMissingDataElements(metaDes).then(function( missingDes ){\n                getDataElements(missingDes).then(function(){\n                    def.resolve();\n                });\n            });\n        });\n    });\n    return def.promise();\n};\n\ndhis2.ndp.downloadGroupSets = function( code, groupSetType )\n{\n    var def = $.Deferred();\n    dhis2.ndp.store.open().then(function(){\n        getMetaDataElementGroupSetsByType( code, groupSetType ).then(function( metaDegs ){\n            filterMissingDataElementGroupSets(metaDegs).then(function( missingDegs ){\n                getDataElementGroupSets(missingDegs).then(function( degs ){\n                    getDataElementGroups(degs).then(function( des ){\n                        getDataElements(des).then(function(){\n                            def.resolve();\n                        });\n                    });\n                });\n            });\n        });\n    });\n    return def.promise();\n};\n\ndhis2.ndp.downloadMetaData = function()\n{\n    DHIS2URL = env.dhisConfig.apiRoot;\n\n    var metadataCached = JSON.parse(sessionStorage.getItem('METADATA_CACHED'));\n\n    if ( metadataCached ){\n        return Promise.resolve();\n    }\n\n    console.log('Loading required meta-data');\n    \n    return dhis2.ndp.store.open()\n\n        .then( getUserAccessibleDataSets )\n        .then( getUserAccessiblePrograms )\n\n        //fetch option sets\n        .then( getMetaOptionSets )\n        .then( filterMissingOptionSets )\n        .then( getOptionSets )\n\n        //fetch category combos\n        .then( getMetaCategoryCombos )\n        .then( filterMissingCategoryCombos )\n        .then( getCategoryCombos )\n\n        //fetch custom attributes\n        .then( getMetaAttributes )\n        .then( filterMissingAttributes )\n        .then( getAttributes )\n\n        //fetch programs\n        .then( getMetaPrograms )\n        .then( filterMissingPrograms )\n        .then( getPrograms )\n\n        //fetch legendSets\n        .then( getMetaLegendSets )\n        .then( filterMissingLegendSets )\n        .then( getLegendSets )\n\n        //fetch categoryOptionGroupSets\n        .then( getMetaCategoryOptionGroupSets )\n        .then( filterMissingCategoryOptionGroupSets )\n        .then( getCategoryOptionGroupSets )\n\n        //fetch optionGroups\n        .then( getMetaOptionGroups )\n        .then( filterMissingOptionGroups )\n        .then( getOptionGroups )\n\n        //fetch optionGroupSets\n        .then( getMetaOptionGroupSets )\n        .then( filterMissingOptionGroupSets )\n        .then( getOptionGroupSets );\n};\n\n\ndhis2.ndp.downloadAllMetaData = function()\n{\n    var metadataCached = JSON.parse(sessionStorage.getItem('ALL_METADATA_CACHED'));\n\n    if ( metadataCached ){\n        return Promise.resolve();\n    }\n\n    console.log('Loading required meta-data');\n\n    return dhis2.ndp.store.open()\n\n        .then( getUserAccessibleDataSets )\n        .then( getUserAccessiblePrograms )\n        .then( getOrgUnitLevels )\n        .then( getSystemSetting )\n\n        //fetch data elements\n        .then( getMetaDataElements )\n        .then( filterMissingDataElements )\n        .then( getDataElements )\n\n        //fetch data element groups\n        .then( getMetaDataElementGroups )\n        .then( filterMissingDataElementGroups )\n        .then( getDataElementGroups )\n\n        //fetch data element groupsets\n        .then( getMetaDataElementGroupSets )\n        .then( filterMissingDataElementGroupSets )\n        .then( getDataElementGroupSets )\n\n        //fetch data sets\n        .then( getMetaDataSets )\n        .then( filterMissingDataSets )\n        .then( getDataSets )\n\n        //fetch option sets\n        .then( getMetaOptionSets )\n        .then( filterMissingOptionSets )\n        .then( getOptionSets )\n\n        //fetch category combos\n        .then( getMetaCategoryCombos )\n        .then( filterMissingCategoryCombos )\n        .then( getCategoryCombos )\n\n        //fetch custom attributes\n        .then( getMetaAttributes )\n        .then( filterMissingAttributes )\n        .then( getAttributes )\n\n        //fetch programs\n        .then( getMetaPrograms )\n        .then( filterMissingPrograms )\n        .then( getPrograms )\n\n        //fetch legendSets\n        .then( getMetaLegendSets )\n        .then( filterMissingLegendSets )\n        .then( getLegendSets )\n\n        //fetch categoryOptionGroupSets\n        .then( getMetaCategoryOptionGroupSets )\n        .then( filterMissingCategoryOptionGroupSets )\n        .then( getCategoryOptionGroupSets )\n\n        //fetch optionGroups\n        .then( getMetaOptionGroups )\n        .then( filterMissingOptionGroups )\n        .then( getOptionGroups );\n};\n\nfunction getUserAccessibleDataSets(){\n    return dhis2.metadata.getMetaObject(null, 'ACCESSIBLE_DATASETS', DHIS2URL + '/api/dataSets.json', 'fields=id,access[data[write]]&paging=false', 'sessionStorage', dhis2.ndp.store);\n}\n\nfunction getUserAccessiblePrograms(){\n    return dhis2.metadata.getMetaObject(null, 'ACCESSIBLE_PROGRAMS', DHIS2URL + '/api/programs.json', 'fields=id,access[data[read,write]],programStages[id,access[data[read,write]]]&paging=false', 'sessionStorage', dhis2.ndp.store);\n}\n\nfunction getOrgUnitLevels()\n{\n    dhis2.ndp.store.getKeys( 'ouLevels').done(function(res){\n        if(res.length > 0){\n            return;\n        }\n        return dhis2.metadata.getMetaObjects('ouLevels', 'organisationUnitLevels', DHIS2URL + '/api/organisationUnitLevels.json', 'fields=id,displayName,level&paging=false', 'idb', dhis2.ndp.store);\n    });\n}\n\nfunction getSystemSetting(){\n    if(localStorage['SYSTEM_SETTING']){\n       return;\n    }\n    return dhis2.metadata.getMetaObject(null, 'SYSTEM_SETTING', DHIS2URL + '/api/systemSettings?key=keyUiLocale&key=keyCalendar&key=keyDateFormat&key=multiOrganisationUnitForms', '', 'localStorage', dhis2.ndp.store);\n}\n\nfunction getMetaCategoryCombos(){\n    return dhis2.metadata.getMetaObjectIds('categoryCombos', DHIS2URL + '/api/categoryCombos.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingCategoryCombos( objs ){\n    return dhis2.metadata.filterMissingObjIds('categoryCombos', dhis2.ndp.store, objs);\n}\n\nfunction getCategoryCombos( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'categoryCombos', 'categoryCombos', DHIS2URL + '/api/categoryCombos.json', 'paging=false&fields=id,displayName,code,skipTotal,isDefault,categoryOptionCombos[id,displayName,categoryOptions[displayName,id]],categories[id,displayName,code,dimension,dataDimensionType,attributeValues[value,attribute[id,name,valueType,code]],categoryOptions[id,displayName,code,attributeValues[value,attribute[id,code,valueType]]]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getLinkedMetaDataElements( dataElements ){\n    return dhis2.metadata.getMetaObjectIds('dataElements', DHIS2URL + '/api/dataElements.json', 'paging=false&fields=id,version');\n}\n\nfunction getMetaDataElementsByType( type ){\n    return dhis2.metadata.getMetaObjectIds('dataElements', DHIS2URL + '/api/dataElements.json', 'paging=false&fields=id,version&filter=attributeValues.value:eq:' + type );\n}\n\nfunction getMetaDataElements(){\n    return dhis2.metadata.getMetaObjectIds('dataElements', DHIS2URL + '/api/dataElements.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingDataElements( objs ){\n    return dhis2.metadata.filterMissingObjIds('dataElements', dhis2.ndp.store, objs);\n}\n\nfunction getDataElements( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'dataElements', 'dataElements', DHIS2URL + '/api/dataElements.json', 'paging=false&fields=id,code,displayName,aggregationType,shortName,description,formName,valueType,optionSetValue,optionSet[id],legendSets[id],attributeValues[value,attribute[id,name,valueType,code]],categoryCombo[id]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaDataElementGroups(){\n    return dhis2.metadata.getMetaObjectIds('dataElementGroups', DHIS2URL + '/api/dataElementGroups.json', 'paging=false&fields=id,version');\n}\n\nfunction getLinkedMetaDataElementGroups( groups ){\n    return dhis2.metadata.getMetaObjectIds('dataElementGroups', DHIS2URL + '/api/dataElementGroups.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingDataElementGroups( objs ){\n    return dhis2.metadata.filterMissingObjIds('dataElementGroups', dhis2.ndp.store, objs);\n}\n\nfunction getDataElementGroups( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'dataElementGroups', 'dataElementGroups', DHIS2URL + '/api/dataElementGroups.json', 'paging=false&fields=id,displayName,code,description,dataElements[id],attributeValues[value,attribute[id,name,valueType,code]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaDataElementGroupSetsByType( type, code ){\n    var filter = '';\n\n    if ( type !== '' ){\n        filter += '&filter=attributeValues.value:eq:' + type;\n    }\n\n    if ( code !== '' ){\n        filter += \"&code:$ilike:\" + code;\n    }\n\n    return dhis2.metadata.getMetaObjectIds('dataElementGroupSets', DHIS2URL + '/api/dataElementGroupSets.json', 'paging=false&fields=id,version' + filter );\n}\n\nfunction getMetaDataElementGroupSets(){\n    return dhis2.metadata.getMetaObjectIds('dataElementGroupSets', DHIS2URL + '/api/dataElementGroupSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingDataElementGroupSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('dataElementGroupSets', dhis2.ndp.store, objs);\n}\n\nfunction getDataElementGroupSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'dataElementGroupSets', 'dataElementGroupSets', DHIS2URL + '/api/dataElementGroupSets.json', 'paging=false&fields=id,code,description,displayName,dataElementGroups[id,displayName],attributeValues[value,attribute[id,name,valueType,code]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaDataSets(){\n    return dhis2.metadata.getMetaObjectIds('dataSets', DHIS2URL + '/api/dataSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingDataSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('dataSets', dhis2.ndp.store, objs);\n}\n\nfunction getDataSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'dataSets', 'dataSets', DHIS2URL + '/api/dataSets.json', 'paging=false&fields=id,periodType,displayName,version,categoryCombo[id],attributeValues[value,attribute[id,name,valueType,code]],organisationUnits[code,id],dataSetElements[id,dataElement[id]]', 'idb', dhis2.ndp.store, '');\n}\n\nfunction getMetaOptionSets(){\n    return dhis2.metadata.getMetaObjectIds('optionSets', DHIS2URL + '/api/optionSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingOptionSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('optionSets', dhis2.ndp.store, objs);\n}\n\nfunction getOptionSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'optionSets', 'optionSets', DHIS2URL + '/api/optionSets.json', 'paging=false&fields=id,displayName,code,version,valueType,attributeValues[value,attribute[id,name,valueType,code]],options[id,displayName,code,attributeValues[value,attribute[id,name,valueType,code]]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaIndicatorGroups(){\n    return dhis2.metadata.getMetaObjectIds('indicatorGroups', DHIS2URL + '/api/indicatorGroups.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingIndicatorGroups( objs ){\n    return dhis2.metadata.filterMissingObjIds('indicatorGroups', dhis2.ndp.store, objs);\n}\n\nfunction getIndicatorGroups( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'indicatorGroups', 'indicatorGroups', DHIS2URL + '/api/indicatorGroups.json', 'paging=false&fields=id,displayName,attributeValues[value,attribute[id,name,valueType,code]],indicators[id,displayName,denominatorDescription,numeratorDescription,dimensionItem,numerator,denominator,annualized,dimensionType,indicatorType[id,displayName,factor,number]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaAttributes(){\n    return dhis2.metadata.getMetaObjectIds('attributes', DHIS2URL + '/api/attributes.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingAttributes( objs ){\n    return dhis2.metadata.filterMissingObjIds('attributes', dhis2.ndp.store, objs);\n}\n\nfunction getAttributes( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'attributes', 'attributes', DHIS2URL + '/api/attributes.json', 'paging=false&fields=:all,!access,!lastUpdatedBy,!lastUpdated,!created,!href,!user,!translations,!favorites,optionSet[id,displayName,code,options[id,displayName,code,sortOrder]]', 'idb', dhis2.ndp.store);\n}\n\nfunction getMetaPrograms(){\n    return dhis2.metadata.getMetaObjectIds('programs', DHIS2URL + '/api/programs.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingPrograms( objs ){\n    return dhis2.metadata.filterMissingObjIds('programs', dhis2.ndp.store, objs);\n}\n\nfunction getPrograms( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'programs', 'programs', DHIS2URL + '/api/programs.json', 'paging=false&fields=*,programSections[sortOrder,displayName,trackedEntityAttributes],programTrackedEntityAttributes[*,trackedEntityAttribute[*,attributeValues[value,attribute[id,name,valueType,code]]]],categoryCombo[id],attributeValues[value,attribute[id,name,valueType,code]],organisationUnits[id,level],programIndicators[id,displayName,analyticsType,expression],programStages[*,programStageDataElements[id,displayInReports,dataElement[*,attributeValues[value,attribute[id,name,valueType,code]]]]]', 'idb', dhis2.ndp.store, dhis2.metadata.processObject);\n}\n\nfunction getMetaLegendSets(){\n    return dhis2.metadata.getMetaObjectIds('legendSets', DHIS2URL + '/api/legendSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingLegendSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('legendSets', dhis2.ndp.store, objs);\n}\n\nfunction getLegendSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'legendSets', 'legendSets', DHIS2URL + '/api/legendSets.json', 'paging=false&fields=id,code,displayName,attributeValues[value,attribute[id,name,valueType,code]],legends[id,name,startValue,endValue,color]', 'idb', dhis2.ndp.store, dhis2.metadata.processObject);\n}\n\nfunction getMetaCategoryOptionGroupSets(){\n    return dhis2.metadata.getMetaObjectIds('categoryOptionGroupSets', DHIS2URL + '/api/categoryOptionGroupSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingCategoryOptionGroupSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('categoryOptionGroupSets', dhis2.ndp.store, objs);\n}\n\nfunction getCategoryOptionGroupSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'categoryOptionGroupSets', 'categoryOptionGroupSets', DHIS2URL + '/api/categoryOptionGroupSets.json', 'paging=false&fields=id,code,displayName,attributeValues[value,attribute[id,name,valueType,code]],categoryOptionGroups[id,displayName,code,categoryOptions[id,displayName,code]]', 'idb', dhis2.ndp.store, dhis2.metadata.processObject);\n}\n\nfunction getMetaOptionGroups(){\n    return dhis2.metadata.getMetaObjectIds('optionGroups', DHIS2URL + '/api/optionGroups.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingOptionGroups( objs ){\n    return dhis2.metadata.filterMissingObjIds('optionGroups', dhis2.ndp.store, objs);\n}\n\nfunction getOptionGroups( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'optionGroups', 'optionGroups', DHIS2URL + '/api/optionGroups.json', 'fields=id,displayName,code,optionSet[id],options[id,displayName,code]', 'idb', dhis2.ndp.store, dhis2.metadata.processObject);\n}\n\nfunction getMetaOptionGroupSets(){\n    return dhis2.metadata.getMetaObjectIds('optionGroupSets', DHIS2URL + '/api/optionGroupSets.json', 'paging=false&fields=id,version');\n}\n\nfunction filterMissingOptionGroupSets( objs ){\n    return dhis2.metadata.filterMissingObjIds('optionGroupSets', dhis2.ndp.store, objs);\n}\n\nfunction getOptionGroupSets( ids ){\n    return dhis2.metadata.getBatches( ids, dhis2.ndp.batchSize, 'optionGroupSets', 'optionGroupSets', DHIS2URL + '/api/optionGroupSets.json', 'fields=id,displayName,code,optionSet[id],optionGroups[id,displayName,code,options[id,displayName,code]]', 'idb', dhis2.ndp.store, dhis2.metadata.processObject);\n}\n\n\n// WEBPACK FOOTER //\n// ./core/ndp-framework.js","export default angular.module('ndpFramework', [\n    'ui.bootstrap',\n    'ngRoute',\n    'ngCookies',\n    'ngSanitize',\n    'ngMessages',\n    'ndpFrameworkServices',\n    'ndpFrameworkFilters',\n    'ndpFrameworkDirectives',\n    'ndpFrameworkControllers',\n    'd2Directives',\n    'd2Filters',\n    'd2Services',\n    'd2Controllers',\n    'angularLocalStorage',\n    'ui.select',\n    'ui.select2',\n    'pascalprecht.translate'\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/resultsFrameworkModule.js","\"use strict\";\n\n/*\n * Copyright (c) 2004-2014, University of Oslo\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n * * Neither the name of the HISP project nor the names of its contributors may\n *   be used to endorse or promote products derived from this software without\n *   specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\ndhis2.util.namespace('dhis2.metadata');\n\ndhis2.metadata.custSeparator   = '.';\ndhis2.metadata.formulaRegex    = /#\\{.+?\\}/g;\ndhis2.metadata.expressionRegex = /#{.*?\\}/g;\ndhis2.metadata.operatorRegex   = /[#\\{\\}]/g;\n\ndhis2.metadata.expressionMatcher = function( obj, src, des, expressionPattern, operandPattern, src2){\n    var match;\n    if( src2 ){\n        if( obj[src] && obj[src][src2] && expressionPattern && operandPattern && obj[des]){\n            while (match = expressionPattern.exec( obj[src][src2] ) ) {\n                match[0] = match[0].replace( operandPattern, '' );\n                obj[des].push(match[0].split('.')[0]);\n            }\n        }\n    }\n    else{\n        if( obj[src] && expressionPattern && operandPattern && obj[des]){\n            while (match = expressionPattern.exec( obj[src] ) ) {\n                match[0] = match[0].replace( operandPattern, '' );\n                obj[des].push(match[0]);\n            }\n        }\n    }\n\n    return obj;\n};\n\ndhis2.metadata.cartesianProduct = function( arrays ){\n\n    var i, j, l, m, a1, o = [];\n    if (!arrays || arrays.length == 0) return arrays;\n\n    a1 = arrays.splice(0,1);\n    arrays = dhis2.metadata.cartesianProduct( arrays );\n    for (i = 0, l = a1[0].length; i < l; i++) {\n        if (arrays && arrays.length) for (j = 0, m = arrays.length; j < m; j++)\n            o.push([a1[0][i]].concat(arrays[j]));\n        else\n            o.push([a1[0][i]]);\n    }\n    return o;\n};\n\ndhis2.metadata.chunk = function( array, size ){\n\tif( !array || !array.length || !size || size < 1 ){\n            return [];\n\t}\n\n\tvar groups = [];\n\tvar chunks = array.length / size;\n\tfor (var i = 0, j = 0; i < chunks; i++, j += size) {\n        groups[i] = array.slice(j, j + size);\n    }\n\n    return groups;\n};\n\ndhis2.metadata.processMetaDataAttribute = function( obj )\n{\n    if(!obj){\n        return;\n    }\n\n    if(obj.attributeValues){\n        for(var i=0; i<obj.attributeValues.length; i++){\n            if(obj.attributeValues[i].value && obj.attributeValues[i].attribute && obj.attributeValues[i].attribute.code && obj.attributeValues[i].attribute.valueType){\n            \tif( obj.attributeValues[i].attribute.valueType === 'BOOLEAN' || obj.attributeValues[i].attribute.valueType === 'TRUE_ONLY' ){\n                    if( obj.attributeValues[i].value === 'true' ){\n                        obj[obj.attributeValues[i].attribute.code] = true;\n                    }\n            \t}\n            \telse if( obj.attributeValues[i].attribute.valueType === 'NUMBER' && obj.attributeValues[i].value ){\n                    obj[obj.attributeValues[i].attribute.code] = parseFloat( obj.attributeValues[i].value );\n            \t}\n                else{\n                    obj[obj.attributeValues[i].attribute.code] = obj.attributeValues[i].value;\n                }\n            }\n        }\n    }\n\n    //delete obj.attributeValues;\n\n    return obj;\n};\n\ndhis2.metadata.getMetaDataAttribute = function( obj )\n{\n    if(!obj){\n        return;\n    }\n\n    var metaAttribute = {};\n    if(obj.attributeValues){\n        for(var i=0; i<obj.attributeValues.length; i++){\n            if(obj.attributeValues[i].value && obj.attributeValues[i].attribute && obj.attributeValues[i].attribute.code && obj.attributeValues[i].attribute.valueType){\n            \tif( obj.attributeValues[i].attribute.valueType === 'BOOLEAN' || obj.attributeValues[i].attribute.valueType === 'TRUE_ONLY' ){\n                    if( obj.attributeValues[i].value === 'true' ){\n                        metaAttribute[obj.attributeValues[i].attribute.code] = true;\n                    }\n            \t}\n            \telse if( obj.attributeValues[i].attribute.valueType === 'NUMBER' && obj.attributeValues[i].value ){\n                    obj[obj.attributeValues[i].attribute.code] = parseInt( obj.attributeValues[i].value );\n                    metaAttribute[obj.attributeValues[i].attribute.code] = parseInt( obj.attributeValues[i].value );\n            \t}\n                else{\n                    metaAttribute[obj.attributeValues[i].attribute.code] = obj.attributeValues[i].value;\n                }\n            }\n        }\n    }\n\n    //delete obj.attributeValues;\n\n    return metaAttribute;\n};\n\ndhis2.metadata.getMetaObjectIds = function( objNames, url, filter )\n{\n    var def = $.Deferred();\n    var objs = [];\n    $.ajax({\n        url: encodeURI( url ),\n        type: 'GET',\n        data: encodeURI( filter )\n    }).done( function(response) {\n        _.each( _.values( response[objNames] ), function ( obj ) {\n        \tobjs.push( obj );\n        });\n        def.resolve( objs );\n\n    }).fail(function(){\n        def.resolve( [] );\n    });\n\n    return def.promise();\n};\n\ndhis2.metadata.filterMissingObjIds  = function( store, db, objs )\n{\n    return dhis2.metadata.filterMissingObjIdsWithCheck(store, db, objs);\n    /*var def = $.Deferred();\n\n    if( !objs || !objs.length || objs.length < 1){\n        def.resolve( [] );\n    }\n    else{\n        var objIds = [];\n        _.each( _.values( objs ), function ( obj ) {\n            objIds.push( obj.id );\n        });\n        def.resolve( objIds );\n    }\n\n    return def.promise();*/\n};\n\ndhis2.metadata.filterMissingObjIdsWithCheck  = function( store, db, objs )\n{\n    var mainDef = $.Deferred();\n    var mainPromise = mainDef.promise();\n\n    var def = $.Deferred();\n    var promise = def.promise();\n\n    var builder = $.Deferred();\n    var build = builder.promise();\n\n    if( !objs || !objs.length || objs.length < 1){\n        mainDef.resolve( [] );\n    }\n    else{\n        var missingObjIds = [];\n        _.each( _.values( objs ), function ( obj ) {\n            build = build.then(function() {\n                var d = $.Deferred();\n                var p = d.promise();\n                db.get(store, obj.id).done(function(o) {\n                    if( !o ) {\n                        missingObjIds.push( obj.id );\n                    }\n                    else{\n                        if( obj.version && o.version != obj.version ){\n                            missingObjIds.push( obj.id );\n                        }\n                    }\n                    d.resolve();\n                });\n\n                return p;\n            });\n        });\n\n        build.done(function() {\n            def.resolve();\n            promise = promise.done( function () {\n                mainDef.resolve( missingObjIds );\n            });\n        }).fail(function(){\n            mainDef.resolve( [] );\n        });\n\n        builder.resolve();\n    }\n\n    return mainPromise;\n};\n\ndhis2.metadata.getBatches = function( ids, batchSize, store, objs, url, filter, storage, db, func )\n{\n    var mainDef = $.Deferred();\n    var mainPromise = mainDef.promise();\n\n    var def = $.Deferred();\n    var promise = def.promise();\n\n    var builder = $.Deferred();\n    var build = builder.promise();\n\n    if( !ids || !ids.length || ids.length < 1){\n        mainDef.resolve( [] );\n    }\n    else{\n        var batches = dhis2.metadata.chunk( ids, batchSize );\n        var results = [];\n        _.each( _.values( batches ), function ( batch ) {\n            promise = promise.then(function( result ){\n                if ( result && result.length ){\n                    results = results.concat( result );\n                }\n                return dhis2.metadata.fetchBatchItems( batch, store, objs, url, filter, storage, db, func );\n            });\n        });\n\n        build.done(function() {\n            def.resolve();\n            promise = promise.done( function ( result ) {\n                if ( result && result.length ){\n                    results = results.concat( result );\n                }\n                mainDef.resolve( results );\n            } );\n\n        }).fail(function(){\n            mainDef.resolve( [] );\n        });\n\n        builder.resolve();\n    }\n\n    return mainPromise;\n};\n\ndhis2.metadata.fetchBatchItems = function( batch, store, objs, url, filter, storage, db, func )\n{\n    var ids = '[' + batch.toString() + ']';\n    filter = filter + '&filter=id:in:' + ids;\n    return dhis2.metadata.getMetaObjects( store, objs, url, filter, storage, db, func );\n};\n\ndhis2.metadata.getMetaObjects = function( store, objs, url, filter, storage, db, func )\n{\n    var def = $.Deferred();\n\n    $.ajax({\n        url: encodeURI( url ),\n        type: 'GET',\n        data: encodeURI( filter )\n    }).done(function(response) {\n        if(response[objs]){\n            var count = 0;\n            _.each( _.values( response[objs] ), function ( obj ) {\n                obj = dhis2.metadata.processMetaDataAttribute( obj );\n                if( func ) {\n                    obj = func(obj, 'organisationUnits');\n                }\n                if( store === 'categoryCombos' ){\n\n                    if( obj.categories ){\n                        _.each( _.values( obj.categories ), function ( ca ) {\n                            ca = dhis2.metadata.processMetaDataAttribute( ca );\n                            if( ca.categoryOptions ){\n                                _.each( _.values( ca.categoryOptions ), function ( co ) {\n                                    co = dhis2.metadata.processMetaDataAttribute( co );\n                                    co.mappedOrganisationUnits = [];\n                                    if( co.organisationUnits && co.organisationUnits.length > 0 ){\n                                        co.mappedOrganisationUnits = $.map(co.organisationUnits, function(ou){return ou.id;});\n                                    }\n                                    delete co.organisationUnits;\n                                });\n                            }\n                        });\n                    }\n\n                    if( obj.categoryOptionCombos && obj.categories ){\n                        var categoryOptions = [];\n                        _.each( _.values( obj.categories ), function ( cat ) {\n                            if( cat.categoryOptions ){\n                                categoryOptions.push(  $.map(cat.categoryOptions, function(co){return co.displayName;}) );\n                            }\n                        });\n\n                        var cocs = dhis2.metadata.cartesianProduct( categoryOptions );\n\n                        var sortedOptionCombos = [];\n                        _.each( _.values( cocs ), function ( coc ) {\n                            for( var i=0; i<obj.categoryOptionCombos.length; i++){\n                                var opts = obj.categoryOptionCombos[i].displayName.split(', ');\n                                var itsc = _.intersection(opts, coc);\n                                if( itsc.length === opts.length && itsc.length === coc.length ){\n                                    sortedOptionCombos.push({id: obj.categoryOptionCombos[i].id, displayName: coc.join(','), access: obj.categoryOptionCombos[i].access, categoryOptions: obj.categoryOptionCombos[i].categoryOptions} );\n                                    break;\n                                }\n                            }\n                        });\n                        obj.categoryOptionCombos = sortedOptionCombos;\n                        /*if( obj.categoryOptionCombos.length !== sortedOptionCombos.length ){\n                            console.log(obj.displayName, ' - ', obj.categoryOptionCombos.length, ' - ', sortedOptionCombos.length);\n                        }\n                        else{\n                            obj.categoryOptionCombos = sortedOptionCombos;\n                        }*/\n                    }\n                }\n                else if( store === 'dataSets' ){\n\n                    if( obj.sections ){\n                        _.each(obj.sections, function(sec){\n                            if( sec.indicators ){\n                                angular.forEach(sec.indicators, function(ind){\n                                    ind=dhis2.metadata.processMetaDataAttribute(ind);\n                                    ind.params=[];\n                                    ind=dhis2.metadata.expressionMatcher(ind,'numerator','params',dhis2.metadata.expressionRegex,dhis2.metadata.operatorRegex);\n                                    ind=dhis2.metadata.expressionMatcher(ind,'denominator','params',dhis2.metadata.expressionRegex,dhis2.metadata.operatorRegex);\n                                });\n                            }\n                            if( sec.greyedFields ){\n                                var greyedFields = [];\n                                greyedFields = $.map(sec.greyedFields, function(gf){return gf.dimensionItem;});\n                                sec.greyedFields = greyedFields;\n                            }\n                        });\n                    }\n\n                    var dataElements = [];\n                    _.each(obj.dataSetElements, function(dse){\n                        if( dse.dataElement ){\n                            dataElements.push( dhis2.metadata.processMetaDataAttribute( dse.dataElement ) );\n                        }\n                    });\n                    obj.dataElements = dataElements;\n                    delete obj.dataSetElements;\n                    /*var mappedOrgUnits = [];\n                    if( obj.organisationUnits && obj.organisationUnits.length > 0 ){\n                        mappedOrgUnits = $.map(obj.organisationUnits, function(ou){return ou.code;});\n\n                        obj.organisationUnits = mappedOrgUnits;\n                    }*/\n                }\n                else if( store === 'validationRules' ){\n                    obj.params = [];\n                    obj = dhis2.metadata.expressionMatcher(obj, 'leftSide', 'params',dhis2.metadata.expressionRegex, dhis2.metadata.operatorRegex, 'expression');\n                    obj = dhis2.metadata.expressionMatcher(obj, 'rightSide', 'params',dhis2.metadata.expressionRegex, dhis2.metadata.operatorRegex, 'expression');\n                }\n                else if( store === 'periodTypes' ){\n                    obj.id = count;\n                }\n                else if( store === 'programs' ){\n                    _.each(obj.programStages, function(stage){\n                        _.each(stage.programStageDataElements, function(pstde){\n                            if( pstde.dataElement ){\n                                pstde.dataElement = dhis2.metadata.processMetaDataAttribute( pstde.dataElement );\n                            }\n                        });\n                    });\n\n                    _.each(obj.programTrackedEntityAttributes, function(pta){\n                        if( pta.trackedEntityAttribute ){\n                            pta.trackedEntityAttribute = dhis2.metadata.processMetaDataAttribute( pta.trackedEntityAttribute );\n                        }\n                    });\n                }\n                else if( store === 'optionSets' ){\n                    _.each(obj.options, function(op){\n                        op = dhis2.metadata.processMetaDataAttribute( op );\n                    });\n                }\n                count++;\n            });\n\n            if(storage === 'idb'){\n                db.setAll( store, response[objs] );\n            }\n            if(storage === 'localStorage'){\n                localStorage[store] = JSON.stringify(response[objs]);\n            }\n            if(storage === 'sessionStorage'){\n                var SessionStorageService = angular.element('body').injector().get('SessionStorageService');\n                SessionStorageService.set(store, response[objs]);\n            }\n        }\n\n        if(storage === 'temp'){\n            def.resolve(response[objs] ? response[objs] : []);\n        }\n        else{\n\n            if ( store === 'dataElementGroupSets' ){\n                var dataElementGroups = [];\n                if ( response[objs] ){\n                    _.each( _.values( response[objs] ), function ( obj ) {\n                        var _degs = $.map(obj.dataElementGroups, function(deg){ return deg.id; });\n                        dataElementGroups = dataElementGroups.concat( _degs );\n                    });\n                }\n                def.resolve( dataElementGroups );\n            }\n            else if ( store === 'dataElementGroups' ){\n                var dataElements = [];\n                if ( response[objs] ){\n                    _.each( _.values( response[objs] ), function ( obj ) {\n                        var _des = $.map(obj.dataElements, function(de){ return de.id; });\n                        dataElements = dataElements.concat( _des );\n                    });\n                }\n                def.resolve( dataElements );\n            }\n            else{\n                def.resolve();\n            }\n        }\n    }).fail(function(){\n        def.resolve( null );\n    });\n\n    return def.promise();\n};\n\ndhis2.metadata.getMetaObject = function( id, store, url, filter, storage, db, func )\n{\n    var def = $.Deferred();\n\n    if(id){\n        url = url + '/' + id + '.json';\n    }\n\n    $.ajax({\n        url: encodeURI( url ),\n        type: 'GET',\n        data: encodeURI( filter )\n    }).done( function( response ){\n        if( func ) {\n            response = func(response);\n        }\n\n        if ( store === 'ACCESSIBLE_PROGRAMS' ){\n            var programStages = $.map(response.programs, function(pr){ return pr.programStages; });\n            var SessionStorageService = angular.element('body').injector().get('SessionStorageService');\n            SessionStorageService.set('ACCESSIBLE_PROGRAM_STAGES', {programStages: programStages});\n        }\n\n        if(storage === 'idb'){\n            if( response && response.id) {\n                db.set( store, response );\n            }\n        }\n        if(storage === 'localStorage'){\n            localStorage[store] = JSON.stringify(response);\n        }\n        if(storage === 'sessionStorage'){\n            var SessionStorageService = angular.element('body').injector().get('SessionStorageService');\n            SessionStorageService.set(store, response);\n        }\n\n        def.resolve();\n    }).fail(function(){\n        def.resolve();\n    });\n\n    return def.promise();\n};\n\ndhis2.metadata.processObject = function(obj, prop){\n    if( obj[prop] ){\n        var oo = {};\n        _.each(_.values( obj[prop]), function(o){\n            if( o.name ){\n                oo[o.id] = o.name;\n            }\n            else if( o.level ){\n                oo[o.id] = o.level;\n            }\n            else{\n                oo[o.id] = o.id;\n            }\n        });\n        obj[prop] = oo;\n    }\n    return obj;\n};\n\ndhis2.metadata.processOptionCombos = function( data ){\n\n    var getSharingSetting = function( coc ){\n\n        var dWrite = true, dRead = true, mRead = true, mWrite = true;\n\n        coc.categoryOptions.forEach(function(co){\n            dWrite = co.access.data.write && dWrite;\n            dRead = co.access.data.read && dRead;\n            mRead = co.access.read && mRead;\n            mWrite = co.access.write && mWrite;\n            var att = dhis2.metadata.getMetaDataAttribute( co );\n            if( coc.categoryOptions.length === 1 && Object.keys(att).length > 0 ){\n                for( var key in att ){\n                    coc[key] = att[key];\n                }\n            }\n        });\n\n        coc.dWrite = dWrite;\n        coc.dRead = dRead;\n        coc.mRead = mRead;\n        coc.mWrite = mWrite;\n\n        return coc;\n    };\n\n    if( data && data.categoryCombos && data.categoryCombos.length > 0 ){\n        var optionCombos = {};\n        data.categoryCombos.forEach( function(cc) {\n            if( cc.categoryOptionCombos ){\n                var cocs = $.map(cc.categoryOptionCombos, function(coc){ return getSharingSetting(coc); });\n                cocs.forEach(function(coc){\n                    optionCombos[coc.id] = coc;\n                });\n            }\n        });\n\n        return optionCombos;\n    }\n\n    return data;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.metadata.js","/* Pagination service */\n/* global angular, dhis2, moment, Intl, parseFloat */\n\nvar d2Services = angular.module('d2Services', ['ngResource'])\n\n/* Factory for loading translation strings */\n.factory('i18nLoader', function ($q, $http, SessionStorageService, DHIS2URL) {\n\n    var getTranslationStrings = function (locale) {\n        var defaultUrl = 'i18n/i18n_app.properties';\n        var url = '';\n        if (locale === 'en' || !locale) {\n            url = defaultUrl;\n        }\n        else {\n            url = 'i18n/i18n_app_' + locale + '.properties';\n        }\n\n        var tx = {locale: locale};\n\n        var promise = $http.get(url).then(function (response) {\n            tx = {locale: locale, keys: dhis2.util.parseJavaProperties(response.data)};\n            return tx;\n        }, function () {\n\n            var p = $http.get(defaultUrl).then(function (response) {\n                tx = {locale: locale, keys: dhis2.util.parseJavaProperties(response.data)};\n                return tx;\n            });\n            return p;\n        });\n        return promise;\n    };\n\n    var getLocale = function () {\n        var locale = 'en';\n\n        var promise = $http.get( DHIS2URL + '/api/systemSettings?key=keyUiLocale&key=keyCalendar&key=keyDateFormat&key=multiOrganisationUnitForms').then(function (response) {\n            SessionStorageService.set('SYSTEM_SETTING', response.data);\n            if (response.data && response.data.settings && response.data.keyUiLocale) {\n                locale = response.data.keyUiLocale;\n            }\n            return locale;\n        }, function () {\n            return locale;\n        });\n\n        return promise;\n    };\n    return function () {\n        var deferred = $q.defer(), translations;\n        var userProfile = SessionStorageService.get('SYSTEM_SETTING');\n        if (userProfile && userProfile.keyUiLocale) {\n            getTranslationStrings(userProfile.keyUiLocale).then(function (response) {\n                translations = response.keys;\n                deferred.resolve(translations);\n            });\n            return deferred.promise;\n        }\n        else {\n            getLocale().then(function (locale) {\n                getTranslationStrings(locale).then(function (response) {\n                    translations = response.keys;\n                    deferred.resolve(translations);\n                });\n            });\n            return deferred.promise;\n        }\n    };\n})\n\n.service('AuthorityService', function () {\n    var getAuthorities = function (roles) {\n        var authority = {};\n        if (roles && roles.userCredentials && roles.userCredentials.userRoles) {\n            angular.forEach(roles.userCredentials.userRoles, function (role) {\n                angular.forEach(role.authorities, function (auth) {\n                    authority[auth] = true;\n                });\n            });\n        }\n        return authority;\n    };\n\n    return {\n        getUserAuthorities: function (roles) {\n            var auth = getAuthorities(roles);\n            var authority = {};\n            authority.canDeleteEvent = auth['F_TRACKED_ENTITY_DATAVALUE_DELETE'] || auth['ALL'] ? true : false;\n            authority.canAddOrUpdateEvent = auth['F_TRACKED_ENTITY_DATAVALUE_ADD'] || auth['ALL'] ? true : false;\n            authority.canSearchTei = auth['F_TRACKED_ENTITY_INSTANCE_SEARCH'] || auth['ALL'] ? true : false;\n            authority.canDeleteTei = auth['F_TRACKED_ENTITY_INSTANCE_DELETE'] || auth['ALL'] ? true : false;\n            authority.canRegisterTei = auth['F_TRACKED_ENTITY_INSTANCE_ADD'] || auth['ALL'] ? true : false;\n            authority.canEnrollTei = auth['F_PROGRAM_ENROLLMENT'] || auth['ALL'] ? true : false;\n            authority.canUnEnrollTei = auth['F_PROGRAM_UNENROLLMENT'] || auth['ALL'] ? true : false;\n            authority.canAdministerDashboard = auth['F_PROGRAM_DASHBOARD_CONFIG_ADMIN'] || auth['ALL'] ? true : false;\n            return authority;\n        }\n    };\n})\n\n/* Factory for loading external data */\n.factory('ExternalDataFactory', function ($http) {\n\n    return {\n        get: function (fileName) {\n            var promise = $http.get(fileName).then(function (response) {\n                return response.data;\n            });\n            return promise;\n        }\n    };\n})\n\n/* service for wrapping sessionStorage '*/\n.service('SessionStorageService', function ($window) {\n    return {\n        get: function (key) {\n            return JSON.parse($window.sessionStorage.getItem(key));\n        },\n        set: function (key, obj) {\n            $window.sessionStorage.setItem(key, JSON.stringify(obj));\n        },\n        clearAll: function () {\n            for (var key in $window.sessionStorage) {\n                $window.sessionStorage.removeItem(key);\n            }\n        }\n    };\n})\n\n/* service for getting calendar setting */\n.service('CalendarService', function (storage, $rootScope) {\n\n    return {\n        getSetting: function () {\n\n            var dhis2CalendarFormat = {keyDateFormat: 'yyyy-MM-dd', keyCalendar: 'gregorian', momentFormat: 'YYYY-MM-DD'};\n            var storedFormat = storage.get('SYSTEM_SETTING');\n            if (angular.isObject(storedFormat) && storedFormat.keyDateFormat && storedFormat.keyCalendar) {\n                if (storedFormat.keyCalendar === 'iso8601') {\n                    storedFormat.keyCalendar = 'gregorian';\n                }\n\n                if (storedFormat.keyDateFormat === 'dd-MM-yyyy') {\n                    dhis2CalendarFormat.momentFormat = 'DD-MM-YYYY';\n                }\n\n                dhis2CalendarFormat.keyCalendar = storedFormat.keyCalendar;\n                dhis2CalendarFormat.keyDateFormat = storedFormat.keyDateFormat;\n            }\n            $rootScope.dhis2CalendarFormat = dhis2CalendarFormat;\n            return dhis2CalendarFormat;\n        }\n    };\n})\n\n/* service for dealing with dates */\n.service('DateUtils', function ($filter, CalendarService) {\n\n    return {\n        getDate: function (dateValue) {\n            if (!dateValue) {\n                return;\n            }\n            var calendarSetting = CalendarService.getSetting();\n            dateValue = moment(dateValue, calendarSetting.momentFormat)._d;\n            return Date.parse(dateValue);\n        },\n        format: function (dateValue) {\n            if (!dateValue) {\n                return;\n            }\n\n            var calendarSetting = CalendarService.getSetting();\n            dateValue = moment(dateValue, calendarSetting.momentFormat)._d;\n            dateValue = $filter('date')(dateValue, calendarSetting.keyDateFormat);\n            return dateValue;\n        },\n        formatToHrsMins: function (dateValue) {\n            var calendarSetting = CalendarService.getSetting();\n            var dateFormat = 'YYYY-MM-DD @ hh:mm A';\n            if (calendarSetting.keyDateFormat === 'dd-MM-yyyy') {\n                dateFormat = 'DD-MM-YYYY @ hh:mm A';\n            }\n            return moment(dateValue).format(dateFormat);\n        },\n        formatToHrsMinsSecs: function (dateValue) {\n            var calendarSetting = CalendarService.getSetting();\n            var dateFormat = 'YYYY-MM-DD @ hh:mm:ss A';\n            if (calendarSetting.keyDateFormat === 'dd-MM-yyyy') {\n                dateFormat = 'DD-MM-YYYY @ hh:mm:ss A';\n            }\n            return moment(dateValue).format(dateFormat);\n        },\n\n        getToday: function () {\n            var calendarSetting = CalendarService.getSetting();\n            var tdy = $.calendars.instance(calendarSetting.keyCalendar).newDate();\n            var today = moment(tdy._year + '-' + tdy._month + '-' + tdy._day, 'YYYY-MM-DD')._d;\n            today = Date.parse(today);\n            today = $filter('date')(today, calendarSetting.keyDateFormat);\n            return today;\n        },\n        formatFromUserToApi: function (dateValue) {\n            if (!dateValue) {\n                return;\n            }\n            var calendarSetting = CalendarService.getSetting();\n            dateValue = moment(dateValue, calendarSetting.momentFormat)._d;\n            dateValue = Date.parse(dateValue);\n            dateValue = $filter('date')(dateValue, 'yyyy-MM-dd');\n            return dateValue;\n        },\n        formatFromApiToUser: function (dateValue) {\n            if (!dateValue) {\n                return;\n            }\n            var calendarSetting = CalendarService.getSetting();\n            if (moment(dateValue, calendarSetting.momentFormat).format(calendarSetting.momentFormat) === dateValue) {\n                return dateValue;\n            }\n            dateValue = moment(dateValue, 'YYYY-MM-DD')._d;\n            return $filter('date')(dateValue, calendarSetting.keyDateFormat);\n        },\n        getDateAfterOffsetDays: function (offSetDays) {\n            var date = new Date();\n            date.setDate(date.getDate()+offSetDays);\n            var calendarSetting = CalendarService.getSetting();\n            var tdy = $.calendars.instance(calendarSetting.keyCalendar).fromJSDate(date);\n            var dateAfterOffset = moment(tdy._year + '-' + tdy._month + '-' + tdy._day, 'YYYY-MM-DD')._d;\n            dateAfterOffset = Date.parse(dateAfterOffset);\n            dateAfterOffset = $filter('date')(dateAfterOffset, calendarSetting.keyDateFormat);\n            return dateAfterOffset;\n        },\n        getDifference: function(startDate, endDate){\n            var firstdate = this.toMomentFormat(startDate);\n            var seconddate = this.toMomentFormat(endDate);\n            return seconddate.diff(firstdate,'days');\n        },\n        toMomentFormat: function( dateValue ){\n            if (!dateValue) {\n                return;\n            }\n\n            dateValue = $filter('trimquotes')(dateValue);\n            var calendarSetting = CalendarService.getSetting();\n            var dateValues = dateValue.split('-');\n            var _dateValue = dateValues[0] + '/' + dateValues[1] + '/' + dateValues[2];\n\n            if ( calendarSetting.momentFormat === 'DD-MM-YYYY' ){\n                return moment(_dateValue, 'DD/MM/YYYY');\n            }\n            return moment(_dateValue, 'YYYY/MM/DD');\n        },\n        isValid: function( date ){\n            if(!date){\n                return false;\n            }\n            var convertedDate = this.format( date );\n            return date === convertedDate;\n        }\n    };\n})\n\n/* Service for option name<->code conversion */\n.factory('OptionSetService', function() {\n    return {\n        getCode: function(options, key){\n            if(options){\n                for(var i=0; i<options.length; i++){\n                    if( key === options[i].displayName){\n                        return options[i].code;\n                    }\n                }\n            }\n            return key;\n        },\n        getName: function(options, key){\n            if(options){\n                for(var i=0; i<options.length; i++){\n                    if( key === options[i].code){\n                        return options[i].displayName;\n                    }\n                }\n            }\n            return key;\n        }\n    };\n})\n\n/* service for common utils */\n.service('CommonUtils', function($q, $translate, SessionStorageService, DateUtils, OptionSetService, CurrentSelection, FileService, DialogService){\n\n    return {\n        formatDataValue: function(event, val, obj, optionSets, destination){\n            var fileNames = CurrentSelection.getFileNames();\n            if(val &&\n                obj.valueType === 'NUMBER' ||\n                obj.valueType === 'INTEGER' ||\n                obj.valueType === 'INTEGER_POSITIVE' ||\n                obj.valueType === 'INTEGER_NEGATIVE' ||\n                obj.valueType === 'INTEGER_ZERO_OR_POSITIVE'){\n                if( dhis2.validation.isNumber(val)){\n                    if(obj.valueType === 'NUMBER'){\n                        val = parseFloat(val);\n                    }else{\n                        val = parseInt(val);\n                    }\n                }\n            }\n            if(val && obj.optionSetValue && obj.optionSet && obj.optionSet.id && optionSets[obj.optionSet.id] && optionSets[obj.optionSet.id].options  ){\n                if(destination === 'USER'){\n                    val = OptionSetService.getName(optionSets[obj.optionSet.id].options, String(val));\n                }\n                else{\n                    val = OptionSetService.getCode(optionSets[obj.optionSet.id].options, val);\n                }\n\n            }\n            if(val && obj.valueType === 'DATE'){\n                if(destination === 'USER'){\n                    val = DateUtils.formatFromApiToUser(val);\n                }\n                else{\n                    val = DateUtils.formatFromUserToApi(val);\n                }\n            }\n            if(obj.valueType === 'BOOLEAN'){\n\n                if(destination === 'USER'){\n                    val = val === 'true' ? 'Yes' : 'No';\n                }\n                else{\n                    val = val === 'yes' ? 'true' : '';\n                }\n            }\n            if(obj.valueType === 'TRUE_ONLY'){\n\n                if(destination === 'USER'){\n                    val = val === 'true' ? true : '';\n                }\n                else{\n                    val = val === true ? 'true' : '';\n                }\n            }\n            if(event && val && destination === 'USER' && obj.valueType === 'FILE_RESOURCE'){\n                FileService.get(val).then(function(response){\n                    if(response && response.name){\n                        if(!fileNames[event]){\n                            fileNames[event] = [];\n                        }\n                        fileNames[event][obj.id] = response.name;\n                        CurrentSelection.setFileNames( fileNames );\n                    }\n                });\n            }\n            return val;\n        },\n        displayBooleanAsYesNo: function(value, dataElement){\n            if(angular.isUndefined(dataElement) || dataElement.valueType === \"BOOLEAN\"){\n                if(value === \"true\" || value === true){\n                    return \"Yes\";\n                }\n                else if(value === \"false\" || value === false){\n                    return \"No\";\n                }\n            }\n            return value;\n        },\n        userHasValidRole: function(obj, prop, userRoles){\n        \tif( !obj || !prop || !userRoles){\n                return false;\n        \t}\n        \tfor(var i=0; i < userRoles.length; i++){\n                if( userRoles[i].authorities && userRoles[i].authorities.indexOf('ALL') !== -1 ){\n                    return true;\n                }\n                if( userRoles[i][prop] && userRoles[i][prop].length > 0 ){\n                    for( var j=0; j< userRoles[i][prop].length; j++){\n                        if( obj.id === userRoles[i][prop][j].id ){\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        userHasWriteAccess: function( storage, object, objectId ){\n            var objs = SessionStorageService.get(storage);\n            if (objs && objs.length) {\n                for (var i = 0; i < objs.length; i++) {\n                    if (objs[i].id === objectId && objs[i].access && objs[i].access.data && objs[i].access.data.write) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        userHasReadAccess: function( storage, object, objectId ){\n            var objs = SessionStorageService.get(storage);\n            objs = objs[object];\n            if (objs && objs.length) {\n                for (var i = 0; i < objs.length; i++) {\n                    if (objs[i].id === objectId && objs[i].access && objs[i].access.data && ( objs[i].access.data.read || objs[i].access.data.write ) ) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        getUsername: function(){\n            var userProfile = SessionStorageService.get('USER_PROFILE');\n            var username = userProfile && userProfile.userCredentials && userProfile.userCredentials.username ? userProfile.userCredentials.username : '';\n            return username;\n        },\n        getProduct: function(op1, op2){\n            op1 = dhis2.validation.isNumber(op1) ? parseInt(op1) : 0;\n            op2 = dhis2.validation.isNumber(op2) ? parseInt(op2) : 0;\n            var res = op1 * op2;\n            return res;\n        },\n        formatNumber: function( num ){\n            if ( dhis2.validation.isNumber( num ) ){\n                return new Intl.NumberFormat().format(num);\n            }\n            return \"\";\n        },\n        getSum: function( op1, op2 ){\n            op1 = dhis2.validation.isNumber(op1) ? parseInt(op1) : 0;\n            op2 = dhis2.validation.isNumber(op2) ? parseInt(op2) : 0;\n            return op1 + op2;\n        },\n        getTotal: function( arr, prop){\n            var getValue = function(item){\n                return item[prop];\n            };\n\n            var sum = function(a, b){\n                return a + b;\n            };\n\n            return arr.length > 0 ? arr.map(getValue).reduce(sum) : '';\n        },\n        getPercent: function(op1, op2, turnOffPercent, turnOffDecimal ){\n            op1 = dhis2.validation.isNumber(op1) ? parseFloat(op1) : 0;\n            op2 = dhis2.validation.isNumber(op2) ? parseFloat(op2) : 0;\n            if( op2 === 0 ){\n                return '';\n            }\n\n            if( op1 === 0){\n                return turnOffPercent ? 0 : '0%';\n            }\n\n            var res = (parseFloat(op1 / op2)*100);\n            if ( turnOffDecimal ){\n                res = res.toFixed(1);\n            }\n\n            return turnOffPercent ? res : res + '%';\n        },\n        getRoleHeaders: function(){\n            var headers = [];\n            headers.push({id: 'catalyst', displayName: $translate.instant('catalyst')});\n            headers.push({id: 'funder', displayName: $translate.instant('funder')});\n            headers.push({id: 'responsibleMinistry', displayName: $translate.instant('responsible_ministry')});\n\n            return headers;\n        },\n        getOptionComboIdFromOptionNames: function(optionComboMap, options){\n\n            var optionNames = [];\n            angular.forEach(options, function(op){\n                optionNames.push(op.displayName);\n            });\n\n            var selectedAttributeOcboName = optionNames.join();\n            //selectedAttributeOcboName = selectedAttributeOcboName.replace(/\\,/g, ', ');\n            var selectedAttributeOcobo = optionComboMap['\"' + selectedAttributeOcboName + '\"'];\n\n            if( !selectedAttributeOcobo || angular.isUndefined( selectedAttributeOcobo ) ){\n                selectedAttributeOcboName = optionNames.reverse().join();\n                //selectedAttributeOcboName = selectedAttributeOcboName.replace(\",\", \", \");\n                selectedAttributeOcobo = optionComboMap['\"' + selectedAttributeOcboName + '\"'];\n            }\n\n            return selectedAttributeOcobo;\n        },\n        splitRoles: function( roles ){\n            return roles.split(\",\");\n        },\n        pushRoles: function(existingRoles, roles){\n            angular.forEach(roles, function(r){\n                if( existingRoles.indexOf(r) === -1 ){\n                    existingRoles.push(r);\n                }\n            });\n            return existingRoles;\n        },\n        extractRoles: function(existingRoles, roles){\n\n            return existingRoles;\n        },\n        getOptionIds: function(options){\n            var optionNames = '';\n            angular.forEach(options, function(o){\n                optionNames += o.id + ';';\n            });\n\n            return optionNames.slice(0,-1);\n        },\n        errorNotifier: function(response){\n            if( response && response.data && response.data.status === 'ERROR'){\n                var dialogOptions = {\n                    headerText: response.data.status,\n                    bodyText: response.data.message ? response.data.message : $translate.instant('unable_to_fetch_data_from_server')\n                };\n                DialogService.showDialog({}, dialogOptions);\n            }\n        },\n        getNumeratorAndDenominatorIds: function( ind ){\n            var expressionRegx = /[#\\{\\}]/g;\n            var num = ind.numerator.replace(expressionRegx, '');\n            var den = ind.denominator.replace(expressionRegx, '');\n\n            if( num.indexOf('.') === -1 ){\n                num = num + '.HllvX50cXC0';\n            }\n            num = num.split('.');\n\n            if( den.indexOf('.') === -1 ){\n                den = den + '.HllvX50cXC0';\n            }\n            den = den.split('.');\n            return {numerator: num[0], numeratorOptionCombo: num[1], denominator: den[0], denominatorOptionCombo: den[1]};\n        },\n        populateOuLevels: function( orgUnit, ouLevels, lowestLevel ){\n            var ouModes = [{displayName: $translate.instant('selected_level') , value: 'SELECTED', level: orgUnit.l}];\n            for( var i=orgUnit.l+1; i<=lowestLevel; i++ ){\n                var lvl = ouLevels[i];\n                ouModes.push({value: lvl, displayName: lvl, level: i});\n            }\n            var selectedOuMode = ouModes[0];\n            return {ouModes: ouModes, selectedOuMode: selectedOuMode};\n        },\n        processDataSet: function( ds ){\n            var dataElements = [];\n            angular.forEach(ds.dataSetElements, function(dse){\n                if( dse.dataElement ){\n                    dataElements.push( dhis2.metadata.processMetaDataAttribute( dse.dataElement ) );\n                }\n            });\n            ds.dataElements = dataElements;\n            delete ds.dataSetElements;\n\n            return ds;\n        },\n        getReportName: function(reportType, reportRole, ouName, ouLevel, peName){\n            var reportName = ouName;\n            if( ouLevel && ouLevel.value && ouLevel.value !== 'SELECTED' ){\n                reportName += ' (' + ouLevel.displayName + ') ';\n            }\n\n            reportName += ' - ' + reportType;\n\n            if( reportRole && reportRole.displayNme ){\n                reportName += ' (' + reportRole.displayName + ')';\n            }\n\n            reportName += ' - ' + peName + '.xls';\n            return reportName;\n        },\n        getDataElementTotal: function(dataValues, dataElement){\n            if( dataValues[dataElement] ){\n                dataValues[dataElement].total = 0;\n                angular.forEach(dataValues[dataElement], function(val, key){\n                    if( key !== 'total' && val && val.value && dhis2.validation.isNumber( val.value ) ){\n                        dataValues[dataElement].total += parseInt( val.value );\n                    }\n                });\n            }\n            return dataValues[dataElement];\n        },\n        getIndicatorResult: function( ind, dataValues ){\n            var denVal = 1, numVal = 0;\n\n            if( ind.numerator ) {\n\n                ind.numExpression = angular.copy( ind.numerator );\n                var matcher = ind.numExpression.match( dhis2.metadata.formulaRegex );\n\n                for ( var k in matcher )\n                {\n                    var match = matcher[k];\n\n                    // Remove brackets from expression to simplify extraction of identifiers\n\n                    var operand = match.replace( dhis2.metadata.operatorRegex, '' );\n\n                    var isTotal = !!( operand.indexOf( dhis2.metadata.custSeparator ) == -1 );\n\n                    var value = '0';\n\n                    if ( isTotal )\n                    {\n                        if( dataValues && dataValues[operand] && dataValues[operand].total ){\n                            value = dataValues[operand].total;\n                        }\n                    }\n                    else\n                    {\n                        var de = operand.substring( 0, operand.indexOf( dhis2.metadata.custSeparator ) );\n                        var coc = operand.substring( operand.indexOf( dhis2.metadata.custSeparator ) + 1, operand.length );\n\n                        if( dataValues &&\n                                dataValues[de] &&\n                                dataValues[de][coc] &&\n                                dataValues[de][coc].value){\n                            value = dataValues[de][coc].value;\n                        }\n                    }\n                    ind.numExpression = ind.numExpression.replace( match, value );\n                }\n            }\n\n\n            if( ind.denominator ) {\n\n                ind.denExpression = angular.copy( ind.denominator );\n                var matcher = ind.denExpression.match( dhis2.metadata.formulaRegex );\n\n                for ( var k in matcher )\n                {\n                    var match = matcher[k];\n\n                    // Remove brackets from expression to simplify extraction of identifiers\n\n                    var operand = match.replace( dhis2.metadata.operatorRegex, '' );\n\n                    var isTotal = !!( operand.indexOf( dhis2.metadata.custSeparator ) == -1 );\n\n                    var value = '0';\n\n                    if ( isTotal )\n                    {\n                        if( dataValues[operand] && dataValues[operand].total ){\n                            value = dataValues[operand].total;\n                        }\n                    }\n                    else\n                    {\n                        var de = operand.substring( 0, operand.indexOf( dhis2.metadata.custSeparator ) );\n                        var coc = operand.substring( operand.indexOf( dhis2.metadata.custSeparator ) + 1, operand.length );\n\n                        if( dataValues &&\n                                dataValues[de] &&\n                                dataValues[de][coc] &&\n                                dataValues[de][coc].value){\n                            value = dataValues[de][coc].value;\n                        }\n                    }\n                    ind.denExpression = ind.denExpression.replace( match, value );\n                }\n            }\n\n            if( ind.numExpression ){\n                numVal = eval( ind.numExpression );\n                numVal = isNaN( numVal ) ? '-' : roundTo( numVal, 1 );\n            }\n\n            if( ind.denExpression ){\n                denVal = eval( ind.denExpression );\n                denVal = isNaN( denVal ) ? '-' : roundTo( denVal, 1 );\n            }\n\n            var factor = 1;\n\n            /*if( ind.indicatorType && ind.indicatorType.factor ){\n                factor = ind.indicatorType.factor;\n            }*/\n\n            return (numVal / denVal)*factor;\n        },\n        dummyPromise: function( res ){\n            var def = $q.defer();\n            def.resolve( res );\n            return def.promise;\n        },\n        getPerformanceOverviewHeaders: function(){\n\n            var ac = { order: 1, id: 'A', name: $translate.instant('achieved') + '  (>= 100%)', lRange:  100, printStyle: 'green-background', style: {\"background-color\": '#339D73 !important', \"color\": '#000'} };\n\n            var ma = { order: 2, id: 'M', name: $translate.instant('moderately_achieved') + '  (75-99%)', lRange: 75, hRange: 99, printStyle: 'yellow-background', style: {\"background-color\": '#F4CD4D !important', \"color\": '#000'} };\n\n            var na = { order: 3, id: 'N', name: $translate.instant('not_achieved') + '  (<75%)', hRange: 74, printStyle: 'red-background', style: {\"background-color\": '#CD615A !important', \"color\": '#000'} };\n\n            var nd = { order: 4, id: 'X', name: $translate.instant('no_data'), printStyle: 'grey-background', style: {\"background-color\": '#aaa !important', \"color\": '#000'}};\n\n            //var al = { id: 'All', name: $translate.instant('weighted_score'), style: {\"background-color\": '#fff !important', \"color\": '#000'}};\n\n            return [ac, ma, na, nd];\n        },\n        getFixedRanges: function( isDescending ){\n            /*ranges = {\n                green: 15,\n                greenColor: '#339D73',\n                yellowStart: 15,\n                yellowEnd: 30,\n                yellowColor: '#F4CD4D',\n                red: 30,\n                redColor: '#CD615A'\n            };*/\n            var ranges = {};\n\n            if ( isDescending ){\n                ranges = {\n                    green: 100,\n                    greenColor: '#339D73',\n                    yellowStart: 101,\n                    yellowEnd: 175,\n                    yellowColor: '#F4CD4D',\n                    red: 175,\n                    redColor: '#CD615A',\n                    greyColor: '#aaa'\n                };\n            }\n            else {\n                ranges = {\n                    green: 100,\n                    greenColor: '#339D73',\n                    yellowStart: 75,\n                    yellowEnd: 99,\n                    yellowColor: '#F4CD4D',\n                    red: 74,\n                    redColor: '#CD615A',\n                    greyColor: '#aaa'\n                };\n            }\n            return ranges;\n        },\n        getFixedTrafficStyle: function(){\n            var ranges = this.getFixedRanges();\n            var style = {\n                red: {\n                    inlineStyle: {\"background-color\": ranges.redColor},\n                    printStyle: 'red-background'\n                },\n                yellow: {\n                    inlineStyle: {\"background-color\": ranges.yellowColor},\n                    printStyle: 'yellow-background'\n                },\n                green: {\n                    inlineStyle: {\"background-color\": ranges.greenColor},\n                    printStyle: 'green-background'\n                },\n                grey: {\n                    inlineStyle: {\"background-color\": ranges.grey},\n                    printStyle: 'grey-background'\n                }\n            };\n            return style;\n        },\n        getTrafficColorForValue: function( val ){\n            var ranges = this.getFixedRanges();\n            var color = '', style = {};\n            if ( val === '' || val === null) {\n                color = '#aaa';\n                style.printStyle = 'grey-background';\n                style.inlineStyle = {\"background-color\": color};\n                return style;\n            }\n            val = Number( val );\n            if ( val >= ranges.green ){\n                color = ranges.greenColor;\n                style.printStyle = 'green-background';\n            }\n            else if( val >= ranges.yellowStart && val <= ranges.yellowEnd ){\n                color = ranges.yellowColor;\n                style.printStyle = 'yellow-background';\n            }\n            else {\n                color = ranges.redColor;\n                style.printStyle = 'red-background';\n            }\n            style.inlineStyle = {\"background-color\": color};\n            return style;\n        },\n        getFormattedAnalyticsResponse: function( response ){\n            var data = response.data;\n            var reportData = [];\n            if (data && data.headers && data.headers.length > 0 && data.rows && data.rows.length > 0) {\n                for (var i = 0; i < data.rows.length; i++) {\n                    var r = {}, d = data.rows[i];\n                    for (var j = 0; j < data.headers.length; j++) {\n\n                        if (data.headers[j].name === 'numerator' || data.headers[j].name === 'denominator') {\n                            d[j] = parseInt(d[j]);\n                        } else if (data.headers[j].name === 'value') {\n                            d[j] = parseFloat(d[j]);\n                        }\n\n                        r[data.headers[j].name] = d[j];\n                    }\n\n                    delete r.multiplier;\n                    delete r.factor;\n                    delete r.divisor;\n                    reportData.push(r);\n                }\n            }\n            return {data: reportData, metaData: data.metaData};\n        },\n        getDictionaryCompleteness: function( item, headers, completeness ){\n            var size = 0;\n            angular.forEach(headers, function(header){\n                if( item[header.id] ){\n                    size++;\n                }\n            });\n\n            item.completenessRate = '(' + size + ' / ' + headers.length + ')';\n\n            var isGreen = true;\n\n            for( var i=0; i<completeness.green.length; i++){\n                if( !item[completeness.green[i]] || item[completeness.green[i]] === ''){\n                    isGreen = false;\n                    break;\n                }\n            }\n\n            if( isGreen ){\n                item.completeness = 'green-background';\n                item.inlineStyle = {\"background-color\": '#339D73 !important'};\n                return item;\n            }\n\n            var isYellow = true;\n            for( var i=0; i<completeness.yellow.length; i++){\n                if( !item[completeness.yellow[i]] || item[completeness.yellow[i]] === ''){\n                    isYellow = false;\n                    break;\n                }\n            }\n\n            if( isYellow ){\n                item.completeness = 'yellow-background';\n                item.inlineStyle = {\"background-color\": '#F4CD4D !important'};\n                return item;\n            }\n\n            item.completeness = 'red-background';\n            item.inlineStyle = {\"background-color\": '#CD615A !important'};\n            return item;\n        }\n    };\n})\n\n/* service for dealing with custom form */\n.service('CustomFormService', function ($translate, NotificationService) {\n\n    return {\n        getForProgramStage: function (programStage, programStageDataElements) {\n\n            var htmlCode = programStage.dataEntryForm ? programStage.dataEntryForm.htmlCode : null;\n\n            if (htmlCode) {\n                var inputRegex = /<input.*?\\/>/g,\n                    match,\n                    inputFields = [],\n                    hasEventDate = false;\n\n                while (match = inputRegex.exec(htmlCode)) {\n                    inputFields.push(match[0]);\n                }\n\n                for (var i = 0; i < inputFields.length; i++) {\n                    var inputField = inputFields[i];\n\n                    var inputElement = $.parseHTML(inputField);\n                    var attributes = {};\n\n                    $(inputElement[0].attributes).each(function () {\n                        attributes[this.nodeName] = this.value;\n                    });\n\n                    var fieldId = '', newInputField;\n                    if (attributes.hasOwnProperty('id')) {\n\n                        if (attributes['id'] === 'executionDate') {\n                            fieldId = 'eventDate';\n                            hasEventDate = true;\n\n                            //name needs to be unique so that it can be used for validation in angularjs\n                            if (attributes.hasOwnProperty('name')) {\n                                attributes['name'] = fieldId;\n                            }\n\n                            newInputField = '<span class=\"hideInPrint\"><input type=\"text\" ' +\n                                this.getAttributesAsString(attributes) +\n                                ' ng-model=\"currentEvent.' + fieldId + '\"' +\n                                ' input-field-id=\"' + fieldId + '\"' +\n                                ' d2-date ' +\n                                ' d2-date-validator ' +\n                                ' max-date=\"' + 0 + '\"' +\n                                ' placeholder=\"{{dhis2CalendarFormat.keyDateFormat}}\" ' +\n                                ' ng-class=\"getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id,true)\"' +\n                                ' blur-or-change=\"saveDatavalue(prStDes.' + fieldId + ')\"' +\n                                ' ng-required=\"{{true}}\"></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                        }\n                        else {\n                            fieldId = attributes['id'].substring(4, attributes['id'].length - 1).split(\"-\")[1];\n\n                            //name needs to be unique so that it can be used for validation in angularjs\n                            if (attributes.hasOwnProperty('name')) {\n                                attributes['name'] = fieldId;\n                            }\n\n                            var prStDe = programStageDataElements[fieldId];\n\n                            if (prStDe && prStDe.dataElement && prStDe.dataElement.valueType) {\n\n                                var commonInputFieldProperty = this.getAttributesAsString(attributes) +\n                                    ' ng-model=\"currentEvent.' + fieldId + '\" ' +\n                                    ' input-field-id=\"' + fieldId + '\"' +\n                                    ' ng-disabled=\"isHidden(prStDes.' + fieldId + '.dataElement.id) || selectedEnrollment.status===\\'CANCELLED\\' || selectedEnrollment.status===\\'COMPLETED\\' || currentEvent[uid]==\\'uid\\' || currentEvent.editingNotAllowed \"'+\n                                    ' ng-required=\"{{prStDes.' + fieldId + '.compulsory}}\" ';\n\n\n                                //check if dataelement has optionset\n                                if (prStDe.dataElement.optionSetValue) {\n                                    var optionSetId = prStDe.dataElement.optionSet.id;\n                                    newInputField = '<span class=\"hideInPrint\"><ui-select style=\"width: 100%;\" theme=\"select2\" ' + commonInputFieldProperty + ' on-select=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\" >' +\n                                        '<ui-select-match ng-class=\"getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)\" allow-clear=\"true\" placeholder=\"' + $translate.instant('select_or_search') + '\">{{$select.selected.displayName || $select.selected}}</ui-select-match>' +\n                                        '<ui-select-choices ' +\n                                        ' repeat=\"option.displayName as option in optionSets.' + optionSetId + '.options | filter: $select.search | limitTo:maxOptionSize\">' +\n                                        '<span ng-bind-html=\"option.displayName | highlight: $select.search\">' +\n                                        '</span>' +\n                                        '</ui-select-choices>' +\n                                        '</ui-select></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                                }\n                                else {\n                                    //check data element type and generate corresponding angular input field\n                                    if (prStDe.dataElement.valueType === \"NUMBER\" ||\n                                        prStDe.dataElement.valueType === \"INTEGER\" ||\n                                        prStDe.dataElement.valueType === \"INTEGER_POSITIVE\" ||\n                                        prStDe.dataElement.valueType === \"INTEGER_NEGATIVE\" ||\n                                        prStDe.dataElement.valueType === \"INTEGER_ZERO_OR_POSITIVE\") {\n                                        newInputField = '<span class=\"hideInPrint\"><input type=\"number\" ' +\n                                            ' d2-number-validator ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' number-type=\"' + prStDe.dataElement.valueType + '\" ' +\n                                            ' ng-blur=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + '></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"BOOLEAN\") {\n                                    \tnewInputField = '<span class=\"hideInPrint\"><d2-radio-button ' +\n                                                                    ' dh-required=\"prStDes.' + fieldId + '.compulsory\" ' +\n                                                                    ' dh-disabled=\"isHidden(prStDes.' + fieldId + '.dataElement.id) || selectedEnrollment.status===\\'CANCELLED\\' || selectedEnrollment.status===\\'COMPLETED\\' || currentEvent[uid]==\\'uid\\' || currentEvent.editingNotAllowed\" ' +\n                                                                    ' dh-value=\"currentEvent.' + fieldId + '\" ' +\n                                                                    ' dh-name=\"foo\" ' +\n                                                                    ' dh-current-element=\"currentElement\" ' +\n                                                                    ' dh-event=\"currentEvent.event\" ' +\n                                                                    ' dh-id=\"prStDes.' + fieldId + '.dataElement.id\" ' +\n                                                                    ' dh-click=\"saveDatavalue(prStDes.' + fieldId + ', currentEvent, value )\" >' +\n                                                            ' </d2-radio-button></span> ' +\n                                                            '<span class=\"not-for-screen\">' +\n                                                            \t'<label class=\"radio-inline\"><input type=\"radio\" value=\"true\" ng-model=\"currentEvent.' + fieldId +'\">{{\\'yes\\' | translate}}</label>' +\n                                                            \t'<label class=\"radio-inline\"><input type=\"radio\" value=\"false\" ng-model=\"currentEvent.' + fieldId + '\">{{\\'no\\' | translate}}</label>' +\n                                                            '</span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"DATE\") {\n                                        var maxDate = prStDe.allowFutureDate ? '' : 0;\n                                        newInputField = '<span class=\"hideInPrint\"><input type=\"text\" ' +\n                                            ' placeholder=\"{{dhis2CalendarFormat.keyDateFormat}}\" ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' d2-date ' +\n                                            ' d2-date-validator ' +\n                                            ' max-date=\"' + maxDate + '\"' +\n                                            ' blur-or-change=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + ' ></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"TRUE_ONLY\") {\n                                        newInputField = '<span class=\"hideInPrint\"><input type=\"checkbox\" ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' ng-change=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + ' ></span><span class=\"not-for-screen\"><input type=\"checkbox\" ng-checked={{currentEvent.' + fieldId + '}}></span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"LONG_TEXT\") {\n                                        newInputField = '<span class=\"hideInPrint\"><textarea row=\"3\" ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' ng-blur=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + '></textarea></span><span class=\"not-for-screen\"><textarea row=\"3\" value={{currentEvent.' + fieldId + '}}></textarea></span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"FILE_RESOURCE\") {\n                                        newInputField = '<span class=\"input-group hideInPrint\">\\n\\\n                                                        <span ng-if=\"currentEvent.' + fieldId + '\">\\n\\\n                                                            <a href ng-click=\"downloadFile(null, \\'' + fieldId + '\\', null)\" title=\"fileNames[currentEvent.event][' + fieldId + ']\" >{{fileNames[currentEvent.event][' + fieldId + '].length > 20 ? fileNames[currentEvent.event][' + fieldId + '].substring(0,20).concat(\\'...\\') : fileNames[currentEvent.event][' + fieldId + ']}}</a>\\n\\\n                                                        </span>\\n\\\n                                                        <span class=\"input-group-btn\">\\n\\\n                                                            <span class=\"btn btn-grp btn-file\">\\n\\\n                                                                <span ng-if=\"currentEvent.' + fieldId + '\" title=\"{{\\'delete\\' | translate}}\" d2-file-input-name=\"fileNames[currentEvent.event][' + fieldId + ']\" d2-file-input-delete=\"currentEvent.' + fieldId + '\">\\n\\\n                                                                    <a href ng-click=\"deleteFile(\\'' + fieldId + '\\')\"><i class=\"fa fa-trash alert-danger\"></i></a>\\n\\\n                                                                </span>\\n\\\n                                                                <span ng-if=\"!currentEvent.' + fieldId + '\" title=\"{{\\'upload\\' | translate}}\" >\\n\\\n                                                                    <i class=\"fa fa-upload\"></i>\\n\\\n                                                                    <input  type=\"file\" \\n\\\n                                                                            ' + this.getAttributesAsString(attributes) + '\\n\\\n                                                                            input-field-id=\"' + fieldId + '\"\\n\\\n                                                                            d2-file-input-ps=\"currentStage\"\\n\\\n                                                                            d2-file-input=\"currentEvent\"\\n\\\n                                                                            d2-file-input-current-name=\"currentFileNames\"\\n\\\n                                                                            d2-file-input-name=\"fileNames\">\\n\\\n                                                                </span>\\n\\\n                                                            </span>\\n\\\n                                                        </span>\\n\\\n                                                    </span>'\n                                                    '<span class=\"not-for-screen\">' +\n                                                    \t'<input type=\"text\" value={{currentEvent.' + fieldId + '}}' +\n                                                    '</span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"COORDINATE\") {\n                                    \tnewInputField = '<span class=\"hideInPrint\"><d2-map ' +\n                                    \t\t\t\t\t\t\t' id=\" ' + fieldId + '\" ' +\n\t\t\t\t\t\t                                        ' d2-object=\"currentEvent\" ' +\n\t\t\t\t\t\t                                        ' d2-coordinate-format=\"\\'TEXT\\'\" ' +\n\t\t\t\t\t\t                                        ' d2-disabled=\"isHidden(prStDes.' + fieldId + '.dataElement.id) || selectedEnrollment.status===\\'CANCELLED\\' || selectedEnrollment.status===\\'COMPLETED\\' || currentEvent[uid]==\\'uid\\' || currentEvent.editingNotAllowed\" ' +\n\t\t\t\t\t                                            ' d2-required=\"prStDes.' + fieldId + '.compulsory\" ' +\n\t\t\t\t\t\t                                        ' d2-function=\"saveDatavalue(arg1)\" ' +\n\t\t\t\t\t\t                                        ' d2-function-param-text=\"prStDes.' + fieldId + '\" ' +\n\t\t\t\t\t\t                                        ' d2-function-param-coordinate=\"\\'LATLNG\\'\" > ' +\n\t\t\t\t\t\t                                '</d2-map></span>' +\n\t\t\t\t\t\t                                '<span class=\"not-for-screen\">' +\n                                                    \t\t'<input type=\"text\" value={{currentEvent.' + fieldId + '}}' +\n                                                    \t'</span>';;\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"ORGANISATION_UNIT\") {\n                                    \tnewInputField = '<span class=\"hideInPrint\"><d2-org-unit-tree ' +\n\t\t\t\t\t                                            ' selected-org-unit=\"selectedOrgUnit\" ' +\n\t\t\t\t\t                                            ' id=\"{{prStDes.' + fieldId + '.dataElement.id}}\" ' +\n\t\t\t\t\t                                            ' d2-object=\"currentEvent\" ' +\n\t\t\t\t\t                                            ' d2-value=\"currentEvent.' + fieldId + '\" ' +\n\t\t\t\t\t                                            ' d2-disabled=\"isHidden(prStDes.' + fieldId + '.dataElement.id) || selectedEnrollment.status===\\'CANCELLED\\' || selectedEnrollment.status===\\'COMPLETED\\' || currentEvent[uid]==\\'uid\\' || currentEvent.editingNotAllowed\" ' +\n\t\t\t\t\t                                            ' d2-required=\"prStDes.' + fieldId + '.compulsory\" ' +\n\t\t\t\t\t                                            ' d2-function=\"saveDatavalue(prStDes.' + fieldId + ', currentEvent, value )\" >' +\n\t\t\t\t\t                                    ' </d2-org-unit-tree></span>' +\n\t\t\t\t\t                                    '<span class=\"not-for-screen\">' +\n                                                    \t\t'<input type=\"text\" value={{currentEvent.' + fieldId + '}}' +\n                                                    \t'</span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"PHONE_NUMBER\") {\n                                        newInputField = '<span class=\"hideInPrint\"><input type=\"text\" ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' ng-blur=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + '></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                                    }\n                                    else if (prStDe.dataElement.valueType === \"TEXT\") {\n                                        newInputField = '<span class=\"hideInPrint\"><input type=\"text\" ' +\n                                            ' ng-class=\"{{getInputNotifcationClass(prStDes.' + fieldId + '.dataElement.id, true)}}\" ' +\n                                            ' ng-blur=\"saveDatavalue(prStDes.' + fieldId + ', outerForm.' + fieldId + ')\"' +\n                                            commonInputFieldProperty + '></span><span class=\"not-for-screen\"><input type=\"text\" value={{currentEvent.' + fieldId + '}}></span>';\n                                    }\n                                    else{\n                                    \tnewInputField = ' {{\"unsupported_value_type\" | translate }}: ' + prStDe.dataElement.valueType;\n                                    }\n                                }\n                            }\n                            else{\n                                NotificationService.showNotifcationDialog($translate.instant(\"error\"),\n                                    $translate.instant(\"custom_form_has_invalid_dataelement\"));\n\n                                return;\n                            }\n\n\n                        }\n                        newInputField = newInputField + ' <span ng-messages=\"outerForm.' + fieldId + '.$error\" class=\"required\" ng-if=\"interacted(outerForm.' + fieldId + ')\" ng-messages-include=\"../dhis-web-commons/angular-forms/error-messages.html\"></span>';\n\n                        htmlCode = htmlCode.replace(inputField, newInputField);\n\n                    }\n                }\n                htmlCode = addPopOver(htmlCode, programStageDataElements);\n                return {htmlCode: htmlCode, hasEventDate: hasEventDate};\n            }\n            return null;\n        },\n        getForTrackedEntity: function (trackedEntityForm, target) {\n            if (!trackedEntityForm) {\n                return null;\n            }\n\n            var htmlCode = trackedEntityForm.htmlCode ? trackedEntityForm.htmlCode : null;\n            if (htmlCode) {\n\n                var trackedEntityFormAttributes = [];\n                angular.forEach(trackedEntityForm.attributes, function (att) {\n                    trackedEntityFormAttributes[att.id] = att;\n                });\n\n\n                var inputRegex = /<input.*?\\/>/g, match, inputFields = [];\n                var hasProgramDate = false;\n                while (match = inputRegex.exec(htmlCode)) {\n                    inputFields.push(match[0]);\n                }\n\n                for (var i = 0; i < inputFields.length; i++) {\n                    var inputField = inputFields[i];\n                    var inputElement = $.parseHTML(inputField);\n                    var attributes = {};\n\n                    $(inputElement[0].attributes).each(function () {\n                        attributes[this.nodeName] = this.value;\n                    });\n\n                    var attId = '', fieldName = '', newInputField, programId;\n                    if (attributes.hasOwnProperty('attributeid')) {\n                        attId = attributes['attributeid'];\n                        fieldName = attId;\n                        var att = trackedEntityFormAttributes[attId];\n\n                        if (att) {\n                            var attMaxDate = att.allowFutureDate ? '' : 0;\n                            var isTrackerAssociate = att.valueType === 'TRACKER_ASSOCIATE';\n                            var commonInputFieldProperty = ' name=\"' + fieldName + '\"' +\n                                ' element-id=\"' + i + '\"' +\n                                this.getAttributesAsString(attributes) +\n                                ' d2-focus-next-on-enter' +\n                                ' ng-model=\"selectedTei.' + attId + '\" ' +\n                                ' attribute-data=\"attributesById.' + attId + '\" ' +\n                                ' selected-program-id=\"selectedProgram.id\" ' +\n                                ' selected-tei-id=\"selectedTei.trackedEntityInstance\" ' +\n                                ' ng-disabled=\"editingDisabled || isHidden(attributesById.' + attId + '.id) || ' + isTrackerAssociate+ '|| attributesById.' + attId + '.generated\"' +\n                                ' d2-attribute-validator ' +\n                                ' ng-required=\" ' + att.mandatory + '\" ';\n\n                            //check if attribute has optionset\n                            if (att.optionSetValue) {\n                                var optionSetId = att.optionSet.id;\n                                newInputField = '<span class=\"hideInPrint\"><ui-select theme=\"select2\" ' + commonInputFieldProperty + '  on-select=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" >' +\n                                    '<ui-select-match style=\"width:100%;\" allow-clear=\"true\" placeholder=\"' + $translate.instant('select_or_search') + '\">{{$select.selected.displayName || $select.selected}}</ui-select-match>' +\n                                    '<ui-select-choices ' +\n                                    'repeat=\"option.displayName as option in optionSets.' + optionSetId + '.options | filter: $select.search | limitTo:maxOptionSize\">' +\n                                    '<span ng-bind-html=\"option.displayName | highlight: $select.search\"></span>' +\n                                    '</ui-select-choices>' +\n                                    '</ui-select></span><span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                            }\n                            else {\n                                //check attribute type and generate corresponding angular input field\n                                if (att.valueType === \"NUMBER\" ||\n                                \t\tatt.valueType === \"INTEGER\" ||\n                                \t\tatt.valueType === \"INTEGER_POSITIVE\" ||\n                                \t\tatt.valueType === \"INTEGER_NEGATIVE\" ||\n                                \t\tatt.valueType === \"INTEGER_ZERO_OR_POSITIVE\" ) {\n                                    newInputField = '<span class=\"hideInPrint\"><input type=\"number\"' +\n                                        ' d2-number-validator ' +\n                                        ' number-type=\"' + att.valueType + '\" ' +\n                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + ' ></span><span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"BOOLEAN\") {\n                                \tnewInputField = '<span class=\"hideInPrint\"><d2-radio-button ' +\n                                                            ' dh-required=\" ' + (att.mandatory || att.unique) + '\" ' +\n                                                            ' dh-disabled=\"editingDisabled || isHidden(attributesById.' + attId + '.id) || ' + isTrackerAssociate + '\"' +\n                                                            ' dh-value=\"selectedTei.' + attId + '\" ' +\n                                                            ' dh-name=\"foo\" ' +\n                                                            ' dh-current-element=\"currentElement\" ' +\n                                                            ' dh-event=\"currentEvent.event\" ' +\n                                                            ' dh-id=\"' + attId + '\" >' +\n                                                    ' </d2-radio-button></span>' +\n                                                    '<span class=\"not-for-screen\">' +\n                                                        '<label class=\"radio-inline\"><input type=\"radio\" value=\"true\" ng-model=\"selectedTei.' + attId + '\">{{\\'yes\\' | translate}}</label>' +\n                                                        '<label class=\"radio-inline\"><input type=\"radio\" value=\"false\" ng-model=\"selectedTei.' + attId + '\">{{\\'no\\' | translate}}</label>' +\n                                                    '</span>';\n                                }\n                                else if (att.valueType === \"DATE\") {\n                                    newInputField = '<span class=\"hideInPrint\"><input  type=\"text\"' +\n                                        ' placeholder=\"{{dhis2CalendarFormat.keyDateFormat}}\" ' +\n                                        ' max-date=\" ' + attMaxDate + ' \" ' +\n                                        ' d2-date' +\n                                        ' blur-or-change=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + ' ></span>' +\n                                        '<span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"TRUE_ONLY\") {\n                                    newInputField = '<span class=\"hideInPrint\"><input type=\"checkbox\" ' +\n                                        ' ng-change=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + ' ></span>' +\n                                        '<span class=\"not-for-screen\"><input type=\"checkbox\" ng-checked={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"EMAIL\") {\n                                    newInputField = '<span class=\"hideInPrint\"><input type=\"email\"' +\n                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + ' >' +\n                                        '<span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"TRACKER_ASSOCIATE\") {\n                                \tnewInputField = '<span class=\"input-group hideInPrint\"> ' +\n                                                                        ' <input type=\"text\" ' +\n                                                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                                                        commonInputFieldProperty + ' >' +\n                                                                        '<span class=\"input-group-btn input-group-btn-no-width\"> ' +\n                                                            '<button class=\"btn btn-grp default-btn-height\" type=\"button\" ' +\n                                                                ' title=\"{{\\'add\\' | translate}} {{attributesById.' + attId + '.displayName}}\" ' +\n                                                                ' ng-if=\"!selectedTei.' + attId + '\" ' +\n                                                                ' ng-class=\"{true: \\'disable-clicks\\'} [editingDisabled]\" ' +\n                                                                ' ng-click=\"getTrackerAssociate(attributesById.' + attId + ', selectedTei.' + attId + ')\" >' +\n                                                                '<i class=\"fa fa-external-link\"></i> ' +\n                                                            '</button> ' +\n                                                            '<button class=\"btn btn-grp default-btn-height\" type=\"button\" ' +\n                                                                ' title=\"{{\\'remove\\' | translate}} {{attributesById.' + attId + '.displayName}}\" ' +\n                                                                ' ng-if=\"selectedTei.' + attId + '\" ' +\n                                                                ' ng-class=\"{true: \\'disable-clicks\\'} [editingDisabled]\" ' +\n                                                                ' ng-click=\"selectedTei.' + attId + ' = null\" >' +\n                                                                '<i class=\"fa fa-trash-o\"></i> ' +\n                                                            '</button> ' +\n                                                        '</span>'+\n                                                    '</span>'+\n                                                    '<span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"COORDINATE\") {\n                                \tnewInputField = '<span class=\"hideInPrint\"><d2-map ' +\n                            \t\t\t\t\t\t\t\t' id=\" ' + attId + '\" ' +\n\t\t\t\t\t\t                                    ' d2-object=\"selectedTei\" ' +\n\t\t\t\t\t\t                                    ' d2-value=\"selectedTei.' + attId + '\" ' +\n\t\t\t\t\t\t                                    ' d2-required=\" ' + (att.mandatory || att.unique) + '\" ' +\n\t\t\t\t\t                                        ' d2-disabled=\"editingDisabled || isHidden(attributesById.' + attId + '.id) || ' + isTrackerAssociate+ ' || attributesById.' + attId + '.generated\"' +\n\t\t\t\t\t\t                                    ' d2-coordinate-format=\"\\'TEXT\\'\" > ' +\n\t\t\t\t\t\t                            '</d2-map></span>'+\n                                                                            '<span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"ORGANISATION_UNIT\") {\n                                \tnewInputField = '<span class=\"hideInPrint\"><d2-org-unit-tree ' +\n\t\t\t\t                                            ' selected-org-unit=\"selectedOrgUnit\" ' +\n\t\t\t\t                                            ' id=\" ' + attId + '\" ' +\n\t\t\t\t                                            ' d2-object=\"selectedTei\" ' +\n\t\t\t\t\t\t                                    ' d2-value=\"selectedTei.' + attId + '\" ' +\n\t\t\t\t\t\t                                    ' d2-required=\" ' + (att.mandatory || att.unique) + '\" ' +\n\t\t\t\t\t                                        ' d2-disabled=\"editingDisabled || isHidden(attributesById.' + attId + '.id) || ' + isTrackerAssociate+ ' || attributesById.' + attId + '.generated\"' +\n\t\t\t\t\t                                        ' d2-function=\"teiValueUpdated()\" >' +\n\t\t\t\t                                    ' </d2-org-unit-tree></span>'+\n                                                                    '<span class=\"not-for-screen\"><input type=\"text\" value={{selectedTei.' + attId + '}}></span>';\n                                }\n                                else if (att.valueType === \"LONG_TEXT\") {\n                                    newInputField = '<span><textarea row =\"3\" ' +\n                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + ' ></textarea></span>';\n                                }\n                                else if (att.valueType === \"TEXT\") {\n                                    newInputField = '<input type=\"text\" ' +\n                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + '>';\n                                }\n                                else if (att.valueType === \"PHONE_NUMBER\") {\n                                    newInputField = '<input type=\"text\" ' +\n                                        ' ng-blur=\"teiValueUpdated(selectedTei,\\'' + attId + '\\')\" ' +\n                                        commonInputFieldProperty + '>';\n                                }\n                                else {\n                                    newInputField = ' {{\"unsupported_value_type\" | translate }} ' + att.valueType;\n                                }\n                            }\n                        }\n                        else{\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"),\n                                $translate.instant(\"custom_form_has_invalid_attribute\"));\n                            return;\n                        }\n                    }\n\n                    if (attributes.hasOwnProperty('programid')) {\n                        hasProgramDate = true;\n                        programId = attributes['programid'];\n                        if (programId === 'enrollmentDate') {\n                            fieldName = 'dateOfEnrollment';\n                            var enMaxDate = trackedEntityForm.selectEnrollmentDatesInFuture ? '' : 0;\n                            newInputField = '<input type=\"text\"' +\n                                ' name=\"' + fieldName + '\"' +\n                                ' element-id=\"' + i + '\"' +\n                                this.getAttributesAsString(attributes) +\n                                ' d2-focus-next-on-enter' +\n                                ' placeholder=\"{{dhis2CalendarFormat.keyDateFormat}}\" ' +\n                                ' ng-model=\"selectedEnrollment.dateOfEnrollment\" ' +\n                                ' ng-disabled=\"\\'' + target + '\\' === \\'PROFILE\\'\"' +\n                                ' d2-date' +\n                                ' max-date=\"' + enMaxDate + '\"' +\n                                ' ng-required=\"true\">';\n                        }\n                        if (programId === 'dateOfIncident' && trackedEntityForm.displayIncidentDate) {\n                            fieldName = 'dateOfIncident';\n                            var inMaxDate = trackedEntityForm.selectIncidentDatesInFuture ? '' : 0;\n                            newInputField = '<input type=\"text\"' +\n                                ' name=\"' + fieldName + '\"' +\n                                ' element-id=\"' + i + '\"' +\n                                this.getAttributesAsString(attributes) +\n                                ' d2-focus-next-on-enter' +\n                                ' placeholder=\"{{dhis2CalendarFormat.keyDateFormat}}\" ' +\n                                ' ng-model=\"selectedEnrollment.dateOfIncident\" ' +\n                                ' ng-disabled=\"\\'' + target + '\\' === \\'PROFILE\\'\"' +\n                                ' d2-date ' +\n                                ' max-date=\"' + inMaxDate + '\">';\n                        }\n                    }\n\n                    newInputField = newInputField + ' <span ng-messages=\"outerForm.' + fieldName + '.$error\" class=\"required\" ng-if=\"interacted(outerForm.' + fieldName + ')\" ng-messages-include=\"../dhis-web-commons/angular-forms/error-messages.html\"></span>';\n\n                    htmlCode = htmlCode.replace(inputField, newInputField);\n                }\n                htmlCode = addPopOver(htmlCode, trackedEntityFormAttributes);\n                return {htmlCode: htmlCode, hasProgramDate: hasProgramDate};\n            }\n            return null;\n        },\n        getAttributesAsString: function (attributes) {\n            if (attributes) {\n                var attributesAsString = '';\n                for (var prop in attributes) {\n                    if (prop !== 'value') {\n                        attributesAsString += prop + '=\"' + attributes[prop] + '\" ';\n                    }\n                }\n                return attributesAsString;\n            }\n            return null;\n        }\n    };\n    /* This function inserts the d2-pop-over attributes into the tags containing d2-input-label attribute to\n     * add description and url popover to those tags */\n    function addPopOver(htmlCodeToInsertPopOver, popOverContent) {\n\n        var inputRegex = /<span.*?\\/span>/g;\n        var match, tagToInsertPopOver, tagWithPopOver;\n        var htmlCode = htmlCodeToInsertPopOver;\n        while (match = inputRegex.exec(htmlCodeToInsertPopOver)) {\n            if (match[0].indexOf(\"d2-input-label\") > -1) {\n                tagToInsertPopOver = match[0];\n                tagWithPopOver = insertPopOverSpanToTag(tagToInsertPopOver, popOverContent);\n                htmlCode = htmlCode.replace(tagToInsertPopOver,tagWithPopOver);\n            }\n        }\n        return htmlCode;\n\n    }\n\n    function insertPopOverSpanToTag(tagToInsertPopOverSpan, popOverContent)  {\n\n        var attribute, attributes, fieldId, description, url, element, attValue;\n        var popOverSpanElement, tagWithPopOverSpan;\n\n        element = $(tagToInsertPopOverSpan);\n        attributes = element[0].attributes;\n\n        for (var index = 0; index < attributes.length; index++) {\n            if (attributes[index].name === \"d2-input-label\") {\n                attValue = attributes[index].value;\n                break;\n            }\n        }\n        if (attValue) {\n            popOverSpanElement = $('<span></span>');\n            popOverSpanElement.attr(\"d2-pop-over\",\"\");\n            popOverSpanElement.attr(\"details\",\"{{'details'| translate}}\");\n            popOverSpanElement.attr(\"trigger\",\"click\");\n            popOverSpanElement.attr(\"placement\",\"right\");\n            popOverSpanElement.attr(\"class\",\"popover-label\");\n\n            if (attValue.indexOf(\"attributeId.\") > -1) {\n                fieldId = attValue.split(\".\")[1];\n                description = popOverContent[fieldId].description ? \"'\" + popOverContent[fieldId].description + \"'\" :\n                    \"undefined\";\n                popOverSpanElement.attr(\"content\",\"{description: \" + description + \"}\");\n                popOverSpanElement.attr(\"template\",\"attribute-details.html\");\n\n            } else {\n                fieldId = attValue.split(\"-\")[1];\n                description = popOverContent[fieldId].dataElement.description ? \"'\" +\n                popOverContent[fieldId].dataElement.description + \"'\" : \"undefined\";\n                url = popOverContent[fieldId].dataElement.url ? \"'\" +\n                popOverContent[fieldId].dataElement.url + \"'\" : \"undefined\";\n                popOverSpanElement.attr(\"content\",\"{description: \" + description + \", url:\" + url + \"}\");\n                popOverSpanElement.attr(\"template\",\"dataelement-details.html\");\n            }\n            popOverSpanElement.html(\"<a href title=\\\"{{'details'| translate}}\\\" class=\\\"wrap-text\\\" tabindex=\\\"-1\\\">\" +element.html() + \"</a>\");\n            element.html(popOverSpanElement[0].outerHTML.replace('d2-pop-over=\"\"','d2-pop-over'));\n            tagWithPopOverSpan = element[0].outerHTML;\n        }\n        return tagWithPopOverSpan;\n    }\n})\n\n/* Context menu for grid*/\n.service('ContextMenuSelectedItem', function () {\n    this.selectedItem = '';\n\n    this.setSelectedItem = function (selectedItem) {\n        this.selectedItem = selectedItem;\n    };\n\n    this.getSelectedItem = function () {\n        return this.selectedItem;\n    };\n})\n\n/* Modal service for user interaction */\n.service('ModalService', ['$modal', function ($modal) {\n\n    var modalDefaults = {\n        backdrop: true,\n        keyboard: true,\n        modalFade: true,\n        templateUrl: 'views/modal.html'\n    };\n\n    var modalOptions = {\n        closeButtonText: 'Close',\n        actionButtonText: 'OK',\n        headerText: 'Proceed?',\n        bodyText: 'Perform this action?'\n    };\n\n    this.showModal = function (customModalDefaults, customModalOptions) {\n        if (!customModalDefaults)\n            customModalDefaults = {};\n        customModalDefaults.backdrop = 'static';\n        return this.show(customModalDefaults, customModalOptions);\n    };\n\n    this.show = function (customModalDefaults, customModalOptions) {\n        //Create temp objects to work with since we're in a singleton service\n        var tempModalDefaults = {};\n        var tempModalOptions = {};\n\n        //Map angular-ui modal custom defaults to modal defaults defined in service\n        angular.extend(tempModalDefaults, modalDefaults, customModalDefaults);\n\n        //Map modal.html $scope custom properties to defaults defined in service\n        angular.extend(tempModalOptions, modalOptions, customModalOptions);\n\n        if (!tempModalDefaults.controller) {\n            tempModalDefaults.controller = function ($scope, $modalInstance) {\n                $scope.modalOptions = tempModalOptions;\n                $scope.modalOptions.ok = function (result) {\n                    $modalInstance.close(result);\n                };\n                $scope.modalOptions.close = function (result) {\n                    $modalInstance.dismiss('cancel');\n                };\n            };\n        }\n\n        return $modal.open(tempModalDefaults).result;\n    };\n\n}])\n\n/* Dialog service for user interaction */\n.service('DialogService', ['$modal', function ($modal) {\n\n    var dialogDefaults = {\n        backdrop: true,\n        keyboard: true,\n        backdropClick: true,\n        modalFade: true,\n        templateUrl: 'views/dialog.html'\n    };\n\n    var dialogOptions = {\n        closeButtonText: 'close',\n        actionButtonText: 'ok',\n        headerText: 'dhis2_tracker',\n        bodyText: 'Perform this action?'\n    };\n\n    this.showDialog = function (customDialogDefaults, customDialogOptions) {\n        if (!customDialogDefaults)\n            customDialogDefaults = {};\n        customDialogDefaults.backdropClick = false;\n        return this.show(customDialogDefaults, customDialogOptions);\n    };\n\n    this.show = function (customDialogDefaults, customDialogOptions) {\n        //Create temp objects to work with since we're in a singleton service\n        var tempDialogDefaults = {};\n        var tempDialogOptions = {};\n\n        //Map angular-ui modal custom defaults to modal defaults defined in service\n        angular.extend(tempDialogDefaults, dialogDefaults, customDialogDefaults);\n\n        //Map modal.html $scope custom properties to defaults defined in service\n        angular.extend(tempDialogOptions, dialogOptions, customDialogOptions);\n\n        if (!tempDialogDefaults.controller) {\n            tempDialogDefaults.controller = function ($scope, $modalInstance) {\n                $scope.dialogOptions = tempDialogOptions;\n                $scope.dialogOptions.ok = function (result) {\n                    $modalInstance.close(result);\n                };\n            };\n        }\n\n        return $modal.open(tempDialogDefaults).result;\n    };\n\n}])\n.service('NotificationService', function (DialogService) {\n    this.showNotifcationDialog = function(errorMsgheader, errorMsgBody){\n        var dialogOptions = {\n            headerText: errorMsgheader,\n            bodyText: errorMsgBody\n        };\n        DialogService.showDialog({}, dialogOptions);\n    };\n\n    this.showNotifcationWithOptions = function(dialogDefaults, dialogOptions){\n        DialogService.showDialog(dialogDefaults, dialogOptions);\n    };\n\n})\n.service('Paginator', function () {\n    this.page = 1;\n    this.pageSize = 50;\n    this.itemCount = 0;\n    this.pageCount = 0;\n    this.toolBarDisplay = 5;\n\n    this.setPage = function (page) {\n        if (page > this.getPageCount()) {\n            return;\n        }\n\n        this.page = page;\n    };\n\n    this.getPage = function () {\n        return this.page;\n    };\n\n    this.setPageSize = function (pageSize) {\n        this.pageSize = pageSize;\n    };\n\n    this.getPageSize = function () {\n        return this.pageSize;\n    };\n\n    this.setItemCount = function (itemCount) {\n        this.itemCount = itemCount;\n    };\n\n    this.getItemCount = function () {\n        return this.itemCount;\n    };\n\n    this.setPageCount = function (pageCount) {\n        this.pageCount = pageCount;\n    };\n\n    this.getPageCount = function () {\n        return this.pageCount;\n    };\n\n    this.setToolBarDisplay = function (toolBarDisplay) {\n        this.toolBarDisplay = toolBarDisplay;\n    };\n\n    this.getToolBarDisplay = function () {\n        return this.toolBarDisplay;\n    };\n\n    this.lowerLimit = function () {\n        var pageCountLimitPerPageDiff = this.getPageCount() - this.getToolBarDisplay();\n\n        if (pageCountLimitPerPageDiff < 0) {\n            return 0;\n        }\n\n        if (this.getPage() > pageCountLimitPerPageDiff + 1) {\n            return pageCountLimitPerPageDiff;\n        }\n\n        var low = this.getPage() - (Math.ceil(this.getToolBarDisplay() / 2) - 1);\n\n        return Math.max(low, 0);\n    };\n})\n\n.service('GridColumnService', function ($http, $q, DHIS2URL, $translate, SessionStorageService, NotificationService) {\n    var GRIDCOLUMNS_URL = DHIS2URL + '/api/userDataStore/gridColumns/';\n    return {\n        columnExists: function (cols, id) {\n            var colExists = false;\n            if (!angular.isObject(cols) || !id || angular.isObject(cols) && !cols.length) {\n                return colExists;\n            }\n\n            for (var i = 0; i < cols.length && !colExists; i++) {\n                if (cols[i].id === id) {\n                    colExists = true;\n                }\n            }\n            return colExists;\n        },\n        set: function (gridColumns, name) {\n            var deferred = $q.defer();\n            var httpMessage = {\n                method: \"put\",\n                url: GRIDCOLUMNS_URL + name,\n                data: {\"gridColumns\": gridColumns},\n                headers: {'Content-Type': 'application/json;charset=UTF-8'}\n            };\n\n            $http(httpMessage).then(function (response) {\n                deferred.resolve(response.data);\n            },function (error) {\n                httpMessage.method = \"post\";\n                $http(httpMessage).then(function (response) {\n                    deferred.resolve(response.data);\n                }, function (error) {\n                    if (error && error.data) {\n                        deferred.resolve(error.data);\n                    } else {\n                        deferred.resolve(null);\n                    }\n                });\n            });\n            return deferred.promise;\n        },\n        get: function (name) {\n            var promise = $http.get(GRIDCOLUMNS_URL+name).then(function (response) {\n                if (response && response.data && response.data.gridColumns) {\n                    SessionStorageService.set(name, {id:name, columns:response.data.gridColumns});\n                    return response.data.gridColumns;\n                } else {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"gridColumns_invalid\"));\n                    return null;\n                }\n            }, function (error) {\n                var gridColumnsFromSessionStore = SessionStorageService.get(name);\n                if (gridColumnsFromSessionStore && gridColumnsFromSessionStore.columns) {\n                    return gridColumnsFromSessionStore.columns;\n                }\n                return null;\n            });\n            return promise;\n        }\n    };\n})\n\n/* Service for uploading/downloading file */\n.service('FileService', function ($http, DHIS2URL) {\n\n    return {\n        get: function (uid) {\n            var promise = $http.get(DHIS2URL + '/api/fileResources/' + uid).then(function (response) {\n                return response.data;\n            } ,function(error) {\n                return null;\n            });\n            return promise;\n        },\n        download: function (fileName) {\n            var promise = $http.get(fileName).then(function (response) {\n                return response.data;\n            }, function(error) {\n                return null;\n            });\n            return promise;\n        },\n        upload: function(file){\n            var formData = new FormData();\n            formData.append('file', file);\n            var headers = {transformRequest: angular.identity, headers: {'Content-Type': undefined}};\n            var promise = $http.post(DHIS2URL + '/api/fileResources', formData, headers).then(function(response){\n                return response.data;\n            },function(error) {\n               return null;\n            });\n            return promise;\n        }\n    };\n})\n/* Returns a function for getting rules for a specific program */\n.factory('RulesFactory', function($q,MetaDataFactory,$filter){\n    var staticReplacements =\n                        [{regExp:new RegExp(\"([^\\w\\d])(and)([^\\w\\d])\",\"gi\"), replacement:\"$1&&$3\"},\n                        {regExp:new RegExp(\"([^\\w\\d])(or)([^\\w\\d])\",\"gi\"), replacement:\"$1||$3\"},\n                        {regExp:new RegExp(\"V{execution_date}\",\"g\"), replacement:\"V{event_date}\"}];\n\n    var performStaticReplacements = function(expression) {\n        angular.forEach(staticReplacements, function(staticReplacement) {\n            expression = expression.replace(staticReplacement.regExp, staticReplacement.replacement);\n        });\n\n        return expression;\n    };\n\n    return{\n        loadRules : function(programUid){\n            var def = $q.defer();\n            MetaDataFactory.getAll('constants').then(function(constants) {\n                MetaDataFactory.getByProgram('programIndicators',programUid).then(function(pis){\n                    var variables = [];\n                    var programRules = [];\n                    angular.forEach(pis, function(pi){\n                        if(pi.displayInForm){\n                            var newAction = {\n                                    id:pi.id,\n                                    content:pi.displayDescription ? pi.displayDescription : pi.displayName,\n                                    data:pi.expression,\n                                    programRuleActionType:'DISPLAYKEYVALUEPAIR',\n                                    location:'indicators'\n                                };\n                            var newRule = {\n                                    displayName:pi.displayName,\n                                    id: pi.id,\n                                    shortname:pi.shortname,\n                                    code:pi.code,\n                                    program:pi.program,\n                                    description:pi.description,\n                                    condition:pi.filter ? pi.filter : 'true',\n                                    programRuleActions: [newAction]\n                                };\n\n                            programRules.push(newRule);\n\n                            var variablesInCondition = newRule.condition.match(/[A#]{\\w+.?\\w*}/g);\n                            var variablesInData = newAction.data.match(/[A#]{\\w+.?\\w*}/g);\n                            var valueCountPresent = newRule.condition.indexOf(\"V{value_count}\") >= 0\n                                                            || newAction.data.indexOf(\"V{value_count}\") >= 0;\n                            var positiveValueCountPresent = newRule.condition.indexOf(\"V{zero_pos_value_count}\") >= 0\n                                                            || newAction.data.indexOf(\"V{zero_pos_value_count}\") >= 0;\n                            var variableObjectsCurrentExpression = [];\n\n                            var pushDirectAddressedVariable = function(variableWithCurls) {\n                                var variableName = $filter('trimvariablequalifiers')(variableWithCurls);\n                                var variableNameParts = variableName.split('.');\n\n                                var newVariableObject;\n\n                                if(variableNameParts.length === 2) {\n                                    //this is a programstage and dataelement specification. translate to program variable:\n                                    newVariableObject = {\n                                        displayName:variableName,\n                                        programRuleVariableSourceType:'DATAELEMENT_CURRENT_EVENT',\n                                        dataElement:variableNameParts[1],\n                                        program:programUid,\n                                        useCodeForOptionSet:true\n                                    };\n                                }\n                                else if(variableNameParts.length === 1)\n                                {\n                                    //This is an attribute - let us translate to program variable:\n                                    newVariableObject = {\n                                        displayName:variableName,\n                                        programRuleVariableSourceType:'TEI_ATTRIBUTE',\n                                        trackedEntityAttribute:variableNameParts[0],\n                                        program:programUid,\n                                        useCodeForOptionSet:true\n                                    };\n                                }\n\n                                variables.push(newVariableObject);\n\n                                return newVariableObject;\n\n                            };\n\n                            angular.forEach(variablesInCondition, function(variableInCondition) {\n                                var pushed = pushDirectAddressedVariable(variableInCondition);\n                            });\n\n                            angular.forEach(variablesInData, function(variableInData) {\n                                var pushed = pushDirectAddressedVariable(variableInData);\n\n                                //We only count the number of values in the data part of the rule\n                                //(Called expression in program indicators)\n                                variableObjectsCurrentExpression.push(pushed);\n                            });\n\n                            //Change expression or data part of the rule to match the program rules execution model\n                            if(valueCountPresent) {\n                                var valueCountText;\n                                angular.forEach(variableObjectsCurrentExpression, function(variableCurrentRule) {\n                                   if(valueCountText) {\n                                       //This is not the first value in the value count part of the expression.\n                                       valueCountText +=  ' + d2:count(\\'' + variableCurrentRule.displayName + '\\')';\n                                   }\n                                   else\n                                   {\n                                       //This is the first part value in the value count expression:\n                                       valueCountText = '(d2:count(\\'' + variableCurrentRule.displayName + '\\')';\n                                   }\n                                });\n                                //To finish the value count expression we need to close the paranthesis:\n                                valueCountText += ')';\n\n                                //Replace all occurrences of value counts in both the data and expression:\n                                newRule.condition = newRule.condition.replace(new RegExp(\"V{value_count}\", 'g'),valueCountText);\n                                newAction.data = newAction.data.replace(new RegExp(\"V{value_count}\", 'g'),valueCountText);\n                            }\n                            if(positiveValueCountPresent) {\n                                var zeroPosValueCountText;\n                                angular.forEach(variableObjectsCurrentExpression, function(variableCurrentRule) {\n                                   if(zeroPosValueCountText) {\n                                       //This is not the first value in the value count part of the expression.\n                                       zeroPosValueCountText +=  '+ d2:countifzeropos(\\'' + variableCurrentRule.displayName + '\\')';\n                                   }\n                                   else\n                                   {\n                                       //This is the first part value in the value count expression:\n                                       zeroPosValueCountText = '(d2:countifzeropos(\\'' + variableCurrentRule.displayName + '\\')';\n                                   }\n                                });\n                                //To finish the value count expression we need to close the paranthesis:\n                                zeroPosValueCountText += ')';\n\n                                //Replace all occurrences of value counts in both the data and expression:\n                                newRule.condition = newRule.condition.replace(new RegExp(\"V{zero_pos_value_count}\", 'g'),zeroPosValueCountText);\n                                newAction.data = newAction.data.replace(new RegExp(\"V{zero_pos_value_count}\", 'g'),zeroPosValueCountText);\n                            }\n\n                            newAction.data = performStaticReplacements(newAction.data);\n                            newRule.condition = performStaticReplacements(newRule.condition);\n                        }\n                    });\n\n                    var programIndicators = {rules:programRules, variables:variables};\n\n                    MetaDataFactory.getByProgram('programValidations',programUid).then(function(programValidations){\n                        MetaDataFactory.getByProgram('programRuleVariables',programUid).then(function(programVariables){\n                            MetaDataFactory.getByProgram('programRules',programUid).then(function(prs){\n                                var programRules = [];\n                                angular.forEach(prs, function(rule){\n                                    rule.actions = [];\n                                    rule.programStageId = rule.programStage && rule.programStage.id ? rule.programStage.id : null;\n                                    programRules.push(rule);\n                                });\n                                def.resolve({constants: constants, programIndicators: programIndicators, programValidations: programValidations, programVariables: programVariables, programRules: programRules});\n                            });\n                        });\n                    });\n                });\n            });\n            return def.promise;\n        }\n    };\n})\n/* service for building variables based on the data in users fields */\n.service('VariableService', function(DateUtils,OptionSetService,$filter,$log){\n    var processSingleValue = function(processedValue,valueType){\n        //First clean away single or double quotation marks at the start and end of the variable name.\n        processedValue = $filter('trimquotes')(processedValue);\n\n        //Append single quotation marks in case the variable is of text or date type:\n        if(valueType === 'LONG_TEXT' || valueType === 'TEXT' || valueType === 'DATE' || valueType === 'OPTION_SET') {\n            if(processedValue) {\n                processedValue = \"'\" + processedValue + \"'\";\n            } else {\n                processedValue = \"''\";\n            }\n        }\n        else if(valueType === 'BOOLEAN' || valueType === 'TRUE_ONLY') {\n            if(processedValue && eval(processedValue)) {\n                processedValue = true;\n            }\n            else {\n                processedValue = false;\n            }\n        }\n        else if(valueType === \"INTEGER\" || valueType === \"NUMBER\" || valueType === \"INTEGER_POSITIVE\" || valueType === \"INTEGER_NEGATIVE\" || valueType === \"INTEGER_ZERO_OR_POSITIVE\" || valueType === \"PERCENTAGE\") {\n            if(processedValue) {\n                processedValue = Number(processedValue);\n            } else {\n                processedValue = 0;\n            }\n        }\n        else{\n            $log.warn(\"unknown datatype:\" + valueType);\n        }\n\n        return processedValue;\n    };\n\n    var pushVariable = function(variables, variablename, varValue, allValues, varType, variablefound, variablePrefix, variableEventDate, useCodeForOptionSet) {\n\n        var processedValues = [];\n\n        angular.forEach(allValues, function(alternateValue) {\n            processedValues.push(processSingleValue(alternateValue,varType));\n        });\n\n        variables[variablename] = {\n            variableValue:processSingleValue(varValue, varType),\n            useCodeForOptionSet:useCodeForOptionSet,\n            variableType:varType,\n            hasValue:variablefound,\n            variableEventDate:variableEventDate,\n            variablePrefix:variablePrefix,\n            allValues:processedValues\n        };\n        return variables;\n    };\n\n    var getDataElementValueOrCodeForValueInternal = function(useCodeForOptionSet, value, dataElementId, allDes, optionSets) {\n        return useCodeForOptionSet && allDes && allDes[dataElementId].dataElement.optionSet ?\n                                            OptionSetService.getCode(optionSets[allDes[dataElementId].dataElement.optionSet.id].options, value)\n                                            : value;\n    };\n\n    return {\n        processValue: function(value, type) {\n            return processSingleValue(value,type);\n        },\n        getDataElementValueOrCode: function(useCodeForOptionSet, event, dataElementId, allDes, optionSets) {\n            return getDataElementValueOrCodeForValueInternal(useCodeForOptionSet, event[dataElementId], dataElementId, allDes, optionSets);\n        },\n        getDataElementValueOrCodeForValue: function(useCodeForOptionSet, value, dataElementId, allDes, optionSets) {\n            return getDataElementValueOrCodeForValueInternal(useCodeForOptionSet, value, dataElementId, allDes, optionSets);\n        },\n        getVariables: function(allProgramRules, executingEvent, evs, allDes, selectedEntity, selectedEnrollment, optionSets) {\n\n            var variables = {};\n\n            var programVariables = allProgramRules.programVariables;\n\n            programVariables = programVariables.concat(allProgramRules.programIndicators.variables);\n\n            angular.forEach(programVariables, function(programVariable) {\n                var dataElementId = programVariable.dataElement;\n                if(programVariable.dataElement && programVariable.dataElement.id) {\n                    dataElementId = programVariable.dataElement.id;\n                }\n\n                var trackedEntityAttributeId = programVariable.trackedEntityAttribute;\n                if(programVariable.trackedEntityAttribute && programVariable.trackedEntityAttribute.id) {\n                    trackedEntityAttributeId = programVariable.trackedEntityAttribute.id;\n                }\n\n                var programStageId = programVariable.programStage;\n                if(programVariable.programStage && programVariable.programStage.id) {\n                    programStageId = programVariable.programStage.id;\n                }\n\n                var valueFound = false;\n                //If variable evs is not defined, it means the rules is run before any events is registered, skip the types that require an event\n                if(programVariable.programRuleVariableSourceType === \"DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE\" && evs && evs.byStage){\n                    if(programStageId) {\n                        var allValues = [];\n                        angular.forEach(evs.byStage[programStageId], function(event) {\n                            if(event[dataElementId] !== null) {\n                                if(angular.isDefined(event[dataElementId])\n                                        && event[dataElementId] !== \"\"){\n                                    var value = getDataElementValueOrCodeForValueInternal(programVariable.useCodeForOptionSet, event[dataElementId], dataElementId, allDes, optionSets);\n\n                                    allValues.push(value);\n                                    valueFound = true;\n                                    variables = pushVariable(variables, programVariable.displayName, value, allValues, allDes[dataElementId].dataElement.valueType, valueFound, '#', event.eventDate, programVariable.useCodeForOptionSet);\n                                }\n                            }\n                        });\n                    } else {\n                        $log.warn(\"Variable id:'\" + programVariable.id + \"' name:'\" + programVariable.displayName\n                            + \"' does not have a programstage defined,\"\n                            + \" despite that the variable has sourcetype DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE\" );\n                    }\n                }\n                else if(programVariable.programRuleVariableSourceType === \"DATAELEMENT_NEWEST_EVENT_PROGRAM\" && evs){\n                    var allValues = [];\n                    angular.forEach(evs.all, function(event) {\n                        if(angular.isDefined(event[dataElementId])\n                            && event[dataElementId] !== null\n                            && event[dataElementId] !== \"\"){\n                            var value = getDataElementValueOrCodeForValueInternal(programVariable.useCodeForOptionSet, event[dataElementId], dataElementId, allDes, optionSets);\n\n                            allValues.push(value);\n                            valueFound = true;\n                            variables = pushVariable(variables, programVariable.displayName, value, allValues, allDes[dataElementId].dataElement.valueType, valueFound, '#', event.eventDate, programVariable.useCodeForOptionSet);\n                        }\n                    });\n                }\n                else if(programVariable.programRuleVariableSourceType === \"DATAELEMENT_CURRENT_EVENT\" && evs){\n                    if(angular.isDefined(executingEvent[dataElementId])\n                        && executingEvent[dataElementId] !== null\n                        && executingEvent[dataElementId] !== \"\"){\n                        var value = getDataElementValueOrCodeForValueInternal(programVariable.useCodeForOptionSet, executingEvent[dataElementId], dataElementId, allDes, optionSets);\n\n                        valueFound = true;\n                        variables = pushVariable(variables, programVariable.displayName, value, null, allDes[dataElementId].dataElement.valueType, valueFound, '#', executingEvent.eventDate, programVariable.useCodeForOptionSet );\n                    }\n                }\n                else if(programVariable.programRuleVariableSourceType === \"DATAELEMENT_PREVIOUS_EVENT\" && evs){\n                    //Only continue checking for a value if there is more than one event.\n                    if(evs.all && evs.all.length > 1) {\n                        var allValues = [];\n                        var previousvalue = null;\n                        var previousEventDate = null;\n                        var currentEventPassed = false;\n                        for(var i = 0; i < evs.all.length; i++) {\n                            //Store the values as we iterate through the stages\n                            //If the event[i] is not the current event, it is older(previous). Store the previous value if it exists\n                            if(!currentEventPassed && evs.all[i] !== executingEvent &&\n                                angular.isDefined(evs.all[i][dataElementId])\n                                && evs.all[i][dataElementId] !== \"\") {\n                                previousvalue = getDataElementValueOrCodeForValueInternal(programVariable.useCodeForOptionSet, evs.all[i][dataElementId], dataElementId, allDes, optionSets);\n                                previousEventDate = evs.all[i].eventDate;\n                                allValues.push(value);\n                                valueFound = true;\n                            }\n                            else if(evs.all[i] === executingEvent) {\n                                //We have iterated to the newest event - store the last collected variable value - if any is found:\n                                if(valueFound) {\n                                    variables = pushVariable(variables, programVariable.displayName, previousvalue, allValues, allDes[dataElementId].dataElement.valueType, valueFound, '#', previousEventDate, programVariable.useCodeForOptionSet);\n                                }\n                                //Set currentEventPassed, ending the iteration:\n                                currentEventPassed = true;\n                            }\n                        }\n                    }\n                }\n                else if(programVariable.programRuleVariableSourceType === \"TEI_ATTRIBUTE\"){\n                    angular.forEach(selectedEntity.attributes , function(attribute) {\n                        if(!valueFound) {\n                            if(attribute.attribute === trackedEntityAttributeId\n                                    && angular.isDefined(attribute.value)\n                                    && attribute.value !== null\n                                    && attribute.value !== \"\") {\n                                valueFound = true;\n                                //In registration, the attribute type is found in .type, while in data entry the same data is found in .valueType.\n                                //Handling here, but planning refactor in registration so it will always be .valueType\n                                variables = pushVariable(variables,\n                                    programVariable.displayName,\n                                    programVariable.useCodeForOptionSet ? (angular.isDefined(attribute.optionSetCode) ? attribute.optionSetCode : attribute.value) : attribute.value,\n                                    null,\n                                    attribute.type ? attribute.type : attribute.valueType, valueFound,\n                                    'A',\n                                    '',\n                                    programVariable.useCodeForOptionSet);\n                            }\n                        }\n                    });\n                }\n                else if(programVariable.programRuleVariableSourceType === \"CALCULATED_VALUE\"){\n                    //We won't assign the calculated variables at this step. The rules execution will calculate and assign the variable.\n                }\n                else {\n                    //If the rules was executed without events, we ended up in this else clause as expected, as most of the variables require an event to be mapped\n                    if(evs)\n                    {\n                        //If the rules was executed and events was supplied, we should have found an if clause for the the source type, and not ended up in this dead end else.\n                        $log.warn(\"Unknown programRuleVariableSourceType:\" + programVariable.programRuleVariableSourceType);\n                    }\n                }\n\n\n                if(!valueFound){\n                    //If there is still no value found, assign default value:\n                    if(dataElementId && allDes) {\n                        var dataElement = allDes[dataElementId];\n                        if( dataElement ) {\n                            variables = pushVariable(variables, programVariable.displayName, \"\", null, dataElement.dataElement.valueType, false, '#', '', programVariable.useCodeForOptionSet );\n                        }\n                        else {\n                            $log.warn(\"Variable #{\" + programVariable.displayName + \"} is linked to a dataelement that is not part of the program\");\n                            variables = pushVariable(variables, programVariable.displayName, \"\", null, \"TEXT\",false, '#', '', programVariable.useCodeForOptionSet );\n                        }\n                    }\n                    else if (programVariable.trackedEntityAttribute) {\n                        //The variable is an attribute, set correct prefix and a blank value\n                        variables = pushVariable(variables, programVariable.displayName, \"\", null, \"TEXT\",false, 'A', '', programVariable.useCodeForOptionSet );\n                    }\n                    else {\n                        //Fallback for calculated(assigned) values:\n                        variables = pushVariable(variables, programVariable.displayName, \"\", null, \"TEXT\",false, '#', '', programVariable.useCodeForOptionSet );\n                    }\n                }\n            });\n\n            //add context variables:\n            //last parameter \"valuefound\" is always true for event date\n            variables = pushVariable(variables, 'current_date', DateUtils.getToday(), null, 'DATE', true, 'V', '', false );\n\n            variables = pushVariable(variables, 'event_date', executingEvent.eventDate, null, 'DATE', true, 'V', '', false );\n            variables = pushVariable(variables, 'due_date', executingEvent.dueDate, null, 'DATE', true, 'V', '' );\n            variables = pushVariable(variables, 'event_count', evs ? evs.all.length : 0, null, 'INTEGER', true, 'V', '', false );\n\n            variables = pushVariable(variables, 'enrollment_date', selectedEnrollment ? selectedEnrollment.enrollmentDate : '', null, 'DATE', selectedEnrollment ? true : false, 'V', '', false );\n            variables = pushVariable(variables, 'enrollment_id', selectedEnrollment ? selectedEnrollment.enrollment : '', null, 'TEXT',  selectedEnrollment ? true : false, 'V', '', false );\n            variables = pushVariable(variables, 'event_id', executingEvent ? executingEvent.event : '', null, 'TEXT',  executingEvent ? true : false, 'V', executingEvent ? executingEvent.eventDate : false, false);\n\n            variables = pushVariable(variables, 'incident_date', selectedEnrollment ? selectedEnrollment.incidentDate : '', null, 'DATE',  selectedEnrollment ? true : false, 'V', '', false);\n            variables = pushVariable(variables, 'enrollment_count', selectedEnrollment ? 1 : 0, null, 'INTEGER', true, 'V', '', false);\n            variables = pushVariable(variables, 'tei_count', selectedEnrollment ? 1 : 0, null, 'INTEGER', true, 'V', '', false);\n\n            //Push all constant values:\n            angular.forEach(allProgramRules.constants, function(constant){\n                variables = pushVariable(variables, constant.id, constant.value, null, 'INTEGER', true, 'C', '', false);\n            });\n\n            return variables;\n        }\n    };\n})\n\n/* service for executing tracker rules and broadcasting results */\n.service('TrackerRulesExecutionService', function($translate, VariableService, DateUtils, NotificationService, DHIS2EventFactory, RulesFactory, CalendarService, OptionSetService, $rootScope, $q, $log, $filter, orderByFilter){\n    var NUMBER_OF_EVENTS_IN_SCOPE = 10;\n\n    //Variables for storing scope and rules in memory from rules execution to rules execution:\n    var allProgramRules = false;\n    var crossEventRulesExist = false;\n    var lastEventId = null;\n    var lastEventDate = null;\n    var lastProgramId = null;\n    var eventScopeExceptCurrent = false;\n\n    var replaceVariables = function(expression, variablesHash){\n        //replaces the variables in an expression with actual variable values.\n\n        //Check if the expression contains program rule variables at all(any curly braces):\n        if(expression.indexOf('{') !== -1) {\n            //Find every variable name in the expression;\n            var variablespresent = expression.match(/[A#CV]{\\w+.?\\w*}/g);\n            //Replace each matched variable:\n            angular.forEach(variablespresent, function(variablepresent) {\n                //First strip away any prefix and postfix signs from the variable name:\n                variablepresent = variablepresent.replace(\"#{\",\"\").replace(\"A{\",\"\").replace(\"C{\",\"\").replace(\"V{\",\"\").replace(\"}\",\"\");\n\n                if(angular.isDefined(variablesHash[variablepresent])) {\n                    //Replace all occurrences of the variable name(hence using regex replacement):\n                    expression = expression.replace(new RegExp( variablesHash[variablepresent].variablePrefix + \"{\" + variablepresent + \"}\", 'g'),\n                        variablesHash[variablepresent].variableValue);\n                }\n                else {\n                    $log.warn(\"Expression \" + expression + \" conains variable \" + variablepresent\n                        + \" - but this variable is not defined.\" );\n                }\n            });\n        }\n\n        //Check if the expression contains environment  variables\n        if(expression.indexOf('V{') !== -1) {\n            //Find every variable name in the expression;\n            var variablespresent = expression.match(/V{\\w+.?\\w*}/g);\n            //Replace each matched variable:\n            angular.forEach(variablespresent, function(variablepresent) {\n                //First strip away any prefix and postfix signs from the variable name:\n                variablepresent = variablepresent.replace(\"V{\",\"\").replace(\"}\",\"\");\n\n                if(angular.isDefined(variablesHash[variablepresent]) &&\n                    variablesHash[variablepresent].variablePrefix === 'V') {\n                    //Replace all occurrences of the variable name(hence using regex replacement):\n                    expression = expression.replace(new RegExp(\"V{\" + variablepresent + \"}\", 'g'),\n                        variablesHash[variablepresent].variableValue);\n                }\n                else {\n                    $log.warn(\"Expression \" + expression + \" conains context variable \" + variablepresent\n                        + \" - but this variable is not defined.\" );\n                }\n            });\n        }\n\n        //Check if the expression contains attribute variables:\n        if(expression.indexOf('A{') !== -1) {\n            //Find every attribute in the expression;\n            var variablespresent = expression.match(/A{\\w+.?\\w*}/g);\n            //Replace each matched variable:\n            angular.forEach(variablespresent, function(variablepresent) {\n                //First strip away any prefix and postfix signs from the variable name:\n                variablepresent = variablepresent.replace(\"A{\",\"\").replace(\"}\",\"\");\n\n                if(angular.isDefined(variablesHash[variablepresent]) &&\n                    variablesHash[variablepresent].variablePrefix === 'A') {\n                    //Replace all occurrences of the variable name(hence using regex replacement):\n                    expression = expression.replace(new RegExp(\"A{\" + variablepresent + \"}\", 'g'),\n                        variablesHash[variablepresent].variableValue);\n                }\n                else {\n                    $log.warn(\"Expression \" + expression + \" conains attribute \" + variablepresent\n                        + \" - but this attribute is not defined.\" );\n                }\n            });\n        }\n\n        //Check if the expression contains constants\n        if(expression.indexOf('C{') !== -1) {\n            //Find every constant in the expression;\n            var variablespresent = expression.match(/C{\\w+.?\\w*}/g);\n            //Replace each matched variable:\n            angular.forEach(variablespresent, function(variablepresent) {\n                //First strip away any prefix and postfix signs from the variable name:\n                variablepresent = variablepresent.replace(\"C{\",\"\").replace(\"}\",\"\");\n\n                if(angular.isDefined(variablesHash[variablepresent]) &&\n                    variablesHash[variablepresent].variablePrefix === 'C') {\n                    //Replace all occurrences of the variable name(hence using regex replacement):\n                    expression = expression.replace(new RegExp(\"C{\" + variablepresent + \"}\", 'g'),\n                        variablesHash[variablepresent].variableValue);\n                }\n                else {\n                    $log.warn(\"Expression \" + expression + \" conains constant \" + variablepresent\n                        + \" - but this constant is not defined.\" );\n                }\n            });\n        }\n\n        return expression;\n    };\n\n    var runDhisFunctions = function(expression, variablesHash, flag){\n        //Called from \"runExpression\". Only proceed with this logic in case there seems to be dhis function calls: \"d2:\" is present.\n        if(angular.isDefined(expression) && expression.indexOf(\"d2:\") !== -1){\n            var dhisFunctions = [{name:\"d2:daysBetween\",parameters:2},\n                {name:\"d2:weeksBetween\",parameters:2},\n                {name:\"d2:monthsBetween\",parameters:2},\n                {name:\"d2:yearsBetween\",parameters:2},\n                {name:\"d2:floor\",parameters:1},\n                {name:\"d2:modulus\",parameters:2},\n                {name:\"d2:concatenate\"},\n                {name:\"d2:addDays\",parameters:2},\n                {name:\"d2:zing\",parameters:1},\n                {name:\"d2:oizp\",parameters:1},\n                {name:\"d2:count\",parameters:1},\n                {name:\"d2:countIfZeroPos\",parameters:1},\n                {name:\"d2:countIfValue\",parameters:2},\n                {name:\"d2:ceil\",parameters:1},\n                {name:\"d2:round\",parameters:1},\n                {name:\"d2:hasValue\",parameters:1},\n                {name:\"d2:lastEventDate\",parameters:1},\n                {name:\"d2:validatePattern\",parameters:2},\n                {name:\"d2:addControlDigits\",parameters:1},\n                {name:\"d2:checkControlDigits\",parameters:1},\n                {name:\"d2:left\",parameters:2},\n                {name:\"d2:right\",parameters:2},\n                {name:\"d2:substring\",parameters:3},\n                {name:\"d2:split\",parameters:3},\n                {name:\"d2:length\",parameters:1}];\n            var continueLooping = true;\n            //Safety harness on 10 loops, in case of unanticipated syntax causing unintencontinued looping\n            for(var i = 0; i < 10 && continueLooping; i++ ) {\n                var expressionUpdated = false;\n                var brokenExecution = false;\n                angular.forEach(dhisFunctions, function(dhisFunction){\n                    //Select the function call, with any number of parameters inside single quotations, or number parameters witout quotations\n                    var regularExFunctionCall = new RegExp(dhisFunction.name + \"\\\\( *(([\\\\d/\\\\*\\\\+\\\\-%\\.]+)|( *'[^']*'))*( *, *(([\\\\d/\\\\*\\\\+\\\\-%\\.]+)|'[^']*'))* *\\\\)\",'g');\n                    var callsToThisFunction = expression.match(regularExFunctionCall);\n                    angular.forEach(callsToThisFunction, function(callToThisFunction){\n                        //Remove the function name and paranthesis:\n                        var justparameters = callToThisFunction.replace(/(^[^\\(]+\\()|\\)$/g,\"\");\n                        //Remove white spaces before and after parameters:\n                        justparameters = justparameters.trim();\n                        //Then split into single parameters:\n                        var parameters = justparameters.match(/(('[^']+')|([^,]+))/g);\n\n                        //Show error if no parameters is given and the function requires parameters,\n                        //or if the number of parameters is wrong.\n                        if(angular.isDefined(dhisFunction.parameters)){\n                            //But we are only checking parameters where the dhisFunction actually has a defined set of parameters(concatenate, for example, does not have a fixed number);\n                            var numParameters = parameters ? parameters.length : 0;\n\n                            if(numParameters !== dhisFunction.parameters){\n                                $log.warn(dhisFunction.name + \" was called with the incorrect number of parameters\");\n\n                                //Mark this function call as broken:\n                                brokenExecution = true;\n                            }\n                        }\n\n                        //In case the function call is nested, the parameter itself contains an expression, run the expression.\n                        if(!brokenExecution && angular.isDefined(parameters) && parameters !== null) {\n                            for (var i = 0; i < parameters.length; i++) {\n                                parameters[i] = runExpression(parameters[i],dhisFunction.name,\"parameter:\" + i, flag, variablesHash);\n                            }\n                        }\n\n                        //Special block for d2:weeksBetween(*,*) - add such a block for all other dhis functions.\n                        if(brokenExecution) {\n                            //Function call is not possible to evaluate, remove the call:\n                            expression = expression.replace(callToThisFunction, \"false\");\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:daysBetween\") {\n                            var firstdate = $filter('trimquotes')(parameters[0]);\n                            var seconddate = $filter('trimquotes')(parameters[1]);\n                            firstdate = moment(firstdate);\n                            seconddate = moment(seconddate);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, seconddate.diff(firstdate,'days'));\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:weeksBetween\") {\n                            var firstdate = $filter('trimquotes')(parameters[0]);\n                            var seconddate = $filter('trimquotes')(parameters[1]);\n                            firstdate = moment(firstdate);\n                            seconddate = moment(seconddate);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, seconddate.diff(firstdate,'weeks'));\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:monthsBetween\") {\n                            var firstdate = $filter('trimquotes')(parameters[0]);\n                            var seconddate = $filter('trimquotes')(parameters[1]);\n                            firstdate = moment(firstdate);\n                            seconddate = moment(seconddate);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, seconddate.diff(firstdate,'months'));\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:yearsBetween\") {\n                            var firstdate = $filter('trimquotes')(parameters[0]);\n                            var seconddate = $filter('trimquotes')(parameters[1]);\n                            firstdate = moment(firstdate);\n                            seconddate = moment(seconddate);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, seconddate.diff(firstdate,'years'));\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:floor\") {\n                            var floored = Math.floor(parameters[0]);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, floored);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:modulus\") {\n                            var dividend = Number(parameters[0]);\n                            var divisor = Number(parameters[1]);\n                            var rest = dividend % divisor;\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, rest);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:concatenate\") {\n                            var returnString = \"'\";\n                            for (var i = 0; i < parameters.length; i++) {\n                                returnString += parameters[i];\n                            }\n                            returnString += \"'\";\n                            expression = expression.replace(callToThisFunction, returnString);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:addDays\") {\n                            var date = $filter('trimquotes')(parameters[0]);\n                            var daystoadd = $filter('trimquotes')(parameters[1]);\n                            var newdate = DateUtils.format( moment(date, CalendarService.getSetting().momentFormat).add(daystoadd, 'days') );\n                            var newdatestring = \"'\" + newdate + \"'\";\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, newdatestring);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:zing\") {\n                            var number = parameters[0];\n                            if( number < 0 ) {\n                                number = 0;\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, number);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:oizp\") {\n                            var number = parameters[0];\n                            var output = 1;\n                            if( number < 0 ) {\n                                output = 0;\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, output);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:count\") {\n                            var variableName = parameters[0];\n                            var variableObject = variablesHash[variableName];\n                            var count = 0;\n                            if(variableObject)\n                            {\n                                if(variableObject.hasValue){\n                                    if(variableObject.allValues)\n                                    {\n                                        count = variableObject.allValues.length;\n                                    } else {\n                                        //If there is a value found for the variable, the count is 1 even if there is no list of alternate values\n                                        //This happens for variables of \"DATAELEMENT_CURRENT_STAGE\" and \"TEI_ATTRIBUTE\"\n                                        count = 1;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"could not find variable to count: \" + variableName);\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, count);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:countIfZeroPos\") {\n                            var variableName = $filter('trimvariablequalifiers') (parameters[0]);\n                            var variableObject = variablesHash[variableName];\n\n                            var count = 0;\n                            if(variableObject)\n                            {\n                                if( variableObject.hasValue ) {\n                                    if(variableObject.allValues && variableObject.allValues.length > 0)\n                                    {\n                                        for(var i = 0; i < variableObject.allValues.length; i++)\n                                        {\n                                            if(variableObject.allValues[i] >= 0) {\n                                                count++;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        //The variable has a value, but no list of alternates. This means we only compare the elements real value\n                                        if(variableObject.variableValue >= 0) {\n                                            count = 1;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"could not find variable to countifzeropos: \" + variableName);\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, count);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:countIfValue\") {\n                            var variableName = parameters[0];\n                            var variableObject = variablesHash[variableName];\n\n                            var valueToCompare = VariableService.processValue(parameters[1],variableObject.variableType);\n\n                            var count = 0;\n                            if(variableObject)\n                            {\n                                if( variableObject.hasValue )\n                                {\n                                    if( variableObject.allValues )\n                                    {\n                                        for(var i = 0; i < variableObject.allValues.length; i++)\n                                        {\n                                            if(valueToCompare === variableObject.allValues[i]) {\n                                                count++;\n                                            }\n                                        }\n                                    } else {\n                                        //The variable has a value, but no list of alternates. This means we compare the standard variablevalue\n                                        if(valueToCompare === variableObject.variableValue) {\n                                            count = 1;\n                                        }\n                                    }\n\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"could not find variable to countifvalue: \" + variableName);\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, count);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:ceil\") {\n                            var ceiled = Math.ceil(parameters[0]);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, ceiled);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:round\") {\n                            var rounded = Math.round(parameters[0]);\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, rounded);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:hasValue\") {\n                            var variableName = parameters[0];\n                            var variableObject = variablesHash[variableName];\n                            var valueFound = false;\n                            if(variableObject)\n                            {\n                                if(variableObject.hasValue){\n                                    valueFound = true;\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"could not find variable to check if has value: \" + variableName);\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, valueFound);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:lastEventDate\") {\n                            var variableName = parameters[0];\n                            var variableObject = variablesHash[variableName];\n                            var valueFound = \"''\";\n                            if(variableObject)\n                            {\n                                if(variableObject.variableEventDate){\n                                    valueFound = VariableService.processValue(variableObject.variableEventDate, 'DATE');\n                                }\n                                else {\n                                    $log.warn(\"no last event date found for variable: \" + variableName);\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"could not find variable to check last event date: \" + variableName);\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, valueFound);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:validatePattern\") {\n                            var inputToValidate = parameters[0].toString();\n                            var pattern = parameters[1];\n                            var regEx = new RegExp(pattern,'g');\n                            var match = inputToValidate.match(regEx);\n\n                            var matchFound = false;\n                            if(match !== null && inputToValidate === match[0]) {\n                                matchFound = true;\n                            }\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, matchFound);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:addControlDigits\") {\n\n                            var baseNumber = parameters[0];\n                            var baseDigits = baseNumber.split('');\n                            var error = false;\n\n                            var firstDigit = 0;\n                            var secondDigit = 0;\n\n                            if(baseDigits && baseDigits.length < 10 ) {\n                                var firstSum = 0;\n                                var baseNumberLength = baseDigits.length;\n                                //weights support up to 9 base digits:\n                                var firstWeights = [3,7,6,1,8,9,4,5,2];\n                                for(var i = 0; i < baseNumberLength && !error; i++) {\n                                    firstSum += parseInt(baseDigits[i]) * firstWeights[i];\n                                }\n                                firstDigit = firstSum % 11;\n\n                                //Push the first digit to the array before continuing, as the second digit is a result of the\n                                //base digits and the first control digit.\n                                baseDigits.push(firstDigit);\n                                //Weights support up to 9 base digits plus first control digit:\n                                var secondWeights = [5,4,3,2,7,6,5,4,3,2];\n                                var secondSum = 0;\n                                for(var i = 0; i < baseNumberLength + 1 && !error; i++) {\n                                    secondSum += parseInt(baseDigits[i]) * secondWeights[i];\n                                }\n                                secondDigit = secondSum % 11;\n\n                                if(firstDigit === 10) {\n                                    $log.warn(\"First control digit became 10, replacing with 0\");\n                                    firstDigit = 0;\n                                }\n                                if(secondDigit === 10) {\n                                    $log.warn(\"Second control digit became 10, replacing with 0\");\n                                    secondDigit = 0;\n                                }\n                            }\n                            else\n                            {\n                                $log.warn(\"Base nuber not well formed(\" + baseNumberLength + \" digits): \" + baseNumber);\n                            }\n\n                            if(!error) {\n                                //Replace the end evaluation of the dhis function:\n                                expression = expression.replace(callToThisFunction, baseNumber + firstDigit + secondDigit);\n                                expressionUpdated = true;\n                            }\n                            else\n                            {\n                                //Replace the end evaluation of the dhis function:\n                                expression = expression.replace(callToThisFunction, baseNumber);\n                                expressionUpdated = true;\n                            }\n                        }\n                        else if(dhisFunction.name === \"d2:checkControlDigits\") {\n                            $log.warn(\"checkControlDigits not implemented yet\");\n\n                            //Replace the end evaluation of the dhis function:\n                            expression = expression.replace(callToThisFunction, parameters[0]);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:left\") {\n                            var string = String(parameters[0]);\n                            var numChars = string.length < parameters[1] ? string.length : parameters[1];\n                            var returnString =  string.substring(0,numChars);\n                            returnString = VariableService.processValue(returnString, 'TEXT');\n                            expression = expression.replace(callToThisFunction, returnString);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:right\") {\n                            var string = String(parameters[0]);\n                            var numChars = string.length < parameters[1] ? string.length : parameters[1];\n                            var returnString =  string.substring(string.length - numChars, string.length);\n                            returnString = VariableService.processValue(returnString, 'TEXT');\n                            expression = expression.replace(callToThisFunction, returnString);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:substring\") {\n                            var string = String(parameters[0]);\n                            var startChar = string.length < parameters[1] - 1 ? -1 : parameters[1];\n                            var endChar = string.length < parameters[2] ? -1 : parameters[2];\n                            if(startChar < 0 || endChar < 0) {\n                                expression = expression.replace(callToThisFunction, \"''\");\n                                expressionUpdated = true;\n                            } else {\n                                var returnString =  string.substring(startChar, endChar);\n                                returnString = VariableService.processValue(returnString, 'TEXT');\n                                expression = expression.replace(callToThisFunction, returnString);\n                                expressionUpdated = true;\n                            }\n                        }\n                        else if(dhisFunction.name === \"d2:split\") {\n                            var string = String(parameters[0]);\n                            var splitArray = string.split(parameters[1]);\n                            var returnPart = \"\";\n                            if (splitArray.length >= parameters[2]) {\n                                returnPart = splitArray[parameters[2]];\n                            }\n                            returnPart = VariableService.processValue(returnPart, 'TEXT');\n                            expression = expression.replace(callToThisFunction, returnPart);\n                            expressionUpdated = true;\n                        }\n                        else if(dhisFunction.name === \"d2:length\") {\n                            expression = expression.replace(callToThisFunction, String(parameters[0]).length);\n                            expressionUpdated = true;\n                        }\n                    });\n                });\n\n                //We only want to continue looping until we made a successful replacement,\n                //and there is still occurrences of \"d2:\" in the code. In cases where d2: occur outside\n                //the expected d2: function calls, one unneccesary iteration will be done and the\n                //successfulExecution will be false coming back here, ending the loop. The last iteration\n                //should be zero to marginal performancewise.\n                if(expressionUpdated && expression.indexOf(\"d2:\") !== -1) {\n                    continueLooping = true;\n                } else {\n                    continueLooping = false;\n                }\n            }\n        }\n\n        return expression;\n    };\n\n    var runExpression = function(expression, beforereplacement, identifier, flag, variablesHash ){\n        //determine if expression is true, and actions should be effectuated\n        //If DEBUG mode, use try catch and report errors. If not, omit the heavy try-catch loop.:\n        var answer = false;\n        if(flag && flag.debug) {\n            try{\n\n                var dhisfunctionsevaluated = runDhisFunctions(expression, variablesHash, flag);\n                answer = eval(dhisfunctionsevaluated);\n\n                if(flag.verbose)\n                {\n                    $log.info(\"Expression with id \" + identifier + \" was successfully run. Original condition was: \" + beforereplacement + \" - Evaluation ended up as:\" + expression + \" - Result of evaluation was:\" + answer);\n                }\n            }\n            catch(e)\n            {\n                $log.warn(\"Expression with id \" + identifier + \" could not be run. Original condition was: \" + beforereplacement + \" - Evaluation ended up as:\" + expression + \" - error message:\" + e);\n            }\n        }\n        else {\n            //Just run the expression. This is much faster than the debug route: http://jsperf.com/try-catch-block-loop-performance-comparison\n            var dhisfunctionsevaluated = runDhisFunctions(expression, variablesHash, flag);\n            answer = eval(dhisfunctionsevaluated);\n        }\n        return answer;\n    };\n\n    var determineValueType = function(value) {\n        var valueType = 'TEXT';\n        if(value === 'true' || value === 'false') {\n            valueType = 'BOOLEAN';\n        }\n        else if(angular.isNumber(value) || !isNaN(value)) {\n            if(value % 1 !== 0) {\n                valueType = 'NUMBER';\n            }\n            else {\n                valueType = 'INTEGER';\n            }\n        }\n        return valueType;\n    };\n\n    var performCreateEventAction = function(effect, selectedEntity, selectedEnrollment, currentEvents,executingEvent, programStage){\n        var valArray = [];\n        if(effect.data) {\n            valArray = effect.data.split(',');\n            var newEventDataValues = [];\n            var idList = {active:false};\n\n            angular.forEach(valArray, function(value) {\n                var valParts = value.split(':');\n                if(valParts && valParts.length >= 1) {\n                    var valId = valParts[0];\n\n                    //Check wether one or more fields is marked as the id to use for comparison purposes:\n                    if(valId.trim().substring(0, 4) === \"[id]\") {\n                        valId = valId.substring(4,valId.length);\n                        idList[valId] = true;\n                        idList.active = true;\n                    }\n\n                    var valVal = \"\";\n                    if(valParts.length > 1) {\n                        valVal = valParts[1];\n                    }\n                    var valueType = determineValueType(valVal);\n\n                    var processedValue = VariableService.processValue(valVal, valueType);\n                    processedValue = $filter('trimquotes')(processedValue);\n                    newEventDataValues.push({dataElement:valId,value:processedValue});\n                    newEventDataValues[valId] = processedValue;\n                }\n            });\n\n            var valuesAlreadyExists = false;\n            angular.forEach(currentEvents, function(currentEvent) {\n                var misMatch = false;\n                angular.forEach(newEventDataValues, function(value) {\n                    var valueFound = false;\n                    angular.forEach(currentEvent.dataValues, function(currentDataValue) {\n                        //Only count as mismatch if there is no particular ID to use, or the current field is part of the same ID\n                        if(!idList.active || idList[currentDataValue.dataElement]){\n                            if(currentDataValue.dataElement === value.dataElement) {\n                                valueFound = true;\n                                //Truthy comparison is needed to avoid false negatives for differing variable types:\n                                if( currentDataValue.value != newEventDataValues[value.dataElement] ) {\n                                    misMatch = true;\n                                }\n                            }\n                        }\n                    });\n                    //Also treat no value found as a mismatch, but when ID fields is set, only concider ID fields\n                    if((!idList.active || idList[value.dataElement] ) && !valueFound) {\n                        misMatch = true;\n                    }\n                });\n                if(!misMatch) {\n                    //if no mismatches on this point, the exact same event already exists, and we dont create it.\n                    valuesAlreadyExists = true;\n                }\n            });\n\n            if(!valuesAlreadyExists) {\n                var eventDate = DateUtils.getToday();\n                var dueDate = DateUtils.getToday();\n\n                var newEvent = {\n                    trackedEntityInstance: selectedEnrollment.trackedEntityInstance,\n                    program: selectedEnrollment.program,\n                    programStage: effect.programStage.id,\n                    enrollment: selectedEnrollment.enrollment,\n                    orgUnit: selectedEnrollment.orgUnit,\n                    dueDate: dueDate,\n                    eventDate: eventDate,\n                    notes: [],\n                    dataValues: newEventDataValues,\n                    status: 'ACTIVE',\n                    event: dhis2.util.uid()\n                };\n\n                if(programStage && programStage.dontPersistOnCreate){\n                    newEvent.notPersisted = true;\n                    newEvent.executingEvent = executingEvent;\n                    $rootScope.$broadcast(\"eventcreated\", { event:newEvent });\n                }\n                else{\n                    DHIS2EventFactory.create(newEvent).then(function(result){\n                       $rootScope.$broadcast(\"eventcreated\", { event:newEvent });\n                    });\n                }\n                //1 event created\n                return 1;\n            }\n            else\n            {\n                //no events created\n                return 0;\n            }\n        } else {\n            $log.warn(\"Cannot create event with empty content.\");\n        }\n    };\n\n    var internalExecuteRules = function(allProgramRules, executingEvent, evs, allDataElements, selectedEntity, selectedEnrollment, optionSets, flag) {\n        if(allProgramRules) {\n            var variablesHash = {};\n\n            //Concatenate rules produced by indicator definitions into the other rules:\n            var rules = $filter('filter')(allProgramRules.programRules, {programStageId: null});\n\n            if(executingEvent && executingEvent.programStage){\n                if(!rules) {\n                    rules = [];\n                }\n                rules = rules.concat($filter('filter')(allProgramRules.programRules, {programStageId: executingEvent.programStage}));\n            }\n            if(!rules) {\n                rules = [];\n            }\n            rules = rules.concat(allProgramRules.programIndicators.rules);\n\n            //Run rules in priority - lowest number first(priority null is last)\n            rules = orderByFilter(rules, 'priority');\n\n            variablesHash = VariableService.getVariables(allProgramRules, executingEvent, evs, allDataElements, selectedEntity, selectedEnrollment, optionSets);\n\n            if(angular.isObject(rules) && angular.isArray(rules)){\n                //The program has rules, and we want to run them.\n                //Prepare repository unless it is already prepared:\n                if(angular.isUndefined( $rootScope.ruleeffects ) ) {\n                    $rootScope.ruleeffects = {};\n                }\n\n                var ruleEffectKey = executingEvent.event ? executingEvent.event : executingEvent;\n                if( executingEvent.event && angular.isUndefined( $rootScope.ruleeffects[ruleEffectKey] )){\n                    $rootScope.ruleeffects[ruleEffectKey] = {};\n                }\n\n                if(!angular.isObject(executingEvent) && angular.isUndefined( $rootScope.ruleeffects[ruleEffectKey] )){\n                    $rootScope.ruleeffects[ruleEffectKey] = {};\n                }\n\n                var updatedEffectsExits = false;\n                var eventsCreated = 0;\n\n                angular.forEach(rules, function(rule) {\n                    var ruleEffective = false;\n\n                    var expression = rule.condition;\n                    //Go through and populate variables with actual values, but only if there actually is any replacements to be made(one or more \"$\" is present)\n                    if(expression) {\n                        if(expression.indexOf('{') !== -1) {\n                            expression = replaceVariables(expression, variablesHash);\n                        }\n                        //run expression:\n                        ruleEffective = runExpression(expression, rule.condition, \"rule:\" + rule.id, flag, variablesHash);\n                    } else {\n                        $log.warn(\"Rule id:'\" + rule.id + \"'' and name:'\" + rule.name + \"' had no condition specified. Please check rule configuration.\");\n                    }\n\n                    angular.forEach(rule.programRuleActions, function(action){\n                        //In case the effect-hash is not populated, add entries\n                        if(angular.isUndefined( $rootScope.ruleeffects[ruleEffectKey][action.id] )){\n                            $rootScope.ruleeffects[ruleEffectKey][action.id] =  {\n                                id:action.id,\n                                location:action.location,\n                                action:action.programRuleActionType,\n                                dataElement:action.dataElement,\n                                trackedEntityAttribute:action.trackedEntityAttribute,\n                                programStage: action.programStage,\n                                programIndicator: action.programIndicator,\n                                programStageSection: action.programStageSection && action.programStageSection.id ? action.programStageSection.id : null,\n                                content:action.content,\n                                data:action.data,\n                                ineffect:undefined\n                            };\n                        }\n\n                        //In case the rule is effective and contains specific data,\n                        //the effect be refreshed from the variables list.\n                        //If the rule is not effective we can skip this step\n                        if(ruleEffective && action.data)\n                        {\n                            //Preserve old data for comparison:\n                            var oldData = $rootScope.ruleeffects[ruleEffectKey][action.id].data;\n\n                            //The key data might be containing a dollar sign denoting that the key data is a variable.\n                            //To make a lookup in variables hash, we must make a lookup without the dollar sign in the variable name\n                            //The first strategy is to make a direct lookup. In case the \"data\" expression is more complex, we have to do more replacement and evaluation.\n\n                            var nameWithoutBrackets = action.data.replace('#{','').replace('}','');\n                            if(angular.isDefined(variablesHash[nameWithoutBrackets]))\n                            {\n                                //The variable exists, and is replaced with its corresponding value\n                                $rootScope.ruleeffects[ruleEffectKey][action.id].data =\n                                    variablesHash[nameWithoutBrackets].variableValue;\n                            }\n                            else if(action.data.indexOf('{') !== -1 || action.data.indexOf('d2:') !== -1)\n                            {\n                                //Since the value couldnt be looked up directly, and contains a curly brace or a dhis function call,\n                                //the expression was more complex than replacing a single variable value.\n                                //Now we will have to make a thorough replacement and separate evaluation to find the correct value:\n                                $rootScope.ruleeffects[ruleEffectKey][action.id].data = replaceVariables(action.data, variablesHash);\n                                //In a scenario where the data contains a complex expression, evaluate the expression to compile(calculate) the result:\n                                $rootScope.ruleeffects[ruleEffectKey][action.id].data = runExpression($rootScope.ruleeffects[ruleEffectKey][action.id].data, action.data, \"action:\" + action.id, flag, variablesHash);\n                            }\n\n                            if(oldData !== $rootScope.ruleeffects[ruleEffectKey][action.id].data) {\n                                updatedEffectsExits = true;\n                            }\n                        }\n\n                        //Update the rule effectiveness if it changed in this evaluation;\n                        if($rootScope.ruleeffects[ruleEffectKey][action.id].ineffect !== ruleEffective)\n                        {\n                            //There is a change in the rule outcome, we need to update the effect object.\n                            updatedEffectsExits = true;\n                            $rootScope.ruleeffects[ruleEffectKey][action.id].ineffect = ruleEffective;\n                        }\n\n                        //In case the rule is of type CREATEEVENT, run event creation:\n                        if($rootScope.ruleeffects[ruleEffectKey][action.id].action === \"CREATEEVENT\" && $rootScope.ruleeffects[ruleEffectKey][action.id].ineffect){\n                            if(evs && evs.byStage){\n                                if($rootScope.ruleeffects[ruleEffectKey][action.id].programStage) {\n                                    var createdNow = performCreateEventAction($rootScope.ruleeffects[ruleEffectKey][action.id], selectedEntity, selectedEnrollment, evs.byStage[$rootScope.ruleeffects[ruleEffectKey][action.id].programStage.id]);\n                                    eventsCreated += createdNow;\n                                } else {\n                                    $log.warn(\"No programstage defined for CREATEEVENT action: \" + action.id);\n                                }\n                            } else {\n                                $log.warn(\"Events to evaluate for CREATEEVENT action: \" + action.id + \". Could it have been triggered at the wrong time or during registration?\");\n                            }\n                        }\n                        //In case the rule is of type \"assign variable\" and the rule is effective,\n                        //the variable data result needs to be applied to the correct variable:\n                        else if($rootScope.ruleeffects[ruleEffectKey][action.id].action === \"ASSIGN\" && $rootScope.ruleeffects[ruleEffectKey][action.id].ineffect){\n                            //from earlier evaluation, the data portion of the ruleeffect now contains the value of the variable to be assigned.\n                            //the content portion of the ruleeffect defines the name for the variable, when the qualidisers are removed:\n                            var variabletoassign = $rootScope.ruleeffects[ruleEffectKey][action.id].content ?\n                                $rootScope.ruleeffects[ruleEffectKey][action.id].content.replace(\"#{\",\"\").replace(\"}\",\"\") : null;\n\n                            if(variabletoassign && !angular.isDefined(variablesHash[variabletoassign])){\n                                //If a variable is mentioned in the content of the rule, but does not exist in the variables hash, show a warning:\n                                $log.warn(\"Variable \" + variabletoassign + \" was not defined.\");\n                            }\n\n                            if(variablesHash[variabletoassign]){\n                                var updatedValue = $rootScope.ruleeffects[ruleEffectKey][action.id].data;\n\n                                var valueType = determineValueType(updatedValue);\n\n                                if($rootScope.ruleeffects[ruleEffectKey][action.id].dataElement) {\n                                    updatedValue = VariableService.getDataElementValueOrCodeForValue(variablesHash[variabletoassign].useCodeForOptionSet, updatedValue, $rootScope.ruleeffects[ruleEffectKey][action.id].dataElement.id, allDataElements, optionSets);\n                                }\n                                updatedValue = VariableService.processValue(updatedValue, valueType);\n\n                                variablesHash[variabletoassign] = {\n                                    variableValue:updatedValue,\n                                    variableType:valueType,\n                                    hasValue:true,\n                                    variableEventDate:'',\n                                    variablePrefix:'#',\n                                    allValues:[updatedValue]\n                                };\n\n                                if(variablesHash[variabletoassign].variableValue !== updatedValue) {\n                                    //If the variable was actually updated, we assume that there is an updated ruleeffect somewhere:\n                                    updatedEffectsExits = true;\n                                }\n                            }\n                        }\n                    });\n                });\n\n                //Broadcast rules finished if there was any actual changes to the event.\n                if(updatedEffectsExits){\n                    $rootScope.$broadcast(\"ruleeffectsupdated\", { event: ruleEffectKey, eventsCreated:eventsCreated });\n                }\n            }\n\n            return true;\n        }\n    };\n\n    var internalProcessEvent = function(event) {\n        event.eventDate = DateUtils.formatFromApiToUser(event.eventDate);\n\n        angular.forEach(event.dataValues, function(dataValue) {\n            event[dataValue.dataElement] = dataValue.value;\n        });\n        return event;\n    };\n\n    var internalGetOrLoadScope = function(currentEvent,programStageId,orgUnitId) {\n        if(crossEventRulesExist) {\n            //If crossEventRulesExist, we need to get a scope that contains more than the current event.\n            if(lastEventId !== currentEvent.event\n                    || lastEventDate !== currentEvent.eventDate\n                    || !eventScopeExceptCurrent) {\n                //The scope might need updates, as the parameters of the event has changed\n\n                lastEventId = currentEvent.event;\n                lastEventDate = currentEvent.eventDate;\n\n\n                var pager = {pageSize: NUMBER_OF_EVENTS_IN_SCOPE};\n                var ordering = {field:\"eventDate\",direction:\"desc\"};\n                var filterings = [{field:\"programStage\", value:programStageId}];\n                return DHIS2EventFactory.getByFilters(orgUnitId, pager, true, ordering, filterings).then(function(newestEvents) {\n                    filterings.push({field:\"dueDate\",value:lastEventDate});\n                    return DHIS2EventFactory.getByFilters(orgUnitId, pager, true, ordering, filterings).then(function(previousEvents) {\n                        eventScopeExceptCurrent = [];\n                        var eventIdDictionary = {};\n                        var allEventsWithPossibleDuplicates = newestEvents.events.concat(previousEvents.events);\n                        angular.forEach(allEventsWithPossibleDuplicates, function(eventInScope) {\n                            if(currentEvent.event !== eventInScope.event\n                                    && !eventIdDictionary[eventInScope.event]) {\n                                //Add event and update dictionary to avoid duplicates:\n                                eventScopeExceptCurrent.push(internalProcessEvent(eventInScope));\n                                eventIdDictionary[eventInScope.event] = true;\n                            }\n                        });\n\n                        //make a sorted list of all events to pass to rules execution service:\n                        var allEventsInScope = eventScopeExceptCurrent.concat([currentEvent]);\n                        allEventsInScope = orderByFilter(allEventsInScope, '-eventDate').reverse();\n                        var byStage = {};\n                        byStage[currentEvent.programStage] = allEventsInScope;\n                        return {all: allEventsInScope, byStage:byStage};\n                    });\n                });\n            }\n            else\n            {\n                //make a sorted list of all events to pass to rules execution service:\n                var allEvents = eventScopeExceptCurrent.concat([currentEvent]);\n                allEvents = orderByFilter(allEvents, '-eventDate').reverse();\n                var byStage = {};\n                byStage[currentEvent.programStage] = allEvents;\n                return $q.when({all: allEvents, byStage:byStage});\n            }\n        }\n        else\n        {\n            //return a scope containing only the current event\n            var byStage = {};\n            byStage[currentEvent.programStage] = [currentEvent];\n            return $q.when({all: [currentEvent], byStage:byStage});\n        }\n    };\n    var internalGetOrLoadRules = function(programId) {\n        //If no rules is stored in memory, or this service is being called in the context of a different program, get the rules again:\n        if(allProgramRules === false || lastProgramId !== programId)\n        {\n            return RulesFactory.loadRules(programId).then(function(rules){\n                allProgramRules = rules;\n                lastProgramId = programId;\n\n                //Check if any of the rules is using any source type thar requires a bigger event scope\n                crossEventRulesExist = false;\n                if(rules.programVariables && rules.programVariables.length) {\n                    for(var i = 0; i < rules.programVariables.length; i ++) {\n                        if( rules.programVariables[i].programRuleVariableSourceType ===\n                                \"DATAELEMENT_NEWEST_EVENT_PROGRAM\" ||\n                            rules.programVariables[i].programRuleVariableSourceType ===\n                                \"DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE\" ||\n                            rules.programVariables[i].programRuleVariableSourceType ===\n                                \"DATAELEMENT_PREVIOUS_EVENT\")\n                        {\n                            crossEventRulesExist = true;\n                        }\n                    }\n                }\n\n                return rules;\n            });\n        }\n        else\n        {\n            return $q.when(allProgramRules);\n        }\n    };\n    return {\n        executeRules: function(allProgramRules, executingEvent, evs, allDataElements, selectedEntity, selectedEnrollment, optionSets, flags) {\n            internalExecuteRules(allProgramRules, executingEvent, evs, allDataElements, selectedEntity, selectedEnrollment, optionSets, flags);\n        },\n        loadAndExecuteRulesScope: function(currentEvent, programId, programStageId, programStageDataElements, optionSets, orgUnitId, flags){\n            internalGetOrLoadRules(programId).then(function(rules) {\n                internalGetOrLoadScope(currentEvent,programStageId,orgUnitId).then(function(scope) {\n                    internalExecuteRules(rules, currentEvent, scope, programStageDataElements, null, null, optionSets, flags);\n                });\n            });\n        },\n        processRuleEffectsForTrackedEntityAttributes: function(context, currentTei, teiOriginalValues, attributesById, optionSets ) {\n            var hiddenFields = {};\n            var assignedFields = {};\n            var hiddenSections = {};\n            var warningMessages = [];\n\n            angular.forEach($rootScope.ruleeffects[context], function (effect) {\n                if (effect.ineffect) {\n                    if (effect.action === \"HIDEFIELD\" && effect.trackedEntityAttribute) {\n                        if (currentTei[effect.trackedEntityAttribute.id]) {\n                            //If a field is going to be hidden, but contains a value, we need to take action;\n                            if (effect.content) {\n                                //TODO: Alerts is going to be replaced with a proper display mecanism.\n                                alert(effect.content);\n                            }\n                            else {\n                                //TODO: Alerts is going to be replaced with a proper display mecanism.\n                                alert(attributesById[effect.trackedEntityAttribute.id].displayName + \" was blanked out and hidden by your last action\");\n                            }\n\n                            //Blank out the value:\n                            currentTei[effect.trackedEntityAttribute.id] = \"\";\n                        }\n\n                        hiddenFields[effect.trackedEntityAttribute.id] = true;\n                    } else if (effect.action === \"SHOWERROR\" && effect.trackedEntityAttribute) {\n                        if(effect.ineffect) {\n                            var headerText =  $translate.instant('validation_error');\n                            var bodyText = effect.content + (effect.data ? effect.data : \"\");\n\n                            NotificationService.showNotifcationDialog(headerText, bodyText);\n                            if( effect.trackedEntityAttribute ) {\n                                currentTei[effect.trackedEntityAttribute.id] = teiOriginalValues[effect.trackedEntityAttribute.id];\n                            }\n                        }\n                    } else if (effect.action === \"SHOWWARNING\" && effect.trackedEntityAttribute) {\n                        if(effect.ineffect) {\n                            var message = effect.content + (angular.isDefined(effect.data) ? effect.data : \"\");\n                            warningMessages.push(message);\n\n                            if( effect.trackedEntityAttribute ) {\n                                warningMessages[effect.trackedEntityAttribute.id] = message;\n                            }\n                        }\n                    }\n                    else if (effect.action === \"ASSIGN\" && effect.trackedEntityAttribute) {\n                        var processedValue = $filter('trimquotes')(effect.data);\n\n                        if(attributesById[effect.trackedEntityAttribute.id]\n                                && attributesById[effect.trackedEntityAttribute.id].optionSet) {\n                            processedValue = OptionSetService.getName(\n                                    optionSets[attributesById[effect.trackedEntityAttribute.id].optionSet.id].options, processedValue)\n                        }\n\n                        processedValue = processedValue === \"true\" ? true : processedValue;\n                        processedValue = processedValue === \"false\" ? false : processedValue;\n\n                        //For \"ASSIGN\" actions where we have a dataelement, we save the calculated value to the dataelement:\n                        currentTei[effect.trackedEntityAttribute.id] = processedValue;\n                        assignedFields[effect.trackedEntityAttribute.id] = true;\n                    }\n                }\n            });\n            return {currentTei: currentTei, hiddenFields: hiddenFields, hiddenSections: hiddenSections, warningMessages: warningMessages, assignedFields: assignedFields};\n        },\n        processRuleEffectsForEvent: function(eventId, currentEvent, currentEventOriginalValues, prStDes, optionSets ) {\n            var hiddenFields = {};\n            var assignedFields = {};\n            var hiddenSections = {};\n            var warningMessages = [];\n\n            angular.forEach($rootScope.ruleeffects[eventId], function (effect) {\n                if (effect.ineffect) {\n                    if (effect.action === \"HIDEFIELD\" && effect.dataElement) {\n                        if(currentEvent[effect.dataElement.id]) {\n                            //If a field is going to be hidden, but contains a value, we need to take action;\n                            if(effect.content) {\n                                //TODO: Alerts is going to be replaced with a proper display mecanism.\n                                alert(effect.content);\n                            }\n                            else {\n                                //TODO: Alerts is going to be replaced with a proper display mecanism.\n                                alert(prStDes[effect.dataElement.id].dataElement.formName + \"Was blanked out and hidden by your last action\");\n                            }\n\n                        }\n\n                        hiddenFields[effect.dataElement.id] = true;\n                    }\n                    else if(effect.action === \"HIDESECTION\") {\n                        if(effect.programStageSection){\n                            hiddenSections[effect.programStageSection] = effect.programStageSection;\n                        }\n                    }\n                    else if(effect.action === \"SHOWERROR\" && effect.dataElement.id){\n                        var headerTxt =  $translate.instant('validation_error');\n                        var bodyTxt = effect.content + (effect.data ? effect.data : \"\");\n                        NotificationService.showNotifcationDialog(headerTxt, bodyTxt);\n\n                        currentEvent[effect.dataElement.id] = currentEventOriginalValues[effect.dataElement.id];\n                    }\n                    else if(effect.action === \"SHOWWARNING\"){\n                        warningMessages.push(effect.content + (effect.data ? effect.data : \"\"));\n                    }\n                    else if (effect.action === \"ASSIGN\" && effect.dataElement) {\n                        var processedValue = $filter('trimquotes')(effect.data);\n\n                        if(prStDes[effect.dataElement.id]\n                                && prStDes[effect.dataElement.id].dataElement.optionSet) {\n                            processedValue = OptionSetService.getName(\n                                    optionSets[prStDes[effect.dataElement.id].dataElement.optionSet.id].options, processedValue)\n                        }\n\n                        processedValue = processedValue === \"true\" ? true : processedValue;\n                        processedValue = processedValue === \"false\" ? false : processedValue;\n\n                        currentEvent[effect.dataElement.id] = processedValue;\n                        assignedFields[effect.dataElement.id] = true;\n                    }\n                }\n            });\n\n            return {currentEvent: currentEvent, hiddenFields: hiddenFields, hiddenSections: hiddenSections, warningMessages: warningMessages, assignedFields: assignedFields};\n        },\n        processRuleEffectAttribute: function(context, selectedTei, tei, currentEvent, currentEventOriginialValue, affectedEvent, attributesById, prStDes, hiddenFields, hiddenSections, warningMessages, assignedFields, optionSets){\n            //Function used from registration controller to process effects for the tracked entity instance and for the events in the same operation\n            var teiAttributesEffects = this.processRuleEffectsForTrackedEntityAttributes(context, selectedTei, tei, attributesById, optionSets );\n            teiAttributesEffects.selectedTei = teiAttributesEffects.currentTei;\n\n            if(context === \"SINGLE_EVENT\" && currentEvent && prStDes ) {\n                var eventEffects = this.processRuleEffectsForEvent(\"SINGLE_EVENT\", currentEvent, currentEventOriginialValue, prStDes, optionSets);\n                teiAttributesEffects.warningMessages = angular.extend(teiAttributesEffects.warningMessages,eventEffects.warningMessages);\n                teiAttributesEffects.hiddenFields = angular.extend(teiAttributesEffects.hiddenFields,eventEffects.hiddenFields);\n                teiAttributesEffects.hiddenSections = angular.extend(teiAttributesEffects.hiddenSections,eventEffects.hiddenSections);\n                teiAttributesEffects.assignedFields = angular.extend(teiAttributesEffects.assignedFields,eventEffects.assignedFields);\n                teiAttributesEffects.currentEvent = eventEffects.currentEvent;\n            }\n\n            return teiAttributesEffects;\n        }\n    };\n})\n\n/* service for dealing with events */\n.service('DHIS2EventService', function(DateUtils){\n    return {\n        //for simplicity of grid display, events were changed from\n        //event.datavalues = [{dataElement: dataElement, value: value}] to\n        //event[dataElement] = value\n        //now they are changed back for the purpose of storage.\n        reconstructEvent: function(event, programStageDataElements){\n            var e = {};\n\n            e.event         = event.event;\n            e.status        = event.status;\n            e.program       = event.program;\n            e.programStage  = event.programStage;\n            e.orgUnit       = event.orgUnit;\n            e.eventDate     = event.eventDate;\n\n            var dvs = [];\n            angular.forEach(programStageDataElements, function(prStDe){\n                if(event.hasOwnProperty(prStDe.dataElement.id)){\n                    dvs.push({dataElement: prStDe.dataElement.id, value: event[prStDe.dataElement.id]});\n                }\n            });\n\n            e.dataValues = dvs;\n\n            if(event.coordinate){\n                e.coordinate = {latitude: event.coordinate.latitude ? event.coordinate.latitude : '',\n                    longitude: event.coordinate.longitude ? event.coordinate.longitude : ''};\n            }\n\n            return e;\n        },\n        refreshList: function(eventList, currentEvent){\n            if(!eventList || !eventList.length){\n                return;\n            }\n            var continueLoop = true;\n            for(var i=0; i< eventList.length && continueLoop; i++){\n                if(eventList[i].event === currentEvent.event ){\n                    eventList[i] = currentEvent;\n                    continueLoop = false;\n                }\n            }\n            return eventList;\n        },\n        getEventExpiryStatus : function (event, program, selectedOrgUnit) {\n            var completedDate, today, daysAfterCompletion;\n\n            if ((event.orgUnit !== selectedOrgUnit) || ( program.completeEventsExpiryDays === 0) ||\n                !event.status) {\n                return false;\n            }\n\n            completedDate = moment(event.completedDate,'YYYY-MM-DD');\n            today = moment(DateUtils.getToday(),'YYYY-MM-DD');\n            daysAfterCompletion = today.diff(completedDate, 'days');\n            if (daysAfterCompletion < program.completeEventsExpiryDays) {\n                return false;\n            }\n            return true;\n        }\n    };\n})\n\n/* current selections */\n.service('CurrentSelection', function(){\n    this.currentSelection = {};\n    this.relationshipInfo = {};\n    this.optionSets = null;\n    this.attributesById = null;\n    this.ouLevels = null;\n    this.sortedTeiIds = [];\n    this.selectedTeiEvents = null;\n    this.relationshipOwner = {};\n    this.selectedTeiEvents = [];\n    this.fileNames = [];\n    this.location = null;\n    this.advancedSearchOptions = null;\n\tthis.trackedEntities = null;\n\n    this.set = function(currentSelection){\n        this.currentSelection = currentSelection;\n    };\n    this.get = function(){\n        return this.currentSelection;\n    };\n\n    this.setRelationshipInfo = function(relationshipInfo){\n        this.relationshipInfo = relationshipInfo;\n    };\n    this.getRelationshipInfo = function(){\n        return this.relationshipInfo;\n    };\n\n    this.setOptionSets = function(optionSets){\n        this.optionSets = optionSets;\n    };\n    this.getOptionSets = function(){\n        return this.optionSets;\n    };\n\n    this.setAttributesById = function(attributesById){\n        this.attributesById = attributesById;\n    };\n    this.getAttributesById = function(){\n        return this.attributesById;\n    };\n\n    this.setOuLevels = function(ouLevels){\n        this.ouLevels = ouLevels;\n    };\n    this.getOuLevels = function(){\n        return this.ouLevels;\n    };\n\n    this.setSortedTeiIds = function(sortedTeiIds){\n        this.sortedTeiIds = sortedTeiIds;\n    };\n    this.getSortedTeiIds = function(){\n        return this.sortedTeiIds;\n    };\n\n    this.setSelectedTeiEvents = function(selectedTeiEvents){\n        this.selectedTeiEvents = selectedTeiEvents;\n    };\n    this.getSelectedTeiEvents = function(){\n        return this.selectedTeiEvents;\n    };\n\n    this.setRelationshipOwner = function(relationshipOwner){\n        this.relationshipOwner = relationshipOwner;\n    };\n    this.getRelationshipOwner = function(){\n        return this.relationshipOwner;\n    };\n\n    this.setFileNames = function(fileNames){\n        this.fileNames = fileNames;\n    };\n    this.getFileNames = function(){\n        return this.fileNames;\n    };\n\n    this.setLocation = function(location){\n        this.location = location;\n    };\n    this.getLocation = function(){\n        return this.location;\n    };\n\n    this.setAdvancedSearchOptions = function (searchOptions) {\n        this.advancedSearchOptions = searchOptions;\n    };\n    this.getAdvancedSearchOptions = function () {\n        return this.advancedSearchOptions;\n    };\n\n    this.setTrackedEntities = function (trackedEntities) {\n        this.trackedEntities = trackedEntities;\n    };\n    this.getTrackedEntities = function () {\n        return this.trackedEntities;\n    };\n\n    this.setSortColumn = function (sortColumn) {\n        if (this.advancedSearchOptions) {\n            this.advancedSearchOptions.sortColumn = sortColumn;\n        }\n    };\n\n    this.setColumnReverse = function (reverseSortStatus) {\n        if (this.advancedSearchOptions) {\n            this.advancedSearchOptions.reverse = reverseSortStatus;\n        }\n    };\n\n    this.setGridColumns = function (gridColumns) {\n        if (this.advancedSearchOptions) {\n            this.advancedSearchOptions.gridColumns = gridColumns;\n        }\n    }\n})\n\n.service('AuditHistoryDataService', function( $http, $translate, NotificationService, DHIS2URL ) {\n    this.getAuditHistoryData = function(dataId, dataType ) {\n        var url=\"\";\n        if (dataType === \"attribute\") {\n            url=\"/api/audits/trackedEntityAttributeValue?tei=\"+dataId+\"&skipPaging=true\";\n\n        } else {\n            url=\"/api/audits/trackedEntityDataValue?psi=\"+dataId+\"&skipPaging=true\";\n        }\n\n        var promise = $http.get(DHIS2URL + url).then(function( response ) {\n            return response.data;\n        }, function( response ) {\n            if( response && response.data && response.data.status === 'ERROR' ) {\n                var headerText = response.data.status;\n                var bodyText = response.data.message ? response.data.message : $translate.instant('unable_to_fetch_data_from_server');\n                NotificationService.showNotifcationDialog(headerText, bodyText);\n            }\n        });\n        return promise;\n    }\n})\n\n/* Factory for fetching OrgUnit */\n.factory('OrgUnitFactory', function($http, DHIS2URL, $q, SessionStorageService) {\n    var orgUnit, orgUnitPromise, rootOrgUnitPromise,orgUnitTreePromise;\n    return {\n        getChildren: function(uid){\n            if( orgUnit !== uid ){\n                orgUnitPromise = $http.get( DHIS2URL + '/api/organisationUnits/'+ uid + '.json?fields=id,path,children[id,displayName,level,organisationUnitGroups[attributeValues[value,attribute[code]]],children[id]]&paging=false' ).then(function(response){\n                    orgUnit = uid;\n                    return response.data;\n                });\n            }\n            return orgUnitPromise;\n        },\n        get: function(uid){\n            if( orgUnit !== uid ){\n                orgUnitPromise = $http.get( DHIS2URL + '/api/organisationUnits/'+ uid + '.json?fields=id,displayName,level,path' ).then(function(response){\n                    orgUnit = uid;\n                    return response.data;\n                });\n            }\n            return orgUnitPromise;\n        },\n        getViewTreeRoot: function(){\n            if(!rootOrgUnitPromise){\n                var url = DHIS2URL + '/api/me.json?fields=organisationUnits[id,displayName,level,path,children[id,displayName,level,children[id]]],dataViewOrganisationUnits[id,displayName,level,path,organisationUnitGroups[attributeValues[value,attribute[code]]],children[id,displayName,level,children[id]]]&paging=false';\n                rootOrgUnitPromise = $http.get( url ).then(function(response){\n                    response.data.organisationUnits = response.data.dataViewOrganisationUnits && response.data.dataViewOrganisationUnits.length > 0 ? response.data.dataViewOrganisationUnits : response.data.organisationUnits;\n                    delete response.data.dataViewOrganisationUnits;\n                    return response.data;\n                });\n            }\n            return rootOrgUnitPromise;\n        },\n        getSearchTreeRoot: function(){\n            if(!rootOrgUnitPromise){\n                var url = DHIS2URL + '/api/me.json?fields=organisationUnits[id,displayName,level,path,children[id,displayName,level,children[id]]],teiSearchOrganisationUnits[id,displayName,level,path,children[id,displayName,level,children[id]]]&paging=false';\n                rootOrgUnitPromise = $http.get( url ).then(function(response){\n                    response.data.organisationUnits = response.data.teiSearchOrganisationUnits && response.data.teiSearchOrganisationUnits.length > 0 ? response.data.teiSearchOrganisationUnits : response.data.organisationUnits;\n                    delete response.data.teiSearchOrganisationUnits;\n                    return response.data;\n                });\n            }\n            return rootOrgUnitPromise;\n        },\n        getOrgUnits: function(uid,fieldUrl){\n            var url = DHIS2URL + '/api/organisationUnits.json?filter=id:eq:'+uid+'&'+fieldUrl+'&paging=false';\n            orgUnitTreePromise = $http.get(url).then(function(response){\n                return response.data;\n            });\n            return orgUnitTreePromise;\n        },\n        getOrgUnit: function(uid) {\n            var def = $q.defer();\n            var selectedOrgUnit = SessionStorageService.get('SELECTED_OU');\n            if (selectedOrgUnit) {\n                def.resolve(selectedOrgUnit);\n            } else if (uid) {\n                this.get(uid).then(function (response) {\n                    if (response.organisationUnits && response.organisationUnits[0]) {\n                        def.resolve({\n                            displayName: response.organisationUnits[0].displayName,\n                            id: response.organisationUnits[0].id\n                        });\n                    } else if (response && response.id) {\n                        def.resolve(response);\n                    } else {\n                        def.resolve(null);\n                    }\n                });\n            } else {\n                def.resolve(null);\n            }\n            return def.promise;\n        }\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.angular.services.js","/* global moment, angular, directive, dhis2, selection */\n\n'use strict';\n\n/* Directives */\n\nvar d2Directives = angular.module('d2Directives', [])\n\n\n.directive('selectedOrgUnit', function ($timeout) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            $(\"#orgUnitTree\").one(\"ouwtLoaded\", function (event, ids, names) {\n                if (dhis2.tc && dhis2.tc.metaDataCached) {\n                    $timeout(function () {\n                        scope.treeLoaded = true;\n                        scope.$apply();\n                    });\n                    selection.responseReceived();\n                }\n                else {\n                    console.log('Finished loading orgunit tree');\n                    $(\"#orgUnitTree\").addClass(\"disable-clicks\"); //Disable ou selection until meta-data has downloaded\n                    $timeout(function () {\n                        scope.treeLoaded = true;\n                        scope.$apply();\n                    });\n                    //downloadMetaData();\n                }\n            });\n\n            //listen to user selection, and inform angular\n            selection.setListenerFunction(setSelectedOu, true);\n            function setSelectedOu(ids, names) {\n\n                if( ids[0] && names[0] ){\n                    var ou = {id: ids[0], displayName: names[0]};\n                    $timeout(function () {\n                        scope.selectedOrgUnit = ou;\n                        scope.$apply();\n                    });\n                }\n            }\n        }\n    };\n})\n\n.directive('d2SetFocus', function ($timeout) {\n\n    return {\n        scope: { trigger: '@d2SetFocus' },\n        link: function(scope, element) {\n            scope.$watch('trigger', function(value) {\n                if(value === \"true\") {\n                    $timeout(function() {\n                        element[0].focus();\n                    });\n                }\n            });\n        }\n    };\n})\n\n.directive('d2LeftBar', function () {\n\n    return {\n        restrict: 'E',\n        templateUrl: 'views/left-bar.html',\n        link: function (scope, element, attrs) {\n\n            $(\"#searchIcon\").click(function () {\n                $(\"#searchSpan\").toggle();\n                $(\"#searchField\").focus();\n            });\n\n            $(\"#searchField\").autocomplete({\n                source: \"../dhis-web-commons/ouwt/getOrganisationUnitsByName.action\",\n                select: function (event, ui) {\n                    $(\"#searchField\").val(ui.item.value);\n                    selection.findByName();\n                }\n            });\n        }\n    };\n})\n\n.directive('blurOrChange', function () {\n\n    return function (scope, elem, attrs) {\n        elem.calendarsPicker({\n            onSelect: function () {\n                scope.$apply(attrs.blurOrChange);\n                $(this).change();\n            }\n        }).change(function () {\n            scope.$apply(attrs.blurOrChange);\n        });\n    };\n})\n\n.directive('d2Enter', function () {\n    return function (scope, element, attrs) {\n        element.bind(\"keydown keypress\", function (event) {\n            if (event.which === 13) {\n                scope.$apply(function () {\n                    scope.$eval(attrs.d2Enter);\n                });\n                event.preventDefault();\n            }\n        });\n    };\n})\n\n.directive('d2PopOver', function ($compile, $templateCache, $translate) {\n\n    return {\n        restrict: 'EA',\n        scope: {\n            content: '=',\n            title: '@details',\n            template: \"@template\",\n            placement: \"@placement\",\n            trigger: \"@trigger\"\n        },\n        link: function (scope, element, attrs) {\n            var content = $templateCache.get(scope.template);\n            content = $compile(content)(scope);\n            scope.content.heading = scope.content.value && scope.content.value.length > 20 ? scope.content.value.substring(0,20).concat('...') : scope.content.value;\n            var options = {\n                content: content,\n                placement: scope.placement ? scope.placement : 'auto',\n                trigger: scope.trigger ? scope.trigger : 'hover',\n                html: true,\n                title: $translate.instant('_details')\n            };\n            element.popover(options);\n\n            $('body').on('click', function (e) {\n                if( !element[0].contains(e.target) ) {\n                    element.popover('hide');\n                }\n            });\n        }\n    };\n})\n\n.directive('d2Sortable', function ($timeout) {\n\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            element.sortable({\n                connectWith: \".connectedSortable\",\n                placeholder: \"ui-state-highlight\",\n                tolerance: \"pointer\",\n                handle: '.handle',\n                change: function (event, ui) {\n                    $timeout(function () {\n                        scope.widgetsOrder = getSortedItems(ui);\n                        scope.$apply();\n                    });\n\n                },\n                receive: function (event, ui) {\n                    $timeout(function () {\n                        scope.widgetsOrder = getSortedItems(ui);\n                        scope.$apply();\n                    });\n                }\n            });\n\n            var getSortedItems = function (ui) {\n                var biggerWidgets = $(\"#biggerWidget\").sortable(\"toArray\");\n                var smallerWidgets = $(\"#smallerWidget\").sortable(\"toArray\");\n                var movedIsIdentifeid = false;\n\n                //look for the moved item in the bigger block\n                for (var i = 0; i < biggerWidgets.length && !movedIsIdentifeid; i++) {\n                    if (biggerWidgets[i] === \"\") {\n                        biggerWidgets[i] = ui.item[0].id;\n                        movedIsIdentifeid = true;\n                    }\n                }\n\n                //look for the moved item in the smaller block\n                for (var i = 0; i < smallerWidgets.length && !movedIsIdentifeid; i++) {\n                    if (smallerWidgets[i] === \"\") {\n                        smallerWidgets[i] = ui.item[0].id;\n                        movedIsIdentifeid = true;\n                    }\n                }\n                return {smallerWidgets: smallerWidgets, biggerWidgets: biggerWidgets};\n            };\n        }\n    };\n})\n\n.directive('serversidePaginator', function factory() {\n\n    return {\n        restrict: 'E',\n        controller: function ($scope, Paginator) {\n            $scope.paginator = Paginator;\n        },\n        templateUrl: '../dhis-web-commons/angular-forms/serverside-pagination.html'\n    };\n})\n\n.directive('basicServersidePaginator', function factory() {\n\n    return {\n        restrict: 'E',\n        controller: function ($scope, Paginator) {\n            $scope.paginator = Paginator;\n        },\n        templateUrl: 'views/basic-serverside-pagination.html'\n    };\n})\n\n.directive('d2CustomDataEntryForm', function ($compile) {\n    return{\n        restrict: 'E',\n        link: function (scope, elm, attrs) {\n            scope.$watch('customDataEntryForm', function () {\n                if (angular.isObject(scope.customDataEntryForm)) {\n                    elm.html(scope.customDataEntryForm.htmlCode);\n                    $compile(elm.contents())(scope);\n                }\n            });\n        }\n    };\n})\n\n.directive('d2CustomRegistrationForm', function ($compile) {\n    return{\n        restrict: 'E',\n        link: function (scope, elm, attrs) {\n            scope.$watch('customRegistrationForm', function () {\n                if (angular.isObject(scope.customRegistrationForm)) {\n                    elm.html(scope.customRegistrationForm.htmlCode);\n                    $compile(elm.contents())(scope);\n                }\n            });\n        }\n    };\n})\n\n/* TODO: this directive access an element #contextMenu somewhere in the document. Looks like it has to be rewritten */\n.directive('d2ContextMenu', function () {\n\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            var contextMenu = $(\"#contextMenu\");\n\n            element.click(function (e) {\n                var menuHeight = contextMenu.height();\n                var menuWidth = contextMenu.width();\n                var winHeight = $(window).height();\n                var winWidth = $(window).width();\n\n                var pageX = e.pageX;\n                var pageY = e.pageY;\n\n                contextMenu.show();\n\n                if ((menuWidth + pageX) > winWidth) {\n                    pageX -= menuWidth;\n                }\n\n                if ((menuHeight + pageY) > winHeight) {\n                    pageY -= menuHeight;\n\n                    if (pageY < 0) {\n                        pageY = e.pageY;\n                    }\n                }\n\n                contextMenu.css({\n                    left: pageX,\n                    top: pageY\n                });\n\n                return false;\n            });\n\n            contextMenu.on(\"click\", \"a\", function () {\n                contextMenu.hide();\n            });\n\n            $(document).click(function () {\n                contextMenu.hide();\n            });\n        }\n    };\n})\n\n.directive('d2Date', function (CalendarService, $parse) {\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function (scope, element, attrs, ctrl) {\n            var calendarSetting = CalendarService.getSetting();\n            var dateFormat = 'yyyy-mm-dd';\n            if (calendarSetting.keyDateFormat === 'dd-MM-yyyy') {\n                dateFormat = 'dd-mm-yyyy';\n            }\n\n            var minDate = $parse(attrs.minDate)(scope);\n            var maxDate = $parse(attrs.maxDate)(scope);\n            var calendar = $.calendars.instance(calendarSetting.keyCalendar);\n\n            var initializeDatePicker = function( sDate, eDate ){\n                element.calendarsPicker({\n                    changeMonth: true,\n                    dateFormat: dateFormat,\n                    yearRange: '-120:+30',\n                    minDate: sDate,\n                    maxDate: eDate,\n                    calendar: calendar,\n                    duration: \"fast\",\n                    showAnim: \"\",\n                    renderer: $.calendars.picker.themeRollerRenderer,\n                    onSelect: function () {\n                        $(this).change();\n                    }\n                }).change(function () {\n                    ctrl.$setViewValue(this.value);\n                    this.focus();\n                    scope.$apply();\n                });\n            };\n\n            initializeDatePicker(minDate, maxDate);\n\n            scope.$watch(attrs.minDate, function(value){\n                element.calendarsPicker('destroy');\n                initializeDatePicker( value, $parse(attrs.maxDate)(scope));\n            });\n\n            scope.$watch(attrs.maxDate, function(value){\n                element.calendarsPicker('destroy');\n                initializeDatePicker( $parse(attrs.minDate)(scope), value);\n            });\n        }\n    };\n})\n\n.directive('d2FileInput', function(DHIS2EventService, DHIS2EventFactory, FileService, DialogService){\n\n    return {\n        restrict: \"A\",\n        scope: {\n            d2FileInputList: '=',\n            d2FileInput: '=',\n            d2FileInputName: '=',\n            d2FileInputCurrentName: '=',\n            d2FileInputPs: '='\n        },\n        link: function (scope, element, attrs) {\n\n            var de = attrs.inputFieldId;\n\n            var updateModel = function () {\n\n                var update = scope.d2FileInput.event &&  scope.d2FileInput.event !== 'SINGLE_EVENT' ? true : false;\n\n                FileService.upload(element[0].files[0]).then(function(data){\n\n                    if(data && data.status === 'OK' && data.response && data.response.fileResource && data.response.fileResource.id && data.response.fileResource.name){\n\n                        scope.d2FileInput[de] = data.response.fileResource.id;\n                        scope.d2FileInputCurrentName[de] = data.response.fileResource.name;\n                        if( update ){\n                            if(!scope.d2FileInputName[scope.d2FileInput.event]){\n                                scope.d2FileInputName[scope.d2FileInput.event] = [];\n                            }\n                            scope.d2FileInputName[scope.d2FileInput.event][de] = data.response.fileResource.name;\n\n                            var updatedSingleValueEvent = {event: scope.d2FileInput.event, dataValues: [{value: data.response.fileResource.id, dataElement:  de}]};\n                            var updatedFullValueEvent = DHIS2EventService.reconstructEvent(scope.d2FileInput, scope.d2FileInputPs.programStageDataElements);\n                            DHIS2EventFactory.updateForSingleValue(updatedSingleValueEvent, updatedFullValueEvent).then(function(data){\n                                scope.d2FileInputList = DHIS2EventService.refreshList(scope.d2FileInputList, scope.d2FileInput);\n                            });\n                        }\n                    }\n                    else{\n                        var dialogOptions = {\n                            headerText: 'error',\n                            bodyText: 'file_upload_failed'\n                        };\n                        DialogService.showDialog({}, dialogOptions);\n                    }\n\n                });\n            };\n            element.bind('change', updateModel);\n        }\n    };\n})\n\n.directive('d2FileInputDelete', function($parse, $timeout, FileService, DialogService){\n\n    return {\n        restrict: \"A\",\n        link: function (scope, element, attrs) {\n            var valueGetter = $parse(attrs.d2FileInputDelete);\n            var nameGetter = $parse(attrs.d2FileInputName);\n            var nameSetter = nameGetter.assign;\n\n            if(valueGetter(scope)) {\n                FileService.get(valueGetter(scope)).then(function(data){\n                    if(data && data.name && data.id){\n                        $timeout(function(){\n                            nameSetter(scope, data.name);\n                            scope.$apply();\n                        });\n                    }\n                    else{\n                        var dialogOptions = {\n                            headerText: 'error',\n                            bodyText: 'file_missing'\n                        };\n                        DialogService.showDialog({}, dialogOptions);\n                    }\n                });\n            }\n        }\n    };\n})\n.directive('d2Audit', function (CurrentSelection, MetaDataFactory ) {\n    return {\n        restrict: 'E',\n        template: '<span class=\"hideInPrint audit-icon\" title=\"{{\\'audit_history\\' | translate}}\" data-ng-click=\"showAuditHistory()\">' +\n        '<i class=\"glyphicon glyphicon-user\"\"></i>' +\n        '</span>',\n        scope: {\n            eventId: '@',\n            type: '@',\n            nameIdMap: '='\n        },\n        controller: function ($scope, $modal) {\n            $scope.showAuditHistory = function () {\n\n                var openModal = function( ops ){\n                    $modal.open({\n                        templateUrl: \"../dhis-web-commons/angular-forms/audit-history.html\",\n                        controller: \"AuditHistoryController\",\n                        resolve: {\n                            eventId: function () {\n                                return $scope.eventId;\n                            },\n                            dataType: function () {\n                                return $scope.type;\n                            },\n                            nameIdMap: function () {\n                                return $scope.nameIdMap;\n                            },\n                            optionSets: function(){\n                                return ops;\n                            }\n                        }\n                    });\n                };\n\n                var optionSets = CurrentSelection.getOptionSets();\n                if(!optionSets){\n                    optionSets = [];\n                    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n                        angular.forEach(optionSets, function(optionSet){\n                            optionSets[optionSet.id] = optionSet;\n                        });\n                        CurrentSelection.setOptionSets(optionSets);\n                        openModal(optionSets);\n                    });\n                }\n                else{\n                    openModal(optionSets);\n                }\n            };\n        }\n    };\n})\n.directive('d2RadioButton', function (){\n    return {\n        restrict: 'E',\n        templateUrl: '../dhis-web-commons/angular-forms/radio-button.html',\n        scope: {\n            required: '=dhRequired',\n            value: '=dhValue',\n            disabled: '=dhDisabled',\n            name: '@dhName',\n            customOnClick: '&dhClick',\n            currentElement: '=dhCurrentElement',\n            event: '=dhEvent',\n            id: '=dhId'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            '$attrs',\n            '$q',\n            'CommonUtils',\n            function($scope, $element, $attrs, $q, CommonUtils){\n\n                $scope.status = \"\";\n                $scope.clickedButton = \"\";\n\n                $scope.valueClicked = function (buttonValue){\n\n                    $scope.clickedButton = buttonValue;\n\n                    var originalValue = $scope.value;\n                    var tempValue = buttonValue;\n                    if($scope.value === buttonValue){\n                        tempValue = \"\";\n                    }\n\n                    if(angular.isDefined($scope.customOnClick)){\n                        var promise = $scope.customOnClick({value: tempValue});\n                        if(angular.isDefined(promise) && angular.isDefined(promise.then)){\n                            promise.then(function(status){\n                                if(angular.isUndefined(status) || status !== \"notSaved\"){\n                                    $scope.status = \"saved\";\n                                }\n                                $scope.value = tempValue;\n                            }, function(){\n                                $scope.status = \"error\";\n                                $scope.value = originalValue;\n                            });\n                        }\n                        else if(angular.isDefined(promise)){\n                            if(promise === false){\n                                $scope.value = originalValue;\n                            }\n                            else {\n                                $scope.value = tempValue;\n                            }\n                        }\n                        else{\n                            $scope.value = tempValue;\n                        }\n                    }\n                    else{\n                        $scope.value = tempValue;\n                    }\n                };\n\n                $scope.getDisabledValue = function(inValue){\n                    return CommonUtils.displayBooleanAsYesNo(inValue);\n                };\n\n                $scope.getDisabledIcon = function(inValue){\n                    if(inValue === true || inValue === \"true\"){\n                        return \"fa fa-check\";\n                    }\n                    else if(inValue === false || inValue === \"false\"){\n                        return \"fa fa-times\";\n                    }\n                    return '';\n                }\n\n            }],\n        link: function (scope, element, attrs) {\n\n            scope.radioButtonColor = function(buttonValue){\n\n                if(scope.value !== \"\"){\n                    if(scope.status === \"saved\"){\n                        if(angular.isUndefined(scope.currentElement) || (scope.currentElement.id === scope.id && scope.currentElement.event === scope.event)){\n                            if(scope.clickedButton === buttonValue){\n                                return 'radio-save-success';\n                            }\n                        }\n                    //different solution with text chosen\n                    /*else if(scope.status === \"error\"){\n                        if(scope.clickedButton === buttonValue){\n                            return 'radio-save-error';\n                        }\n                    }*/\n                    }\n                }\n                return 'radio-white';\n            };\n\n            scope.errorStatus = function(){\n\n                if(scope.status === 'error'){\n                    if(angular.isUndefined(scope.currentElement) || (scope.currentElement.id === scope.id && scope.currentElement.event === scope.event)){\n                        return true;\n                    }\n                }\n                return false;\n            };\n\n            scope.radioButtonImage = function(buttonValue){\n\n                if(angular.isDefined(scope.value)){\n                    if(scope.value === buttonValue && buttonValue === \"true\"){\n                        return 'fa fa-stack-1x fa-check';\n                    }\n                    else if(scope.value === buttonValue && buttonValue === \"false\"){\n                        return 'fa fa-stack-1x fa-times';\n                    }\n                }\n                return 'fa fa-stack-1x';\n            };\n        }\n    };\n})\n\n.directive('dhis2Deselect', function ($document) {\n    return {\n        restrict: 'A',\n        scope: {\n            onDeselected: '&dhOnDeselected',\n            id: '@dhId',\n            preSelected: '=dhPreSelected',\n            abortDeselect: '&dhAbortDeselect'\n        },\n        controller: [\n            '$scope',\n            '$element',\n            '$attrs',\n            '$q',\n            function($scope, $element, $attrs, $q){\n\n                $scope.documentEventListenerSet = false;\n                $scope.elementClicked = false;\n\n                $element.on('click', function(event) {\n\n                    $scope.elementClicked = true;\n                    if($scope.documentEventListenerSet === false){\n                        $document.on('click', $scope.documentClick);\n                        $scope.documentEventListenerSet = true;\n                    }\n                });\n\n                $scope.documentClick = function(event){\n                    var modalPresent = $(\".modal-backdrop\").length > 0;\n                    var calendarPresent = $(\".calendars-popup\").length > 0;\n                    var calendarPresentInEvent = $(event.target).parents(\".calendars-popup\").length > 0;\n                    if($scope.abortDeselect()){\n                        $document.off('click', $scope.documentClick);\n                        $scope.documentEventListenerSet = false;\n                    }else if($scope.elementClicked === false &&\n                        modalPresent === false &&\n                        calendarPresent === false &&\n                        calendarPresentInEvent === false){\n                        $scope.onDeselected({id:$scope.id});\n                        $scope.$apply();\n                        $document.off('click', $scope.documentClick);\n                        $scope.documentEventListenerSet = false;\n                    }\n                    $scope.elementClicked = false;\n                };\n\n                if(angular.isDefined($scope.preSelected) && $scope.preSelected === true){\n                    $document.on('click', $scope.documentClick);\n                    $scope.documentEventListenerSet = true;\n                }\n\n            }],\n        link: function (scope, element, attrs) {\n        }\n    };\n})\n\n.directive('d2CanMenu', function () {\n\n    return {\n        restrict: 'E',\n        templateUrl: '../dhis-web-action-mapping/angular-forms/can-menu.html',\n        link: function (scope, element, attrs) {\n        }\n    };\n})\n;\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.angular.directives.js","angular.module(\"d2Directives\")\n\n.directive('d2NumberValidator', function() {\n    \n    return {\n        require: 'ngModel',\n        restrict: 'A',\n        link: function (scope, element, attrs, ngModel) {\n            \n            function setValidity(numberType, isRequired){\n                if(numberType === 'NUMBER'){\n                    ngModel.$validators.number = function(value) {\n                    \tvalue = value === 0 ? value.toString(): value; \n                        return value === 'null' || !value ? !isRequired : dhis2.validation.isNumber(value);\n                    };\n                }\n                else if(numberType === 'INTEGER_POSITIVE'){\n                    ngModel.$validators.posInt = function(value) {\n                    \tvalue = value === 0 ? value.toString(): value; \n                        return value === 'null' || !value ? !isRequired : dhis2.validation.isPositiveInt(value);\n                    };\n                }\n                else if(numberType === 'INTEGER_NEGATIVE'){\n                    ngModel.$validators.negInt = function(value) {\n                    \tvalue = value === 0 ? value.toString(): value;\n                        return value === 'null' || !value ? !isRequired : dhis2.validation.isNegativeInt(value);\n                    };\n                }\n                else if(numberType === 'INTEGER_ZERO_OR_POSITIVE'){\n                    ngModel.$validators.zeroPositiveInt = function(value) {\n                    \tvalue = value === 0 ? value.toString(): value; \n                        return value === 'null' || !value ? !isRequired : dhis2.validation.isZeroOrPositiveInt(value);\n                    };\n                }\n                else if(numberType === 'INTEGER'){\n                    ngModel.$validators.int = function(value) {\n                    \tvalue = value === 0 ? value.toString(): value;\n                        return value === 'null' || !value ? !isRequired : dhis2.validation.isInt(value);\n                    };\n                }\n            }\n\n            var numberType = attrs.numberType;\n            var isRequired = attrs.ngRequired === 'true';            \n            setValidity(numberType, isRequired);\n        }\n    };\n})\n\n.directive(\"d2DateValidator\", function(DateUtils, CalendarService, $parse) {\n    return {\n        restrict: \"A\",         \n        require: \"ngModel\",         \n        link: function(scope, element, attrs, ngModel) {\n        \t\n            var isRequired = attrs.ngRequired === 'true';\n        \t\n            ngModel.$validators.dateValidator = function(value) {\n                if(!value){\n                    return !isRequired;\n                }                \n                var convertedDate = DateUtils.format(angular.copy(value));\n                var isValid = value === convertedDate;\n                return isValid;\n            };\n            \n            ngModel.$validators.futureDateValidator = function(value) {\n                if(!value){\n                    return !isRequired;\n                }\n                var maxDate = $parse(attrs.maxDate)(scope);\n                var convertedDate = DateUtils.format(angular.copy(value));\n                var isValid = value === convertedDate;                \n                if(isValid){\n                    isValid = maxDate === 0 ? !moment(convertedDate).isAfter(DateUtils.getToday()) : isValid;\n                }\n                return isValid;\n            };\n        }\n    };\n})\n\n.directive(\"d2CustomCoordinateValidator\", function() {\n    return {\n        restrict: \"A\",         \n        require: \"ngModel\",         \n        link: function(scope, element, attrs, ngModel) {\n            \n            var isRequired = attrs.ngRequired === 'true';\n            \n            ngModel.$validators.customCoordinateValidator = function(value) {\n                if(!value){\n                    return !isRequired;\n                }\n                \n                var coordinate = value.split(\",\");\n                \n                if( !coordinate || coordinate.length !== 2 ){\n                    return false;\n                }\n\n                if( !dhis2.validation.isNumber(coordinate[0]) ){\n                    return false;\n                }\n                \n                if( !dhis2.validation.isNumber(coordinate[1]) ){\n                    return false;\n                }\n                \n                return coordinate[0] >= -180 && coordinate[0] <= 180 && coordinate[1] >= -90 && coordinate[1] <= 90;\n            };           \n        }\n    };\n})\n\n.directive(\"d2CoordinateValidator\", function() {\n    return {\n        restrict: \"A\",         \n        require: \"ngModel\",         \n        link: function(scope, element, attrs, ngModel) {\n            \n            var isRequired = attrs.ngRequired === 'true';\n            \n            if(attrs.name === 'latitude'){\n                ngModel.$validators.latitudeValidator = function(value) {\n                    if(!value){\n                        return !isRequired;\n                    }\n\n                    if(!dhis2.validation.isNumber(value)){\n                        return false;\n                    }\n                    return value >= -90 && value <= 90;\n                };\n            }\n            \n            if(attrs.name === 'longitude'){\n                ngModel.$validators.longitudeValidator = function(value) {\n                    if(!value){\n                        return !isRequired;\n                    }\n\n                    if(!dhis2.validation.isNumber(value)){\n                        return false;\n                    }\n                    return value >= -180 && value <= 180;\n                };\n            }            \n        }\n    };\n})\n\n.directive(\"d2OptionValidator\", function($translate, NotificationService) {\n    return {\n        restrict: \"A\",         \n        require: \"ngModel\",         \n        link: function(scope, element, attrs, ngModel) {\n        \t\n            var isRequired = attrs.ngRequired === 'true';\n            \n            ngModel.$validators.optionValidator = function(value) {               \n                \n                var res = !value ? !isRequired : true;\n                \n                if(!res){\n                    var headerText = $translate.instant(\"validation_error\");\n                    var bodyText = $translate.instant(\"option_required\");\n                    NotificationService.showNotifcationDialog(headerText, bodyText);\n                }\n                return res;\n            };\n        }\n    };\n})\n\n.directive(\"d2AttributeValidator\", function($q, TEIService, SessionStorageService) {\n    return {\n        restrict: \"A\",         \n        require: \"ngModel\",\n        link: function(scope, element, attrs, ngModel) {            \n            \n            function uniqunessValidatior(attributeData){\n                \n                ngModel.$asyncValidators.uniqunessValidator = function (modelValue, viewValue) {\n                    var pager = {pageSize: 1, page: 1, toolBarDisplay: 5};\n                    var deferred = $q.defer(), currentValue = modelValue || viewValue, programUrl = null, ouMode = 'ALL';\n                    \n                    if (currentValue) {\n                        \n                        attributeData.value = currentValue;                        \n                        var attUrl = 'filter=' + attributeData.id + ':EQ:' + attributeData.value;\n                        var ouId = SessionStorageService.get('ouSelected');\n                        \n                        if(attrs.selectedProgram && attributeData.programScope){\n                            programUrl = 'program=' + attrs.selectedProgram;\n                        }\n                        \n                        if(attributeData.orgUnitScope){\n                            ouMode = 'SELECTED';\n                        }                        \n\n                        TEIService.search(ouId, ouMode, null, programUrl, attUrl, pager, true).then(function(data) {\n                            if(attrs.selectedTeiId){\n                                if(data && data.rows && data.rows.length && data.rows[0] && data.rows[0].length && data.rows[0][0] !== attrs.selectedTeiId){\n                                    deferred.reject();\n                                }\n                            }\n                            else{\n                                if (data.rows.length > 0) {    \n                                    deferred.reject();\n                                }\n                            }                            \n                            deferred.resolve();\n                        });\n                    }\n                    else {\n                        deferred.resolve();\n                    }\n\n                    return deferred.promise;\n                };\n            }                      \n            \n            scope.$watch(attrs.ngDisabled, function(value){\n                var attributeData = scope.$eval(attrs.attributeData);\n                if(!value){\n                    if( attributeData && attributeData.unique && !value ){\n                        uniqunessValidatior(attributeData);\n                    }\n                }              \n            });     \n        }\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.angular.validations.js","'use strict';\n\n/* Filters */\n\nvar d2Filters = angular.module('d2Filters', [])\n\n.filter('gridFilter', function($filter, CalendarService){    \n    \n    return function(data, filters, filterTypes){\n\n        if(!data ){\n            return;\n        }\n        \n        if(!filters){\n            return data;\n        }        \n        else{            \n            \n            var dateFilter = {}, \n                textFilter = {}, \n                numberFilter = {},\n                filteredData = data;\n            \n            for(var key in filters){\n                \n                if(filterTypes[key] === 'DATE'){\n                    if(filters[key].start || filters[key].end){\n                        dateFilter[key] = filters[key];\n                    }\n                }\n                else if(filterTypes[key] === 'NUMBER' || \n                \t\t\tfilterTypes[key] === 'INTEGER' ||\n                \t\t\tfilterTypes[key] === 'INTEGER_POSITIVE' || \n                \t\t\tfilterTypes[key] === 'INTEGER_NEGATIVE' || \n                \t\t\tfilterTypes[key] === 'INTEGER_ZERO_OR_POSITIVE'){\n                    if(filters[key].start || filters[key].end){\n                        numberFilter[key] = filters[key];\n                    }\n                }\n                else{\n                    textFilter[key] = filters[key];\n                }\n            }\n            \n            filteredData = $filter('filter')(filteredData, textFilter); \n            filteredData = $filter('filter')(filteredData, dateFilter, dateComparator);            \n            filteredData = $filter('filter')(filteredData, numberFilter, numberComparator);\n                        \n            return filteredData;\n        } \n    }; \n    \n    function dateComparator(data,filter){\n    \tvar calendarSetting = CalendarService.getSetting(); \n        var start = moment(filter.start, calendarSetting.momentFormat);\n        var end = moment(filter.end, calendarSetting.momentFormat);  \n        var date = moment(data, calendarSetting.momentFormat); \n        \n        if(filter.start && filter.end){\n            return ( Date.parse(date) <= Date.parse(end) ) && (Date.parse(date) >= Date.parse(start));\n        }        \n        return ( Date.parse(date) <= Date.parse(end) ) || (Date.parse(date) >= Date.parse(start));\n    }\n    \n    function numberComparator(data,filter){\n        var start = filter.start;\n        var end = filter.end;\n        \n        if(filter.start && filter.end){\n            return ( data <= end ) && ( data >= start );\n        }        \n        return ( data <= end ) || ( data >= start );\n    }\n})\n\n.filter('multiColumnFilter', function(){\n    return function(data, filterText){\n\n        if(!data ){\n            return;\n        }\n        \n        if(!filterText){\n            return data;\n        }        \n        else{            \n            \n            return data.filter(function(item){\n                filterText = filterText.toLowerCase();\n                var name = false, code = false, vote = false;\n                \n                if( item.displayName ) name = item.displayName.toLowerCase().indexOf(filterText) > -1;\n                if( item.code ) code = item.code.toLowerCase().indexOf(filterText) > -1;\n                if( item.vote ) vote = item.vote.toLowerCase().indexOf(filterText) > -1;\n                \n                return name || code || vote; \n            });\n        } \n    };\n})\n\n\n.filter('emptyRowFilter', function($filter){\n    return function(data, hideEmptyRow){\n        if(!data ){\n            return;\n        }\n\n        if(!hideEmptyRow){\n            return data;\n        }\n        else{\n            return $filter('filter')(data, {hasData: hideEmptyRow});\n        }\n    };\n})\n\n.filter('paginate', function(Paginator) {\n    return function(input, rowsPerPage) {\n        if (!input) {\n            return input;\n        }\n\n        if (rowsPerPage) {\n            Paginator.rowsPerPage = rowsPerPage;\n        }       \n        \n        Paginator.itemCount = input.length;\n\n        return input.slice(parseInt(Paginator.page * Paginator.rowsPerPage), parseInt((Paginator.page + 1) * Paginator.rowsPerPage + 1) - 1);\n    };\n})\n\n/* trim away all single and double quotes in the start and end of a string*/\n.filter('trimquotes', function() {\n    return function(input) {\n        if (!input || (typeof input !== 'string' && !(input instanceof String))) {\n            return input;\n        }\n        \n        var beingTrimmed = input;\n        var trimmingComplete = false;\n        //Trim until no more quotes can be removed.\n        while(!trimmingComplete) {\n            var beforeTrimming = beingTrimmed;\n            beingTrimmed = input.replace(/^'/,\"\").replace(/'$/,\"\");\n            beingTrimmed = beingTrimmed.replace(/^\"/,\"\").replace(/\"$/,\"\");\n            \n            if(beforeTrimming.length === beingTrimmed.length) {\n                trimmingComplete = true;\n            }\n        }\n        \n        \n        return beingTrimmed;\n    };\n})\n\n/* filter out confidential attributes from a list */\n.filter('nonConfidential', function() {\n  return function( items ) {\n    var filtered = [];\n    angular.forEach(items, function(item) {\n      if(!item.confidential) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n})\n\n/* trim away the qualifiers before and after a variable name */\n.filter('trimvariablequalifiers', function() {\n    return function(input) {\n        if (!input || (typeof input !== 'string' && !(input instanceof String))) {\n            return input;\n        }\n        \n        var trimmed = input.replace(/^[#VCAvca]{/,\"\").replace(/}$/,\"\");\n        \n        return trimmed;\n    };\n})\n\n.filter('forLoop', function() {\n    return function(input, start, end) {\n        input = new Array(end - start);\n        for (var i = 0; start < end; start++, i++) {\n            input[i] = start;\n        }\n        return input;\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.angular.filters.js","'use strict';\n\n/* Controllers */\nvar d2Controllers = angular.module('d2Controllers', [])\n\n//Controller for column show/hide\n.controller('ColumnDisplayController',\n    function($scope,\n            $modalInstance,\n            hiddenGridColumns,\n            gridColumns){\n\n    $scope.gridColumns = gridColumns;\n    $scope.hiddenGridColumns = hiddenGridColumns;\n\n    $scope.close = function () {\n        $modalInstance.close($scope.gridColumns);\n    };\n\n    $scope.showHideColumns = function(gridColumn){\n\n        if(gridColumn.show){\n            $scope.hiddenGridColumns--;\n        }\n        else{\n            $scope.hiddenGridColumns++;\n        }\n    };\n})\n\n//controller for dealing with google map\n.controller('MapController',\n        function($scope,\n                $modalInstance,\n                $translate,\n                $http,\n                $window,\n                storage,\n                leafletData,\n                CurrentSelection,\n                DHIS2URL,\n                NotificationService,\n                location) {\n\n    $scope.location = location;\n\n    var currentLevel = 0, ouLevels = CurrentSelection.getOuLevels();\n\n    $scope.maxZoom = 8;\n\n    $scope.center = {lat: 8.88, lng: -11.55, zoom: $scope.maxZoom};\n\n    var systemSetting = storage.get('SYSTEM_SETTING');\n\n    var setCoordinateLabel = '<i class=\"fa fa-map-marker fa-2x\"></i><span class=\"small-horizontal-spacing\">' + $translate.instant('set_coordinate') + '</span>';\n    var zoomInLabel = '<i class=\"fa fa-search-plus fa-2x\"></i><span class=\"small-horizontal-spacing\">' + $translate.instant('zoom_in') + '</span>';\n    var zoomOutLabel = '<i class=\"fa fa-search-minus fa-2x\"></i><span class=\"small-horizontal-spacing\">' + $translate.instant('zoom_out') + '</span>';\n    var centerMapLabel = '<i class=\"fa fa-crosshairs fa-2x\"></i><span class=\"small-horizontal-spacing\">' + $translate.instant('center_map') + '</span>';\n\n    var contextmenuItems = [{\n                                text: setCoordinateLabel,\n                                callback: setCoordinate,\n                                index: 0\n                            },\n                            {\n                                separator: true,\n                                index: 1\n                            },\n                            {\n                                text: zoomInLabel,\n                                callback: zoomIn,\n                                index: 2\n                            },\n                            {\n                                text: zoomOutLabel,\n                                callback: zoomOut,\n                                index: 3\n                            },\n                            {\n                                separator: true,\n                                index: 4\n                            },\n                            {\n                                text: centerMapLabel,\n                                callback: centerMap,\n                                index: 5\n                            }];\n\n    $scope.mapDefaults = {map: {\n                            contextmenu: true,\n                            contextmenuWidth: 180,\n                            contextmenuItems: contextmenuItems\n                        }};\n\n    var geojsonMarkerOptions = {\n\t\t\t    radius: 15,\n\t\t\t    fillColor: '#ff7800',\n\t\t\t    color: '#000',\n\t\t\t    weight: 1,\n\t\t\t    opacity: 1,\n\t\t\t    fillOpacity: 0.8\n\t\t\t};\n\n    var style = {fillColor: \"green\",\n                    weight: 1,\n                    opacity: 0.8,\n                    color: 'black',\n                    fillOpacity: 0\n                };\n\n    $scope.marker = $scope.location && $scope.location.lat && $scope.location.lng ? {m1: {lat: $scope.location.lat, lng: $scope.location.lng, draggable: true}} : {};\n\n    function userNotification(headerMessage, errorMesage ){\n        var dialogOptions = {\n            headerText: headerMessage,\n            bodyText: errorMesage\n        };\n        DialogService.showDialog({}, dialogOptions);\n        return;\n    };\n\n    function highlightFeature(e) {\n        var layer = e.target;\n\n        layer.setStyle({\n                weight: 5,\n                color: '#666',\n                dashArray: '',\n                fillOpacity: 0.5\n        });\n\n        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n            layer.bringToFront();\n        }\n    }\n\n    function resetHighlight(e) {\n        var layer = e.target;\n        layer.setStyle( style );\n    }\n\n    function pointToLayer( feature, latlng ){\n        return L.circleMarker(latlng, geojsonMarkerOptions);\n    };\n\n    function onEachFeature(feature, layer) {\n\n        layer.on(\"mouseover\",function(e){\n            $(\"#polygon-label\").text( feature.properties.name );\n            //highlightFeature(e);\n        });\n        layer.on(\"mouseout\",function(e){\n            $(\"#polygon-label\").text('');\n            //resetHighlight(e);\n        });\n\n\n        if( layer._layers ){\n            layer.eachLayer(function (l) {\n                l.bindContextMenu({\n                    contextmenu: true,\n                    contextmenuWidth: 180,\n                    contextmenuItems: [{\n                                    text: setCoordinateLabel,\n                                    callback: function(e){\n                                        setCoordinate(e, feature);\n                                    },\n                                    index: 0\n                                },\n                                {\n                                    separator: true,\n                                    index: 1\n                                },\n                                {\n                                    text: zoomInLabel,\n                                    callback: function(e){\n                                        zoomIn(e, feature);\n                                    },\n                                    index: 2\n                                },\n                                {\n                                    text: zoomOutLabel,\n                                    callback: function(e){\n                                        zoomOut(e, feature);\n                                    },\n                                    index: 3,\n                                    disabled: currentLevel < 1\n                                },\n                                {\n                                    separator: true,\n                                    index: 4\n                                },\n                                {\n                                    text: centerMapLabel,\n                                    callback: function(e){\n                                        centerMap(e, feature);\n                                    },\n                                    index: 5\n                                }]\n                });\n            });\n        }\n        else{\n            layer.bindContextMenu({\n                    contextmenu: true,\n                    contextmenuWidth: 180,\n                    contextmenuInheritItems: false,\n                    contextmenuItems: [{\n                                    text: setCoordinateLabel,\n                                    callback: function(e){\n                                        setCoordinate(e, feature, layer);\n                                    },\n                                    index: 0\n                                },\n                                {\n                                    separator: true,\n                                    index: 1\n                                },\n                                {\n                                    text: zoomInLabel,\n                                    callback: function(e){\n                                        zoomIn(e, feature);\n                                    },\n                                    disabled: true,\n                                    index: 2\n                                },\n                                {\n                                    text: zoomOutLabel,\n                                    callback: function(e){\n                                        zoomOut(e, feature);\n                                    },\n                                    index: 3\n                                },\n                                {\n                                    separator: true,\n                                    index: 4\n                                },\n                                {\n                                    text: centerMapLabel,\n                                    callback: function(e){\n                                        centerMap(e, feature);\n                                    },\n                                    index: 5\n                                }]\n                });\n        }\n    }\n\n\n    function getGeoJsonByOuLevel(initialize, event, mode) {\n        var url = null, parent = null;\n        if (initialize) {\n            currentLevel = 0;\n            url = DHIS2URL + '/organisationUnits.geojson?level=' + ouLevels[currentLevel].level;\n        }\n        else {\n            if (mode === 'IN') {\n                currentLevel++;\n                parent = event.id;\n            }\n            if (mode === 'OUT') {\n                currentLevel--;\n                var parents = event.properties.parentGraph.substring(1, event.properties.parentGraph.length - 1).split('/');\n                parent = parents[parents.length - 2];\n            }\n\n            if( ouLevels[currentLevel] && ouLevels[currentLevel].level && parent && !initialize ){\n                url = url = DHIS2URL + '/organisationUnits.geojson?level=' + ouLevels[currentLevel].level + '&parent=' + parent;\n            }\n        }\n\n        if( url ){\n\n            $http.get(url).success(function (data) {\n\n                $scope.currentGeojson = {data: data, style: style, onEachFeature: onEachFeature, pointToLayer: pointToLayer};\n\n                leafletData.getMap().then(function( map ){\n\n                    //var L = $window.L;\n                    var latlngs = [];\n\n                    angular.forEach($scope.currentGeojson.data.features, function(feature){\n                        if( feature.geometry.type === \"Point\"){\n                            //latlngs.push( L.latLng( $scope.currentGeojson.data.features[0].geometry.coordinates) );\n                            //isPoints = true;\n                        }\n                        else{\n                            for (var i in feature.geometry.coordinates) {\n                                var coord = feature.geometry.coordinates[i];\n                                for (var j in coord) {\n                                    var points = coord[j];\n                                    for (var k in points) {\n                                        latlngs.push(L.GeoJSON.coordsToLatLng(points[k]));\n                                    }\n                                }\n                            }\n                        }\n                    });\n\n                    if( $scope.location && $scope.location.lat && $scope.location.lng ){\n                        map.setView([$scope.location.lat, $scope.location.lng], $scope.maxZoom);\n                    }\n                    else{\n                        if( latlngs.length > 0 ){\n                            map.fitBounds(latlngs, {maxZoom: $scope.maxZoom});\n                        }\n                    }\n                });\n            });\n        }\n    }\n\n    leafletData.getMap().then(function( map ){\n\n        if( $scope.marker && $scope.marker.m1 && $scope.marker.m1.lat && $scope.marker.m1.lng ){\n            map.setView([$scope.marker.m1.lat, $scope.marker.m1.lng], $scope.maxZoom);\n        }\n\n        var L = $window.L;\n        $scope.geocoder = L.control.geocoder(systemSetting.keyMapzenSearchApiKey ? systemSetting.keyMapzenSearchApiKey : 'search-Se1CFzK',{\n            markers: {\n                draggable: true\n            }\n        }).addTo(map);\n\n        $scope.geocoder.on('select', function (e) {\n\n            $scope.marker = {};\n            $scope.location = {lat: e.latlng.lat, lng: e.latlng.lng};\n\n\n            $scope.geocoder.marker.on('dragend', function(e){\n                var c = e.target.getLatLng();\n                $scope.location = {lat: c.lat, lng: c.lng};\n            });\n\n        });\n    });\n\n    getGeoJsonByOuLevel(true);\n\n    function zoomMap(event, mode) {\n        if(ouLevels && ouLevels.length > 0){\n            getGeoJsonByOuLevel(false, event, mode);\n        }\n    }\n\n    function setCoordinate(e, feature, layer){\n        if( feature && feature.geometry && feature.geometry.type === 'Point'){\n            var m = feature.geometry.coordinates;\n            $scope.marker = {m1: {lat: m[1], lng: m[0], draggable: true}};\n        }\n        else{\n            $scope.marker = {m1: {lat: e.latlng.lat, lng: e.latlng.lng, draggable: true}};\n        }\n\n        $scope.location = {lat: $scope.marker.m1.lat, lng: $scope.marker.m1.lng};\n    };\n\n    function zoomIn(e, feature){\n        $scope.maxZoom += 2;\n        if( feature && feature.id ){\n            zoomMap( feature, 'IN');\n        }\n        else{\n            $scope.center = angular.copy(e.latlng);\n            $scope.center.zoom = $scope.maxZoom;\n        }\n    };\n\n    function zoomOut(e, feature){\n        $scope.maxZoom -= 2;\n        if( feature && feature.id ){\n            zoomMap( feature, 'OUT');\n        }\n        else{\n            $scope.center = angular.copy(e.latlng);\n            $scope.center.zoom = $scope.maxZoom;\n        }\n    };\n\n    function centerMap(e, feature){\n        $scope.maxZoom += 2;\n        $scope.center.lat = e.latlng.lat;\n        $scope.center.lng = e.latlng.lng;\n    };\n\n    $scope.close = function () {\n        $modalInstance.close();\n    };\n\n    $scope.captureCoordinate = function(){\n        if( $scope.location && $scope.location.lng && $scope.location.lat ){\n            $modalInstance.close( $scope.location );\n    \t}\n    \telse{\n    \t\t//notify user\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"),\n                $translate.instant(\"nothing_captured\"));\n            return;\n    \t}\n    };\n\n    $scope.$on('leafletDirectiveMarker.dragend', function (e, args) {\n        $scope.marker.m1.lng = args.model.lng;\n        $scope.marker.m1.lat = args.model.lat;\n\n        $scope.location = {lng: args.model.lng, lat: args.model.lat};\n    });\n})\n\n//Controller for audit history\n.controller('AuditHistoryController',\n    function ($scope,\n            $modalInstance,\n            $translate,\n            AuditHistoryDataService,\n            DateUtils,\n            eventId,\n            dataType,\n            nameIdMap,\n            optionSets,\n            CommonUtils) {\n\n\n    $scope.model = {type: dataType,\n    \t\t\t\tname: dataType === 'dataElement' ? $translate.instant('data_element') : $translate.instant('attribute'),\n    \t\t\t\tsearchPlaceholder: dataType === 'dataElement' ? $translate.instant('search_by_data_element') : $translate.instant('search_by_attribute'),\n                    auditColumns: ['name', 'auditType', 'value', 'modifiedBy', 'created'], itemList:[], uniqueRows:[]};\n\n    $scope.close = function () {\n        $modalInstance.close();\n    };\n\n    AuditHistoryDataService.getAuditHistoryData(eventId, dataType).then(function (data) {\n\n        $scope.model.itemList = [];\n        $scope.model.uniqueRows = [];\n\n        var reponseData = data.trackedEntityDataValueAudits ? data.trackedEntityDataValueAudits :\n            data.trackedEntityAttributeValueAudits ? data.trackedEntityAttributeValueAudits : null;\n\n        if (reponseData) {\n            for (var index = 0; index < reponseData.length; index++) {\n                var dataValue = reponseData[index];\n                var audit = {}, obj = {};\n                if (dataType === \"attribute\") {\n                    if (nameIdMap[dataValue.trackedEntityAttribute.id]) {\n                        obj = nameIdMap[dataValue.trackedEntityAttribute.id];\n                        audit.name = obj.displayName;\n                        audit.valueType = obj.valueType;\n                    }\n                } else if (dataType === \"dataElement\") {\n                    if (nameIdMap[dataValue.dataElement.id] && nameIdMap[dataValue.dataElement.id].dataElement) {\n                        obj = nameIdMap[dataValue.dataElement.id].dataElement;\n                        audit.name = obj.displayFormName;\n                        audit.valueType = obj.valueType;\n                    }\n                }\n\n                dataValue.value = CommonUtils.formatDataValue(null, dataValue.value, obj, optionSets, 'USER');\n                audit.auditType = dataValue.auditType;\n                audit.value = dataValue.value;\n                audit.modifiedBy = dataValue.modifiedBy;\n                audit.created = DateUtils.formatToHrsMinsSecs(dataValue.created);\n\n                $scope.model.itemList.push(audit);\n                if( $scope.model.uniqueRows.indexOf(audit.name) === -1){\n                \t$scope.model.uniqueRows.push(audit.name);\n                }\n\n                if($scope.model.uniqueRows.length > 0){\n                \t$scope.model.uniqueRows = $scope.model.uniqueRows.sort();\n                }\n            }\n        }\n    });\n})\n\n.controller('OrgUnitTreeController', function($scope, $modalInstance, OrgUnitFactory, orgUnitId) {\n\n    $scope.model = {selectedOrgUnitId: orgUnitId ? orgUnitId : null};\n\n    function expandOrgUnit( orgUnit, ou ){\n        if( ou.path.indexOf( orgUnit.path ) !== -1 ){\n            orgUnit.show = true;\n        }\n\n        orgUnit.hasChildren = orgUnit.children && orgUnit.children.length > 0 ? true : false;\n        if( orgUnit.hasChildren ){\n            for( var i=0; i< orgUnit.children.length; i++){\n                if( ou.path.indexOf( orgUnit.children[i].path ) !== -1 ){\n                    orgUnit.children[i].show = true;\n                    expandOrgUnit( orgUnit.children[i], ou );\n                }\n            }\n        }\n        return orgUnit;\n    };\n\n    function attachOrgUnit( orgUnits, orgUnit ){\n        for( var i=0; i< orgUnits.length; i++){\n            if( orgUnits[i].id === orgUnit.id ){\n                orgUnits[i] = orgUnit;\n                orgUnits[i].show = true;\n                orgUnits[i].hasChildren = orgUnits[i].children && orgUnits[i].children.length > 0 ? true : false;\n                return;\n            }\n            if( orgUnits[i].children && orgUnits[i].children.length > 0 ){\n                attachOrgUnit(orgUnits[i].children, orgUnit);\n            }\n        }\n        return orgUnits;\n    };\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        var selectedOuFetched = false;\n        var levelsFetched = 0;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            levelsFetched = ou.level;\n            if( orgUnitId && orgUnitId === ou.id ){\n                selectedOuFetched = true;\n            }\n            angular.forEach(ou.children, function(o){\n                levelsFetched = o.level;\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                if( orgUnitId && !selectedOuFetched && orgUnitId === ou.id ){\n                    selectedOuFetched = true;\n                }\n            });\n        });\n\n        levelsFetched = levelsFetched > 0 ? levelsFetched - 1 : levelsFetched;\n\n        if( orgUnitId && !selectedOuFetched ){\n            var parents = null;\n            OrgUnitFactory.get( orgUnitId ).then(function( ou ){\n                if( ou && ou.path ){\n                    parents = ou.path.substring(1, ou.path.length);\n                    parents = parents.split(\"/\");\n                    if( parents && parents.length > 0 ){\n                        var url = \"fields=id,displayName,path,level,\";\n                        for( var i=levelsFetched; i<ou.level; i++){\n                            url = url + \"children[id,displayName,level,path,\";\n                        }\n\n                        url = url.substring(0, url.length-1);\n                        for( var i=levelsFetched; i<ou.level; i++){\n                            url = url + \"]\";\n                        }\n\n                        OrgUnitFactory.getOrgUnits(parents[levelsFetched], url).then(function(response){\n                            if( response && response.organisationUnits && response.organisationUnits[0] ){\n                                response.organisationUnits[0].show = true;\n                                response.organisationUnits[0].hasChildren = response.organisationUnits[0].children && response.organisationUnits[0].children.length > 0 ? true : false;\n                                response.organisationUnits[0] = expandOrgUnit(response.organisationUnits[0], ou );\n                                $scope.orgUnits = attachOrgUnit( $scope.orgUnits, response.organisationUnits[0] );\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    });\n\n\n    //expand/collapse of search orgunit tree\n    $scope.expandCollapse = function(orgUnit) {\n        if( orgUnit.hasChildren ){\n            //Get children for the selected orgUnit\n            OrgUnitFactory.getChildren(orgUnit.id).then(function(ou) {\n                orgUnit.show = !orgUnit.show;\n                orgUnit.hasChildren = false;\n                orgUnit.children = ou.children;\n                angular.forEach(orgUnit.children, function(ou){\n                    ou.hasChildren = ou.children && ou.children.length > 0 ? true : false;\n                });\n            });\n        }\n        else{\n            orgUnit.show = !orgUnit.show;\n        }\n    };\n\n    $scope.setSelectedOrgUnit = function( orgUnitId ){\n        $scope.model.selectedOrgUnitId = orgUnitId;\n    };\n\n    $scope.select = function () {\n        $modalInstance.close( $scope.model.selectedOrgUnitId );\n    };\n\n    $scope.close = function(){\n        $modalInstance.close();\n    };\n})\n\n.controller('CANMenuController', function($scope, CommonUtils) {\n\t$scope.icons = CommonUtils.getIcons();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./common/dhis2.angular.controllers.js","/* global angular, moment, dhis2, parseFloat, indexedDB */\n\n'use strict';\n\n/* Services */\n\nvar ndpFrameworkServices = angular.module('ndpFrameworkServices', ['ngResource'])\n\n    .factory('DDStorageService', function () {\n        var store = new dhis2.storage.Store({\n            name: \"dhis2ndp\",\n            adapters: [dhis2.storage.IndexedDBAdapter, dhis2.storage.DomSessionStorageAdapter, dhis2.storage.InMemoryAdapter],\n            objectStores: ['dataElements', 'dataElementGroups', 'dataElementGroupSets', 'dataSets', 'optionSets', 'categoryCombos', 'attributes', 'ouLevels', 'programs', 'legendSets', 'categoryOptionGroupSets', 'optionGroups']\n        });\n        return{\n            currentStore: store\n        };\n    })\n\n    /* Context menu for grid*/\n    .service('SelectedMenuService', function () {\n        this.selectedMenu = null;\n\n        this.setSelectedMenu = function (selectedMenu) {\n            this.selectedMenu = selectedMenu;\n            console.log('le menu selectd est ', selectedMenu)\n        };\n\n        this.getSelectedMenu = function () {\n            return this.selectedMenu;\n        };\n    })\n\n    .service('CommonDataService', function () {\n        this.clusterDataSet = null;\n\n        this.setClusterDataSet = function (clusterDataSet) {\n            this.clusterDataSet = clusterDataSet;\n        };\n\n        this.getClusterDataSet = function () {\n            return this.clusterDataSet;\n        };\n    })\n\n    .service('NDPMenuService', function ($http, CommonUtils) {\n        return {\n            getMenu: function () {\n                var menuFile = 'data/ndpMenu.json';\n                //var menuFile = 'data/ndpMenuSimplified.json';\n                var promise = $http.get(menuFile).then(function (response) {\n                    return response.data;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            }\n        };\n    })\n\n    .service('PeriodService', function (CalendarService, DateUtils, orderByFilter) {\n\n        this.getPeriods = function (periodType, periodOffset, futurePeriods) {\n            if (!periodType) {\n                return [];\n            }\n\n            var calendarSetting = CalendarService.getSetting();\n\n            dhis2.period.format = calendarSetting.keyDateFormat;\n\n            dhis2.period.calendar = $.calendars.instance(calendarSetting.keyCalendar);\n\n            dhis2.period.generator = new dhis2.period.PeriodGenerator(dhis2.period.calendar, dhis2.period.format);\n\n            dhis2.period.picker = new dhis2.period.DatePicker(dhis2.period.calendar, dhis2.period.format);\n\n            var d2Periods = dhis2.period.generator.generateReversedPeriods(periodType, periodOffset);\n\n            d2Periods = dhis2.period.generator.filterOpenPeriods(periodType, d2Periods, futurePeriods, null, null);\n\n            angular.forEach(d2Periods, function (p) {\n                p.startDate = p._startDate._year + '-' + (p._startDate._month).toString().padStart(2, '0') + '-' + (p._startDate._day).toString().padStart(2, '0');\n                p.endDate = p._endDate._year + '-' + (p._endDate._month).toString().padStart(2, '0') + '-' + (p._endDate._day).toString().padStart(2, '0');\n                p.id = p.iso;\n            });\n\n            return d2Periods;\n        };\n\n        this.getPreviousPeriod = function (periodId, allPeriods) {\n            var index = -1, previousPeriod = null;\n            if (periodId && allPeriods && allPeriods.length > 0) {\n                allPeriods = orderByFilter(allPeriods, '-id').reverse();\n                for (var i = 0; i < allPeriods.length; i++) {\n                    if (allPeriods[i].id === periodId) {\n                        index = i;\n                    }\n                }\n                if (index > 0) {\n                    previousPeriod = allPeriods[index - 1];\n                }\n            }\n            return {location: index, period: previousPeriod};\n        };\n\n        this.getForDates = function (periodType, startDate, endDate) {\n            if (!periodType) {\n                return [];\n            }\n\n            var calendarSetting = CalendarService.getSetting();\n\n            dhis2.period.format = calendarSetting.keyDateFormat;\n\n            dhis2.period.calendar = $.calendars.instance(calendarSetting.keyCalendar);\n\n            dhis2.period.generator = new dhis2.period.PeriodGenerator(dhis2.period.calendar, dhis2.period.format);\n\n            dhis2.period.picker = new dhis2.period.DatePicker(dhis2.period.calendar, dhis2.period.format);\n\n            var d2Periods = dhis2.period.generator.generateReversedPeriods(periodType, -5);\n\n            d2Periods = dhis2.period.generator.filterOpenPeriods(periodType, d2Periods, 5, null, null);\n\n            angular.forEach(d2Periods, function (p) {\n                p.id = p.iso;\n            });\n\n            return d2Periods;\n        };\n\n        this.getQuarters = function (pe) {\n            if (!pe || !pe._startDate || !pe._startDate._year || !pe._endDate || !pe._endDate._year) {\n                return [];\n            }\n            return [\n                {\n                    id: pe._startDate._year + 'Q3',\n                    iso: pe._startDate._year + 'Q3',\n                    name: 'Q1',\n                    sortName: 'firstQuarter'\n                }, {\n                    id: pe._startDate._year + 'Q4',\n                    iso: pe._startDate._year + 'Q4',\n                    name: 'Q2',\n                    sortName: 'secondQuarter'\n                }, {\n                    id: pe._endDate._year + 'Q1',\n                    iso: pe._endDate._year + 'Q1',\n                    name: 'Q3',\n                    sortName: 'thirdQuarter'\n                }, {\n                    id: pe._endDate._year + 'Q2',\n                    iso: pe._endDate._year + 'Q2',\n                    name: 'Q4',\n                    sortName: 'fourthQuarter'\n                }];\n        };\n    })\n\n    /* Factory to fetch optionSets */\n    .factory('OptionSetService', function ($q, $rootScope, DDStorageService) {\n        return {\n            getAll: function () {\n\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('optionSets').done(function (optionSets) {\n                        $rootScope.$apply(function () {\n                            def.resolve(optionSets);\n                        });\n                    });\n                });\n\n                return def.promise;\n            },\n            get: function (uid) {\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.get('optionSets', uid).done(function (optionSet) {\n                        $rootScope.$apply(function () {\n                            def.resolve(optionSet);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getCode: function (options, key) {\n                if (options) {\n                    for (var i = 0; i < options.length; i++) {\n                        if (key === options[i].displayName) {\n                            return options[i].code;\n                        }\n                    }\n                }\n                return key;\n            },\n            getName: function (options, key) {\n                if (options) {\n                    for (var i = 0; i < options.length; i++) {\n                        if (key === options[i].code) {\n                            return options[i].displayName;\n                        }\n                    }\n                }\n                return key;\n            }\n        };\n    })\n\n    /* Service to fetch option combos */\n    .factory('OptionComboService', function ($q, $rootScope, DDStorageService) {\n        return {\n            getAll: function () {\n                var def = $q.defer();\n                var optionCombos = [];\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('categoryCombos').done(function (categoryCombos) {\n                        angular.forEach(categoryCombos, function (cc) {\n                            optionCombos = optionCombos.concat(cc.categoryOptionCombos);\n                        });\n                        $rootScope.$apply(function () {\n                            def.resolve(optionCombos);\n                        });\n                    });\n                });\n\n                return def.promise;\n            },\n            getMappedOptionCombos: function () {\n                var def = $q.defer();\n                var optionCombos = [];\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('categoryCombos').done(function (categoryCombos) {\n                        angular.forEach(categoryCombos, function (cc) {\n                            angular.forEach(cc.categoryOptionCombos, function (oco) {\n                                oco.categories = [];\n                                angular.forEach(cc.categories, function (c) {\n                                    oco.categories.push({id: c.id, displayName: c.displayName});\n                                });\n                                optionCombos[oco.id] = oco;\n                            });\n                        });\n                        $rootScope.$apply(function () {\n                            def.resolve(optionCombos);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getBtaDimensions: function () {\n                var def = $q.defer();\n                var dimension = {options: [], category: null};\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('categoryCombos').done(function (categoryCombos) {\n                        var catFound = false;\n                        for (var i = 0; i < categoryCombos.length && !catFound; i++) {\n                            for (var j = 0; j < categoryCombos[i].categories.length; j++) {\n                                if (categoryCombos[i].categories[j].btaDimension) {\n                                    catFound = true;\n                                    dimension.category = categoryCombos[i].categories[j].id;\n                                    dimension.options = categoryCombos[i].categories[j].categoryOptions;\n                                    dimension.categoryCombo = categoryCombos[i];\n                                    break;\n                                }\n                            }\n                        }\n\n                        var actualDimension = null;\n                        var targetDimension = null;\n                        var baselineDimension = null;\n                        angular.forEach(dimension.options, function (op) {\n                            if (op.dimensionType === 'actual') {\n                                actualDimension = op;\n                            }\n                            if (op.dimensionType === 'target') {\n                                targetDimension = op;\n                            }\n                            if (op.dimensionType === 'baseline') {\n                                baselineDimension = op;\n                            }\n                        });\n\n                        $rootScope.$apply(function () {\n                            def.resolve({bta: dimension, actual: actualDimension, target: targetDimension, baseline: baselineDimension});\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getBsrDimensions: function () {\n\n                var def = $q.defer();\n\n                this.getBtaDimensions().then(function (bta) {\n\n                    var dimension = {options: [], category: null};\n                    DDStorageService.currentStore.open().done(function () {\n                        DDStorageService.currentStore.getAll('categoryCombos').done(function (categoryCombos) {\n                            var catFound = false;\n                            for (var i = 0; i < categoryCombos.length && !catFound; i++) {\n                                for (var j = 0; j < categoryCombos[i].categories.length; j++) {\n                                    if (categoryCombos[i].categories[j].bsrDimension) {\n                                        catFound = true;\n                                        dimension.category = categoryCombos[i].categories[j].id;\n                                        dimension.options = categoryCombos[i].categories[j].categoryOptions;\n                                        dimension.categoryCombo = categoryCombos[i];\n                                        break;\n                                    }\n                                }\n                            }\n\n                            var plannedDimension = null;\n                            var approvedDimension = null;\n                            var releaseDimension = null;\n                            var spentDimension = null;\n                            angular.forEach(dimension.options, function (op) {\n                                if (op.dimensionType === 'planned') {\n                                    plannedDimension = op;\n                                }\n                                if (op.dimensionType === 'approved') {\n                                    approvedDimension = op;\n                                }\n                                if (op.dimensionType === 'release') {\n                                    releaseDimension = op;\n                                }\n                                if (op.dimensionType === 'spent') {\n                                    spentDimension = op;\n                                }\n                            });\n\n                            $rootScope.$apply(function () {\n                                def.resolve({bsr: dimension, planned: plannedDimension, approved: approvedDimension, release: releaseDimension, spent: spentDimension});\n                            });\n                        });\n                    });\n                });\n\n                return def.promise;\n\n            },\n            getLlgFinanceDimensions: function (uid, sectors) {\n                var def = $q.defer();\n                var dimension = {sectors: [], workPlans: [], programmes: [], outputs: [], fundTypes: [], optionCombos: [], programmeInfo: {}, workPlanInfo: {}};\n                angular.forEach(sectors, function (cogs) {\n                    angular.forEach(cogs.categoryOptionGroups, function (cog) {\n                        dimension.workPlans.push(cog);\n                        dimension.workPlanInfo[cog.displayName] = {\n                            sector: cogs,\n                            programme: $.map(cog.categoryOptions, function (cog) {\n                                return cog;\n                            })\n                        };\n                        angular.forEach(cog.categoryOptions, function (co) {\n                            dimension.programmeInfo[co.displayName] = {\n                                sector: cogs,\n                                workPlan: cog,\n                                programme: co\n                            };\n                        });\n                    });\n                });\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.get('categoryCombos', uid).done(function (categoryCombo) {\n                        if (categoryCombo && categoryCombo.categories && categoryCombo.categories.length > 0) {\n                            for (var j = 0; j < categoryCombo.categories.length; j++) {\n                                if (categoryCombo.categories[j].code === 'LLG_FIN_FT') {\n                                    dimension.fundTypes = categoryCombo.categories[j].categoryOptions;\n                                } else if (categoryCombo.categories[j].code === 'LLG_FIN_OU') {\n                                    dimension.outputs = categoryCombo.categories[j].categoryOptions;\n                                } else if (categoryCombo.categories[j].code === 'LLG_FIN_PR') {\n                                    dimension.programmes = categoryCombo.categories[j].categoryOptions;\n                                }\n                            }\n                            angular.forEach(categoryCombo.categoryOptionCombos, function (oco) {\n                                oco.categories = [];\n                                angular.forEach(categoryCombo.categories, function (c) {\n                                    oco.categories.push({id: c.id, displayName: c.displayName, categoryCode: c.code});\n                                });\n                                dimension.optionCombos[oco.id] = oco;\n                            });\n                        }\n                        $rootScope.$apply(function () {\n                            def.resolve(dimension);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            hasTargetDimension: function (categoryCombo) {\n                if (!categoryCombo || categoryCombo.isDefault || !categoryCombo.categoryOptionCombos) {\n                    return false;\n                }\n\n                for (var i = 0; i < categoryCombo.categoryOptionCombos.length; i++) {\n                    if (categoryCombo.categoryOptionCombos[i].dimensionType === 'target') {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        };\n    })\n\n    /* Factory to fetch programs */\n    .factory('DataSetFactory', function ($q, $rootScope, storage, DDStorageService, orderByFilter, CommonUtils) {\n\n        return {\n            getActionDataSets: function (ou) {\n                var systemSetting = storage.get('SYSTEM_SETTING');\n                var allowMultiOrgUnitEntry = systemSetting && systemSetting.multiOrganisationUnitForms ? systemSetting.multiOrganisationUnitForms : false;\n\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('dataSets').done(function (dss) {\n                        var multiDs = angular.copy(dss);\n                        var dataSets = [];\n                        var pushedDss = [];\n                        var key = 'dataSetType';\n                        angular.forEach(dss, function (ds) {\n                            ds[key] = ds[key] ? ds[key] : key;\n                            ds[key] = ds[key].toLocaleLowerCase();\n                            if (ds.id && CommonUtils.userHasWriteAccess('ACCESSIBLE_DATASETS', 'dataSets', ds.id) && ds.organisationUnits.hasOwnProperty(ou.id) && ds[key] === \"action\") {\n                                ds.entryMode = 'single';\n                                dataSets.push(ds);\n                            }\n                        });\n\n                        if (allowMultiOrgUnitEntry && ou.c && ou.c.length > 0) {\n\n                            angular.forEach(multiDs, function (ds) {\n                                ds[key] = ds[key] ? ds[key] : key;\n                                ds[key] = ds[key].toLocaleLowerCase();\n                                if (ds.id && CommonUtils.userHasWriteAccess('ACCESSIBLE_DATASETS', 'dataSets', ds.id)) {\n                                    angular.forEach(ou.c, function (c) {\n                                        if (ds.organisationUnits.hasOwnProperty(c) && pushedDss.indexOf(ds.id) === -1 && ds[key] === \"action\") {\n                                            ds.entryMode = 'multiple';\n                                            dataSets.push(ds);\n                                            pushedDss.push(ds.id);\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        $rootScope.$apply(function () {\n                            def.resolve(dataSets);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getTargetDataSets: function () {\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('dataSets').done(function (dss) {\n                        var dataSets = [];\n                        angular.forEach(dss, function (ds) {\n                            if (ds.id && CommonUtils.userHasWriteAccess('ACCESSIBLE_DATASETS', 'dataSets', ds.id) && ds.dataSetType && ds.dataSetType === 'targetGroup') {\n                                dataSets.push(ds);\n                            }\n                        });\n\n                        $rootScope.$apply(function () {\n                            def.resolve(dataSets);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getActionAndTargetDataSets: function () {\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('dataSets').done(function (dss) {\n                        var dataSets = [];\n                        angular.forEach(dss, function (ds) {\n                            if (ds.id && CommonUtils.userHasWriteAccess('ACCESSIBLE_DATASETS', 'dataSets', ds.id) && ds.dataSetType && (ds.dataSetType === 'targetGroup' || ds.dataSetType === 'action')) {\n                                dataSets.push(ds);\n                            }\n                        });\n\n                        $rootScope.$apply(function () {\n                            def.resolve(dataSets);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            get: function (uid) {\n\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.get('dataSets', uid).done(function (ds) {\n                        $rootScope.$apply(function () {\n                            def.resolve(ds);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getByOu: function (ou, selectedDataSet, prop, val) {\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('dataSets').done(function (dss) {\n                        var dataSets = [];\n                        angular.forEach(dss, function (ds) {\n                            if (ds.organisationUnits.indexOf(ou.id) !== -1 && ds.id && CommonUtils.userHasWriteAccess('ACCESSIBLE_DATASETS', 'dataSets', ds.id)) {\n                                if (prop) {\n                                    if (ds[prop]) {\n                                        if (ds[prop] === val)\n                                        {\n                                            dataSets.push(ds);\n                                        }\n                                    }\n                                } else {\n                                    dataSets.push(ds);\n                                }\n                            }\n                        });\n\n                        dataSets = orderByFilter(dataSets, '-displayName').reverse();\n\n                        if (dataSets.length === 0) {\n                            selectedDataSet = null;\n                        } else if (dataSets.length === 1) {\n                            selectedDataSet = dataSets[0];\n                        } else {\n                            if (selectedDataSet) {\n                                var continueLoop = true;\n                                for (var i = 0; i < dataSets.length && continueLoop; i++) {\n                                    if (dataSets[i].id === selectedDataSet.id) {\n                                        selectedDataSet = dataSets[i];\n                                        continueLoop = false;\n                                    }\n                                }\n                                if (continueLoop) {\n                                    selectedDataSet = null;\n                                }\n                            }\n                        }\n\n                        if (!selectedDataSet || angular.isUndefined(selectedDataSet) && dataSets.legth > 0) {\n                            selectedDataSet = dataSets[0];\n                        }\n\n                        $rootScope.$apply(function () {\n                            def.resolve({dataSets: dataSets, selectedDataSet: selectedDataSet});\n                        });\n                    });\n                });\n                return def.promise;\n            }\n        };\n    })\n\n    /* Factory to fetch programs */\n    .factory('ProgramFactory', function($q, $rootScope, DDStorageService, CommonUtils, orderByFilter) {\n\n        return {\n            get: function(uid){\n\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function(){\n                    DDStorageService.currentStore.get('programs', uid).done(function(ds){\n                        $rootScope.$apply(function(){\n                            def.resolve(ds);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getByOu: function(ou, selectedProgram){\n                var def = $q.defer();\n\n                DDStorageService.currentStore.open().done(function(){\n                    DDStorageService.currentStore.getAll('programs').done(function(prs){\n                        var programs = [];\n                        angular.forEach(prs, function(pr){\n                            if(pr.organisationUnits.hasOwnProperty( ou.id ) && pr.id && CommonUtils.userHasReadAccess( 'ACCESSIBLE_PROGRAMS', 'programs', pr.id)){\n                                programs.push(pr);\n                            }\n                        });\n\n                        programs = orderByFilter(programs, '-displayName').reverse();\n\n                        if(programs.length === 0){\n                            selectedProgram = null;\n                        }\n                        else if(programs.length === 1){\n                            selectedProgram = programs[0];\n                        }\n                        else{\n                            if(selectedProgram){\n                                var continueLoop = true;\n                                for(var i=0; i<programs.length && continueLoop; i++){\n                                    if(programs[i].id === selectedProgram.id){\n                                        selectedProgram = programs[i];\n                                        continueLoop = false;\n                                    }\n                                }\n                                if(continueLoop){\n                                    selectedProgram = null;\n                                }\n                            }\n                        }\n\n                        if(!selectedProgram || angular.isUndefined(selectedProgram) && programs.legth > 0){\n                            selectedProgram = programs[0];\n                        }\n\n                        $rootScope.$apply(function(){\n                            def.resolve({programs: programs, selectedProgram: selectedProgram});\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getAll: function (store) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll(store).done(function (prs) {\n                        var programs = [];\n                        angular.forEach(prs, function(pr){\n                            if(pr.id && CommonUtils.userHasReadAccess( 'ACCESSIBLE_PROGRAMS', 'programs', pr.id)){\n                                programs.push(pr);\n                            }\n                        });\n                        programs = orderByFilter(programs, ['-code', '-displayName']).reverse();\n\n                        $rootScope.$apply(function () {\n                            def.resolve(programs);\n                        });\n                    });\n                });\n                return def.promise;\n            }\n        };\n    })\n\n    /* factory to fetch and process programValidations */\n    .factory('MetaDataFactory', function ($q, $rootScope, DDStorageService, orderByFilter) {\n\n        return {\n            get: function (store, uid) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.get(store, uid).done(function (obj) {\n                        $rootScope.$apply(function () {\n                            def.resolve(obj);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            set: function (store, obj) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.set(store, obj).done(function (obj) {\n                        $rootScope.$apply(function () {\n                            def.resolve(obj);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getAll: function (store) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll(store).done(function (objs) {\n                        objs = orderByFilter(objs, ['-code', '-displayName']).reverse();\n                        $rootScope.$apply(function () {\n                            def.resolve(objs);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getAllByProperty: function (store, prop, val) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll(store).done(function (objs) {\n                        var selectedObjects = [];\n                        for (var i = 0; i < objs.length; i++) {\n                            if (objs[i][prop]) {\n                                objs[i][prop] = objs[i][prop].toLocaleLowerCase();\n                                if (objs[i][prop] === val)\n                                {\n                                    selectedObjects.push(objs[i]);\n                                }\n                            }\n                        }\n\n                        $rootScope.$apply(function () {\n                            selectedObjects = orderByFilter(selectedObjects, ['-code', '-displayName']).reverse();\n                            def.resolve(selectedObjects);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getByProperty: function (store, prop, val) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll(store).done(function (objs) {\n                        var selectedObject = null;\n                        for (var i = 0; i < objs.length; i++) {\n                            if (objs[i][prop]) {\n                                objs[i][prop] = objs[i][prop].toLocaleLowerCase();\n                                if (objs[i][prop] === val)\n                                {\n                                    selectedObject = objs[i];\n                                    break;\n                                }\n                            }\n                        }\n\n                        $rootScope.$apply(function () {\n                            def.resolve(selectedObject);\n                        });\n                    });\n                });\n                return def.promise;\n            },\n            getDataElementGroups: function () {\n                var def = $q.defer();\n                var dataElementsById = {}, categoryCombosById = {};\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('categoryCombos').done(function (categoryCombos) {\n                        angular.forEach(categoryCombos, function (cc) {\n                            categoryCombosById[cc.id] = cc;\n                        });\n\n                        DDStorageService.currentStore.getAll('dataElements').done(function (dataElements) {\n                            angular.forEach(dataElements, function (de) {\n                                var cc = categoryCombosById[de.categoryCombo.id];\n                                de.categoryOptionCombos = cc.categoryOptionCombos;\n                                dataElementsById[de.id] = de;\n                            });\n\n                            DDStorageService.currentStore.getAll('dataElementGroups').done(function (dataElementGroups) {\n                                angular.forEach(dataElementGroups, function (deg) {\n                                    angular.forEach(deg.dataElements, function (de) {\n                                        var _de = dataElementsById[de.id];\n                                        if (_de) {\n                                            de.categoryOptionCombos = _de.categoryOptionCombos ? _de.categoryOptionCombos : [];\n                                            de.displayName = _de.displayName;\n                                            de.code = _de.code;\n                                        }\n                                    });\n\n                                    deg.dataElements = orderByFilter(deg.dataElements, ['-code', '-displayName']).reverse();\n                                });\n                                $rootScope.$apply(function () {\n                                    def.resolve(dataElementGroups);\n                                });\n                            });\n                        });\n                    });\n\n                });\n                return def.promise;\n            }\n        };\n    })\n\n    .service('ResulstChainService', function ($q, $rootScope, $filter, DDStorageService, orderByFilter) {\n\n        return {\n            getByOptionSet: function (optionSetId) {\n                var def = $q.defer();\n                DDStorageService.currentStore.open().done(function () {\n                    DDStorageService.currentStore.getAll('optionGroups').done(function (objs) {\n                        var optionGroups = $filter('filter')(objs, {optionSet: {id: optionSetId}});\n                        if (!optionGroups) {\n                            console.log('need to do something here ...');\n                        }\n                        $rootScope.$apply(function () {\n                            var chain = {};\n                            angular.forEach(optionGroups, function (og) {\n                                if (og.code === 'PR') {\n                                    chain.programs = og.options;\n                                }\n                                if (og.code === 'SP') {\n                                    chain.subPrograms = og.options;\n                                }\n                                if (og.code === 'OJ') {\n                                    chain.objectives = og.options;\n                                }\n                                if (og.code === 'IN') {\n                                    chain.interventions = og.options;\n                                }\n                            });\n                            def.resolve(chain);\n                        });\n                    });\n                });\n                return def.promise;\n            }\n        };\n    })\n\n    .service('OrgUnitGroupSetService', function ($http, CommonUtils) {\n        return {\n            getSectors: function () {\n                var filter = '?paging=false&fields=id,displayName,organisationUnitGroups[id,displayName,code,attributeValues[value,attribute[id,code,valueType]],organisationUnits[id,displayName,code,dataSets[dataSetElements[dataElement[dataElementGroups[groupSets[id]]]]]]],attributeValues[value,attribute[id,code,valueType]]';\n                var url = DHIS2URL + '/api/organisationUnitGroupSets.json' + encodeURI(filter);\n                var promise = $http.get(url).then(function (response) {\n                    var sectors = [];\n                    if (response && response.data && response.data.organisationUnitGroupSets) {\n                        var ogss = response.data.organisationUnitGroupSets;\n                        angular.forEach(ogss, function (ogs) {\n                            ogs = dhis2.metadata.processMetaDataAttribute(ogs);\n                            if (ogs.orgUnitGroupSetType && ogs.orgUnitGroupSetType === 'sector' && ogs.organisationUnitGroups.length > 0) {\n                                angular.forEach(ogs.organisationUnitGroups, function (og) {\n                                    sectors.push(og);\n                                });\n                            }\n                        });\n                    }\n                    return sectors;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            },\n            getByGroup: function (group) {\n                if (!group) {\n                    return CommonUtils.dummyPromise([]);\n                }\n                var filter = '?paging=false&fields=id,displayName,organisationUnitGroups[id,displayName,code,attributeValues[value,attribute[id,code,valueType]],organisationUnits[id,displayName,code,dataSets[dataSetElements[dataElement[dataElementGroups[groupSets[id]]]]]]],attributeValues[value,attribute[id,code,valueType]]';\n                var url = DHIS2URL + '/api/organisationUnitGroupSets.json' + encodeURI(filter);\n                var promise = $http.get(url).then(function (response) {\n                    var groups = [];\n                    if (response && response.data && response.data.organisationUnitGroupSets) {\n                        var ogss = response.data.organisationUnitGroupSets;\n                        angular.forEach(ogss, function (ogs) {\n                            ogs = dhis2.metadata.processMetaDataAttribute(ogs);\n                            if (ogs.orgUnitGroupSetType && ogs.orgUnitGroupSetType === 'mdalg' && ogs.organisationUnitGroups.length > 0) {\n                                angular.forEach(ogs.organisationUnitGroups, function (og) {\n                                    og = dhis2.metadata.processMetaDataAttribute(og);\n                                    if (og.orgUnitGroupType && og.orgUnitGroupType === group && og.organisationUnits) {\n                                        angular.forEach(og.organisationUnits, function (ou) {\n                                            groups.push(ou.id);\n                                        });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    return groups;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            },\n            getByGroupOrgUnitOnly: function (group) {\n                if (!group) {\n                    return CommonUtils.dummyPromise([]);\n                }\n                var filter = '?paging=false&fields=id,displayName,organisationUnitGroups[id,displayName,code,attributeValues[value,attribute[id,code,valueType]],organisationUnits[id,displayName,code,level,parent[code,displayName]]],attributeValues[value,attribute[id,code,valueType]]';\n                var url = DHIS2URL + '/api/organisationUnitGroupSets.json' + encodeURI(filter);\n                var promise = $http.get(url).then(function (response) {\n                    var groups = [];\n                    if (response && response.data && response.data.organisationUnitGroupSets) {\n                        var ogss = response.data.organisationUnitGroupSets;\n                        angular.forEach(ogss, function (ogs) {\n                            ogs = dhis2.metadata.processMetaDataAttribute(ogs);\n                            if (ogs.orgUnitGroupSetType && ogs.orgUnitGroupSetType === 'mdalg' && ogs.organisationUnitGroups.length > 0) {\n                                angular.forEach(ogs.organisationUnitGroups, function (og) {\n                                    og = dhis2.metadata.processMetaDataAttribute(og);\n                                    if (og.orgUnitGroupType && og.orgUnitGroupType === group && og.organisationUnits) {\n                                        angular.forEach(og.organisationUnits, function (ou) {\n                                            groups[ou.id] = ou;\n                                        });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    return groups;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            },\n            getByVote: function (id) {\n                var filter = '?paging=false&fields=id,displayName,code,dataSets[dataSetElements[dataElement[dataElementGroups[groupSets[id]]]]],attributeValues[value,attribute[id,code,valueType]]';\n                var url = DHIS2URL + '/api/organisationUnits/' + id + '.json' + encodeURI(filter);\n                var promise = $http.get(url).then(function (response) {\n                    return response.data;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            }\n        };\n    })\n\n    .service('Analytics', function ($q, $http, $filter, $translate, DHIS2URL, orderByFilter, CommonUtils, NotificationService) {\n        return {\n            getFinancialData: function (url, metadata) {\n                if (url) {\n                    url = DHIS2URL +  '/api/dataValueSets.json?' + encodeURI(url);\n                    var promise = $http.get(url).then(function (response) {\n                        var data = [], processed = [];\n                        if (response.data && response.data.dataValues && response.data.dataValues.length > 0) {\n                            angular.forEach(response.data.dataValues, function (dv) {\n                                var v = {\n                                    dataElement: dv.dataElement,\n                                    orgUnit: dv.orgUnit,\n                                    categoryOptionCombo: dv.categoryOptionCombo,\n                                    attributeOptionCombo: dv.attributeOptionCombo\n                                };\n\n                                var key = dv.dataElement + '_' + dv.orgUnit + '_' + dv.categoryOptionCombo + '_' + dv.attributeOptionCombo;\n                                if (processed.indexOf(key) === -1) {\n                                    processed.push(key);\n                                    var dataElement = metadata.dataElements[dv.dataElement];\n                                    var oco = metadata.optionCombos[v.attributeOptionCombo];\n                                    var lg = metadata.llgInfo[dv.orgUnit];\n                                    if (oco && oco.displayName) {\n                                        var pr = oco.displayName.split(',');\n                                        var prInfo = metadata.programmeInfo[pr[1]];\n                                        if (prInfo) {\n                                            var res = $filter('dataFilter')(response.data.dataValues, angular.copy(v));\n                                            v.sector = prInfo.sector.displayName;\n                                            v.parentLgCode = lg && lg.parent && lg.parent.code ? lg.parent.code : '';\n                                            v.parentLgName = lg && lg.parent && lg.parent.displayName ? lg.parent.displayName : '';\n                                            v.subCounty = lg && lg.displayName ? lg.displayName : '';\n                                            v.workPlan = prInfo.workPlan.displayName;\n                                            v.fundType = pr[0];\n                                            v.programme = pr[1];\n                                            v.output = pr[2];\n                                            v.item = dataElement && dataElement.displayName || '';\n                                            v.cumFinancialYear = 0;\n\n                                            angular.forEach(metadata.periods, function (p) {\n                                                v[p.sortName] = '';\n                                            });\n                                            angular.forEach(res, function (r) {\n                                                v[metadata.periodsBySortName[r.period].sortName] = r.value;\n                                                v.cumFinancialYear = CommonUtils.getSum(v.cumFinancialYear, r.value);\n                                            });\n                                            data.push(v);\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                        return data;\n                    }, function (response) {\n                        CommonUtils.errorNotifier(response);\n                        return response.data;\n                    });\n                    return promise;\n                } else {\n                    var def = $q.defer();\n                    def.resolve();\n                    return def.promise;\n                }\n\n            },\n            getDataInBatch: function( url, items ){\n                var def = $q.defer(), promises = [], batches = dhis2.metadata.chunk( items, 200 );\n\n                angular.forEach(batches, function(batch){\n                    var u = DHIS2URL +  '/api/analytics?' + encodeURI(url);\n                    promises.push( $http.get( u + '&dimension=dx:' + batch.join(';')) );\n                });\n\n                $q.all(promises).then(function( response ){\n                    var result = {};\n                    for (var i = 0; i < response.length; i++) {\n                        var r = CommonUtils.getFormattedAnalyticsResponse( response[i] );\n                        if( i === 0 ){\n                            Object.assign(result, r );\n                        }\n                        else{\n                            result.metaData.dimensions.dx.push( r.metaData.dimensions.dx );\n                            Object.assign(result.metaData.items, r.metaData.items);\n                            result.data.push(...r.data );\n                        }\n                    }\n                    def.resolve( result );\n                });\n                return def.promise;\n            },\n            getData: function (url) {\n                if (url) {\n                    url = DHIS2URL + '/api/analytics?' + encodeURI(url);\n                    var promise = $http.get(url).then(function (response) {\n                        return CommonUtils.getFormattedAnalyticsResponse( response );\n                    }, function (response) {\n                        CommonUtils.errorNotifier(response);\n                        return response.data;\n                    });\n                    return promise;\n                } else {\n                    var def = $q.defer();\n                    def.resolve();\n                    return def.promise;\n                }\n            },\n            processData: function (dataParams) {\n\n                var keyDataParams = ['data', 'metaData', 'cost', 'reportPeriods', 'bta', 'selectedDataElementGroupSets', 'dataElementGroups', 'dataElementsById', 'dataElementGroupsById'];\n\n                if (!dataParams) {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_report_parameters\"));\n                    //return;\n                }\n\n                for (var i = 0; i < keyDataParams.length; i++) {\n                    if (!dataParams[keyDataParams[i]] && keyDataParams[i] !== 'cost') {\n                        NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_report_parameters\") + ' - ' + keyDataParams[i]);\n                        //return;\n                    }\n                }\n\n                var btaDimensions = {category: dataParams.bta.category};\n                angular.forEach(dataParams.bta.options, function (op) {\n                    btaDimensions[op.id] = op.dimensionType;\n                });\n\n                var reportPeriods = orderByFilter(dataParams.reportPeriods, '-id').reverse();\n                var data = dataParams.data;\n                var baseLineTargetActualDimensions = $.map(dataParams.bta.options, function (d) {\n                    return d.id;\n                });\n                var dataExists = false;\n                var dataHeaders = [];\n                var performanceOverviewHeaders = dataParams.performanceOverviewHeaders;\n                var totalRows = 0, dataElementRows = 0;\n                var hasPhysicalPerformanceData = false;\n                var dataElementRowIndex = {};\n                var tableRows = [];\n                var povTableRows = [];\n\n                var filterResultData = function (header, dataElement, oc, data) {\n                    if (!header || !data || !header.periodId || !header.dimensionId || !dataElement)\n                        return;\n\n                    var filterParams = {\n                        dx: dataElement,\n                        pe: header.periodId,\n                        co: oc\n                    };\n\n                    filterParams[dataParams.bta.category] = header.dimensionId;\n                    var res = $filter('dataFilter')(data, filterParams)[0];\n                    return res && res.value ? res.value : '';\n                };\n\n                var filterTargetData = function (header, dataElement, oc, data) {\n                    if (!header || !header.periodId || !dataElement || !oc || !data)\n                        return;\n                    var filterParams = {\n                        dx: dataElement,\n                        pe: header.periodId,\n                        co: oc\n                    };\n                    filterParams[dataParams.bta.category] = dataParams.targetDimension.id;\n\n                    var res = $filter('dataFilter')(data, filterParams)[0];\n                    return res && res.value ? res.value : '';\n                };\n\n                var filterBudgetData = function (header, dataElement, oc, data) {\n                    if (!header || !data || !header.periodId || !header.dimensionId || !dataElement)\n                        return;\n\n                    var filterParams = {\n                        dx: dataElement,\n                        pe: header.periodId,\n                        co: oc\n                    };\n\n                    filterParams[dataParams.bsr.category] = header.dimensionId;\n                    var res = $filter('dataFilter')(data, filterParams)[0];\n                    return res && res.value ? res.value : '';\n                };\n\n                var filterBudgetValueData = function (header, dataElement, oc, data) {\n                    if (!header || !header.periodId || !dataElement || !oc || !data)\n                        return;\n                    var filterParams = {\n                        dx: dataElement,\n                        pe: header.periodId,\n                        co: oc\n                    };\n                    filterParams[dataParams.bsr.category] = dataParams.plannedDimension.id;\n\n                    var res = $filter('dataFilter')(data, filterParams)[0];\n                    return res && res.value ? res.value : '';\n                };\n\n                var valueExists = function (data, header, dataElement, isActionData) {\n                    if (!header || !data || !header.periodId || !header.dimensionId || !dataElement) {\n                        return false;\n                    }\n                    var filterParams = {\n                        dx: dataElement,\n                        pe: header.periodId\n                    };\n\n                    if (isActionData) {\n                        filterParams[dataParams.bsr.category] = header.dimensionId;\n                    } else {\n                        filterParams[dataParams.bta.category] = header.dimensionId;\n                    }\n\n                    var res = $filter('dataFilter')(data, filterParams)[0];\n                    return res && res.value ? true : false;\n                };\n\n                var extractRange = function (l) {\n                    var ranges = {\n                        red: null,\n                        redColor: null,\n                        yellowStart: null,\n                        yellowEnd: null,\n                        yellowColor: null,\n                        green: null,\n                        greenColor: null,\n                        isValid: false\n                    };\n\n                    if (l && l.isTrafficLight && l.legends && l.legends.length === 3) {\n                        for (var j = 0; j < l.legends.length; j++) {\n                            if (l.legends[j].name.toLocaleLowerCase() === 'red') {\n                                ranges.red = l.legends[j].startValue;\n                                ranges.redColor = l.legends[j].color;\n                            } else if (l.legends[j].name.toLocaleLowerCase() === 'yellow') {\n                                ranges.yellowStart = l.legends[j].startValue;\n                                ranges.yellowEnd = l.legends[j].endValue;\n                                ranges.yellowColor = l.legends[j].color;\n                            } else if (l.legends[j].name.toLocaleLowerCase() === 'green') {\n                                ranges.green = l.legends[j].endValue;\n                                ranges.greenColor = l.legends[j].color;\n                            }\n                        }\n                        ranges.isValid = true;\n                    }\n                    return ranges;\n                };\n\n                var getTrafficLight = function (actual, target, deId, aoc) {\n                    var style = {};\n                    var color = \"\";\n                    var de = dataParams.dataElementsById[deId];\n                    var ranges = {};\n                    if (de && de.legendSets && de.legendSets.length > 0) {\n                        for (var i = 0; i < de.legendSets.length; i++) {\n                            var l = dataParams.legendSetsById[de.legendSets[i].id];\n                            ranges = extractRange(l);\n                            if (ranges.isValid) {\n                                break;\n                            }\n                        }\n                    }\n\n                    if (!ranges.green || !ranges.yellowStart || !ranges.yellowEnd || !ranges.red) {\n                        var l = dataParams.defaultLegendSet;\n                        ranges = extractRange(l);\n                    }\n\n                    if (!ranges.green || !ranges.yellowStart || !ranges.yellowEnd || !ranges.red) {\n                        ranges = CommonUtils.getFixedRanges(de.descendingIndicatorType);\n                    }\n\n                    if (!dhis2.validation.isNumber(actual) || !dhis2.validation.isNumber(target)) {\n                        color = '#aaa';\n                        style.printStyle = 'grey-background';\n                    } else {\n                        hasPhysicalPerformanceData = true;\n                        /*var t = CommonUtils.getPercent( Math.abs(actual - target), target, true);\n                         if ( t <= ranges.green ){\n                         color = ranges.greenColor;\n                         }\n                         else if( t > ranges.yellowStart && t <= ranges.yellowEnd ){\n                         color = ranges.yellowColor;\n                         }\n                         else if ( t > ranges.red ){\n                         color = ranges.redColor;\n                         }*/\n                        var t = CommonUtils.getPercent(actual, target, true, true);\n                        t = Number(t);\n                        if (de.descendingIndicatorType) {\n                            if (t <= ranges.green) {\n                                color = ranges.greenColor;\n                                style.printStyle = 'green-background';\n                            } else if (t >= ranges.yellowStart && t <= ranges.yellowEnd) {\n                                color = ranges.yellowColor;\n                                style.printStyle = 'yellow-background';\n                            } else {\n                                color = ranges.redColor;\n                                style.printStyle = 'red-background';\n                            }\n                        } else {\n                            if (t >= ranges.green) {\n                                color = ranges.greenColor;\n                                style.printStyle = 'green-background';\n                            } else if (t >= ranges.yellowStart && t <= ranges.yellowEnd) {\n                                color = ranges.yellowColor;\n                                style.printStyle = 'yellow-background';\n                            } else {\n                                color = ranges.redColor;\n                                style.printStyle = 'red-background';\n                            }\n                        }\n                    }\n                    style.inlineStyle = {\"background-color\": color};\n                    return style;\n                };\n\n                angular.forEach(reportPeriods, function (pe) {\n                    var colSpan = 0;\n                    var d = $filter('filter')(data, {pe: pe.id});\n                    var targetFilter = {pe: pe.id};\n                    targetFilter[dataParams.bta.category] = dataParams.targetDimension.id;\n                    var targetData = $filter('filter')(data, targetFilter);\n\n                    pe.hasData = d && d.length > 0;\n                    pe.hasTargetData = targetData && targetData.length > 0;\n\n                    if (dataParams.displayActionBudgetData) {\n                        angular.forEach(dataParams.bsr.options, function (op) {\n                            colSpan++;\n                            dataHeaders.push({\n                                name: op.displayName + ' ' + $translate.instant('ugx_billion'),\n                                isRowData: true,\n                                periodId: pe.id,\n                                periodStart: pe.startDate,\n                                periodEnd: pe.endDate,\n                                dimensionId: op.id,\n                                dimension: dataParams.bsr.category});\n                        });\n\n                        //budget-planned-released-spent-percentage headers\n                        colSpan++;\n                        dataHeaders.push({\n                            name: $translate.instant('budget_released'),\n                            isRowData: false,\n                            periodId: pe.id,\n                            periodStart: pe.startDate,\n                            periodEnd: pe.endDate,\n                            denDimensionId: dataParams.plannedDimension.id,\n                            numDimensionId: dataParams.releaseDimension.id,\n                            dimensionId: dataParams.plannedDimension.id + '.' + dataParams.releaseDimension.id,\n                            dimension: dataParams.bsr.category});\n\n                        colSpan++;\n                        dataHeaders.push({\n                            name: $translate.instant('budget_spent'),\n                            isRowData: false,\n                            periodId: pe.id,\n                            periodStart: pe.startDate,\n                            periodEnd: pe.endDate,\n                            denDimensionId: dataParams.plannedDimension.id,\n                            numDimensionId: dataParams.spentDimension.id,\n                            dimensionId: dataParams.plannedDimension.id + '.' + dataParams.spentDimension.id,\n                            dimension: dataParams.bsr.category});\n\n                        colSpan++;\n                        dataHeaders.push({\n                            name: $translate.instant('release_spent'),\n                            isRowData: false,\n                            periodId: pe.id,\n                            periodStart: pe.startDate,\n                            periodEnd: pe.endDate,\n                            denDimensionId: dataParams.releaseDimension.id,\n                            numDimensionId: dataParams.spentDimension.id,\n                            dimensionId: dataParams.releaseDimension.id + '.' + dataParams.spentDimension.id,\n                            dimension: dataParams.bsr.category});\n                    } else {\n                        angular.forEach(baseLineTargetActualDimensions, function (dm) {\n                            var filterParams = {pe: pe.id};\n                            filterParams[dataParams.bta.category] = dm;\n                            var d = $filter('dataFilter')(data, filterParams);\n                            if (d && d.length > 0) {\n                                colSpan++;\n                                dataHeaders.push({\n                                    periodId: pe.id,\n                                    periodStart: pe.startDate,\n                                    periodEnd: pe.endDate,\n                                    dimensionId: dm,\n                                    dimension: dataParams.bta.category});\n                            }\n                        });\n                    }\n                    if (pe.hasData) {\n                        pe.colSpan = colSpan;\n                    }\n                });\n\n                if (Object.keys(data).length === 0) {\n                    dataExists = false;\n                } else {\n                    dataExists = true;\n                    var completenessNum = 0, completenessDen = 0;\n\n                    angular.forEach(dataParams.selectedDataElementGroupSets, function (degs) {\n                        degs.expected = {};\n                        degs.available = {};\n\n                        var generateCompletenessInfo = function (degs, isActionData) {\n                            angular.forEach(degs.dataElementGroups, function (deg) {\n                                var _deg = $filter('filter')(dataParams.dataElementGroups, {id: deg.id})[0];\n                                angular.forEach(_deg.dataElements, function (de) {\n                                    angular.forEach(dataHeaders, function (dh) {\n                                        var id = [dh.periodId, dh.dimensionId].join('-');\n                                        if (!degs.available[id]) {\n                                            degs.available[id] = 0;\n                                        }\n                                        if (!degs.expected[id]) {\n                                            degs.expected[id] = 0;\n                                        }\n\n                                        degs.expected[id]++;\n                                        completenessDen++;\n                                        if (valueExists(data, dh, de.id, isActionData)) {\n                                            degs.available[id]++;\n                                            completenessNum++;\n                                        }\n                                    });\n                                });\n                            });\n                        };\n\n                        generateCompletenessInfo(degs, dataParams.displayActionBudgetData);\n\n                        angular.forEach(degs.dataElementGroups, function (_deg) {\n                            var deg = dataParams.dataElementGroupsById[_deg.id];\n                            if (deg && deg.dataElements && deg.dataElements.length > 0) {\n                                var deCount = 0;\n                                var pov = {};\n                                var povPercent = {};\n                                angular.forEach(deg.dataElements, function (de) {\n                                    angular.forEach(de.categoryOptionCombos, function (oc) {\n                                        deCount++;\n                                        dataElementRows++;\n                                        var tableRow = {\n                                            dataElementCode: de.code,\n                                            dataElementId: de.id,\n                                            dataElement: de.displayName + (oc.displayName === 'default' ? '' : ' - ' + oc.displayName),\n                                            dataElementGroup: deg.displayName,\n                                            dataElementGroupSet: degs.displayName,\n                                            values: {},\n                                            hasData: false,\n                                            styles: {}\n                                        };\n                                        tableRows.push(tableRow);\n                                        angular.forEach(dataHeaders, function (dh) {\n                                            if (dataParams.displayActionBudgetData) {\n                                                if (dh.dimensionId === dataParams.plannedDimension.id) {\n                                                    dh.hasBudgetData = true;\n                                                }\n                                                if (dh.isRowData) {\n                                                    var bVal = filterBudgetData(dh, de.id, oc.id, data);\n                                                    if ( bVal !== '' ){\n                                                        tableRow.hasData = true;\n                                                    }\n                                                    tableRow.values[dh.dimensionId + '.' + dh.periodId] = bVal;\n                                                }\n                                                else {\n                                                    var dhId = dataParams.plannedDimension.id + '.' + dataParams.releaseDimension.id;\n                                                    if ( dh.dimensionId ===  dhId ) {\n                                                        var rh = angular.copy(dh);\n                                                        rh.dimensionId = dataParams.releaseDimension.id;\n                                                        var ph = angular.copy(dh);\n                                                        ph.dimensionId = dataParams.plannedDimension.id;\n                                                        var rv = filterBudgetData(rh, de.id, oc.id, data);\n                                                        var pv = filterBudgetData(ph, de.id, oc.id, data);\n\n                                                        var trafficLight = getTrafficLight(rv, pv, de.id, dh.dimensionId);\n                                                        tableRow.styles[dh.dimensionId + '.' + dh.periodId] = trafficLight;\n\n                                                        if (!pov[deg.id + '-' + 'A-' + dh.periodId]) {\n                                                            pov[deg.id + '-' + 'A-' + dh.periodId] = 0;\n                                                        }\n\n                                                        if (!pov[deg.id + '-' + 'M-' + dh.periodId]) {\n                                                            pov[deg.id + '-' + 'M-' + dh.periodId] = 0;\n                                                        }\n\n                                                        if (!pov[deg.id + '-' + 'N-' + dh.periodId]) {\n                                                            pov[deg.id + '-' + 'N-' + dh.periodId] = 0;\n                                                        }\n\n                                                        if (!pov[deg.id + '-' + 'X-' + dh.periodId]) {\n                                                            pov[deg.id + '-' + 'X-' + dh.periodId] = 0;\n                                                        }\n\n                                                        if (!rv || !pv) {\n                                                            pov[deg.id + '-' + 'X-' + dh.periodId] += 1;\n                                                        } else {\n                                                            var t = CommonUtils.getPercent(rv, pv, true, true);\n                                                            t = Number(t);\n                                                            if (t >= 100) {\n                                                                pov[deg.id + '-' + 'A-' + dh.periodId] += 1;\n                                                            } else if (t >= 75 && t <= 99) {\n                                                                pov[deg.id + '-' + 'M-' + dh.periodId] += 1;\n                                                            } else {\n                                                                pov[deg.id + '-' + 'N-' + dh.periodId] += 1;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            } else {\n                                                if (dh.dimensionId === dataParams.targetDimension.id)\n                                                {\n                                                    dh.hasResultData = true;\n                                                }\n                                                var val = filterResultData(dh, de.id, oc.id, data);\n                                                if ( val !== '' ){\n                                                    tableRow.hasData = true;\n                                                }\n                                                var trafficLight = \"\";\n                                                if (dh.dimensionId === dataParams.actualDimension.id) {\n                                                    var targetValue = filterTargetData(dh, de.id, oc.id, data);\n                                                    trafficLight = getTrafficLight(val, targetValue, de.id, dh.dimensionId);\n                                                }\n                                                tableRow.styles[dh.dimensionId + '.' + dh.periodId] = trafficLight;\n                                                tableRow.values[dh.dimensionId + '.' + dh.periodId] = val;\n\n                                                if (dh.dimensionId === dataParams.actualDimension.id) {\n                                                    var ah = angular.copy(dh);\n                                                    ah.dimensionId = dataParams.actualDimension.id;\n                                                    var th = angular.copy(dh);\n                                                    th.dimensionId = dataParams.targetDimension.id;\n                                                    var av = filterResultData(ah, de.id, oc.id, data);\n                                                    var tv = filterTargetData(th, de.id, oc.id, data);\n\n                                                    if (!pov[deg.id + '-' + 'A-' + dh.periodId]) {\n                                                        pov[deg.id + '-' + 'A-' + dh.periodId] = 0;\n                                                    }\n\n                                                    if (!pov[deg.id + '-' + 'M-' + dh.periodId]) {\n                                                        pov[deg.id + '-' + 'M-' + dh.periodId] = 0;\n                                                    }\n\n                                                    if (!pov[deg.id + '-' + 'N-' + dh.periodId]) {\n                                                        pov[deg.id + '-' + 'N-' + dh.periodId] = 0;\n                                                    }\n\n                                                    if (!pov[deg.id + '-' + 'X-' + dh.periodId]) {\n                                                        pov[deg.id + '-' + 'X-' + dh.periodId] = 0;\n                                                    }\n\n\n                                                    if (!av || !tv) {\n                                                        pov[deg.id + '-' + 'X-' + dh.periodId] += 1;\n                                                    } else {\n                                                        var t = CommonUtils.getPercent(av, tv, true, true);\n                                                        if (t >= 100) {\n                                                            pov[deg.id + '-' + 'A-' + dh.periodId] += 1;\n                                                        } else if (t >= 75 && t <= 99) {\n                                                            pov[deg.id + '-' + 'M-' + dh.periodId] += 1;\n                                                        } else {\n                                                            pov[deg.id + '-' + 'N-' + dh.periodId] += 1;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                        dataElementRowIndex[de.id] = dataElementRows;\n                                        angular.forEach(performanceOverviewHeaders, function (ph) {\n                                            var v = pov[deg.id + '-' + ph.id + '-' + ph.period];\n                                            var prcnt = CommonUtils.getPercent(v, deg.dataElements.length, true, true);\n                                            povPercent[deg.id + '-' + ph.id + '-' + ph.period] = prcnt;\n                                        });\n                                    });\n                                });\n                                var povTableRow = {\n                                    dataElementSize: deCount,\n                                    dataElementGroup: deg.displayName,\n                                    dataElementGroupId: deg.id,\n                                    dataElementGroupSet: degs.displayName,\n                                    pov: pov,\n                                    povPercent: povPercent\n                                };\n                                povTableRows.push(povTableRow);\n                            }\n                        });\n                    });\n                }\n\n                return {\n                    dataExists: dataExists,\n                    dataHeaders: dataHeaders,\n                    reportPeriods: reportPeriods,\n                    totalRows: totalRows,\n                    hasPhysicalPerformanceData: hasPhysicalPerformanceData,\n                    completenessNum: completenessNum,\n                    completenessDen: completenessDen,\n                    selectedDataElementGroupSets: dataParams.selectedDataElementGroupSets,\n                    dataElementRowIndex: dataElementRowIndex,\n                    tableRows: tableRows,\n                    povTableRows: povTableRows\n                };\n            }\n        };\n    })\n\n    .service('FinancialDataService', function ($http, CommonUtils) {\n        return {\n            getLocalData: function (fileName) {\n                var promise = $http.get(fileName).then(function (response) {\n                    return response.data;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            }\n        };\n    })\n\n    .service('EventService', function ($http, $q, orderByFilter, DHIS2URL, CommonUtils, DateUtils, OptionSetService) {\n        return {\n            getByOrgUnitAndProgram: function (orgUnit, ouMode, program, optionSets, dataElementsById) {\n                var url = DHIS2URL + '/api/events.json?' + 'paging=false&orgUnit=' + orgUnit + '&ouMode=' + ouMode + '&program=' + program;\n                var promise = $http.get(url).then(function (response) {\n                    var events = response.data && response.data.events ? response.data.events : [];\n                    var faqs = [];\n                    if (response && response.data && response.data.events) {\n                        angular.forEach(events, function (ev) {\n                            if (ev.dataValues) {\n                                var faq = {\n                                    eventDate: ev.eventDate,\n                                    event: ev.event\n                                };\n                                angular.forEach(ev.dataValues, function (dv) {\n                                    var de = dataElementsById[dv.dataElement];\n                                    var val = dv.value;\n                                    if (val && de) {\n                                        val = CommonUtils.formatDataValue(null, val, de, optionSets, 'USER');\n                                        if (de.code === 'FAQ') {\n                                            faq.faq = val;\n                                        }\n                                        if (de.code === 'FAQ_RESPONSE') {\n                                            faq.faqResponse = val;\n                                        }\n                                    }\n                                });\n                            }\n                            faqs.push(faq);\n                        });\n                    }\n                    faqs = orderByFilter(faqs, '-eventDate').reverse();\n                    return faqs;\n\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                });\n\n                return promise;\n            }\n        };\n    })\n\n    .service('DocumentService', function ($http, $q, DHIS2URL, CommonUtils, DateUtils, FileService, OptionSetService) {\n\n        var bytesToSize = function (bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if (bytes === 0)\n                return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        };\n\n        var processDocuments = function (events) {\n            var documents = {};\n            if (events && events.length > 0) {\n                angular.forEach(events, function (ev) {\n                    if (ev && ev.dataValues) {\n                        var doc = {\n                            dateUploaded: DateUtils.formatFromApiToUser(ev.eventDate),\n                            uploadedBy: ev.storedBy,\n                            event: ev.event\n                        };\n\n                        angular.forEach(ev.dataValues, function (dv) {\n                            if (dv.dataElement && dv.value) {\n                                doc.value = dv.value;\n                                FileService.get(dv.value).then(function (res) {\n                                    doc.name = res.displayName || '';\n                                    doc.size = bytesToSize(res.contentLength || 0);\n                                    doc.type = res.contentType || 'undefined';\n                                    doc.path = '/events/files?dataElementUid=' + dv.dataElement + '&eventUid=' + ev.event;\n                                });\n                            }\n                        });\n\n                        documents[ev.event] = doc;\n                    }\n                });\n            }\n            return documents;\n        };\n\n        var skipPaging = \"&skipPaging=true\";\n\n        var getByOrgUnitAndProgram = function (orgUnit, ouMode, program, typeDataElement, fileDataElement, optionSets, dataElementById) {\n            var url = DHIS2URL + '/api/events.json?' + 'orgUnit=' + orgUnit + '&ouMode=' + ouMode + '&program=' + program + skipPaging;\n            var promise = $http.get(url).then(function (response) {\n                var events = response.data && response.data.events ? response.data.events : [];\n                var documents = [];\n                if (response && response.data && response.data.events) {\n                    angular.forEach(events, function (ev) {\n                        var doc = {\n                            dateUploaded: DateUtils.formatFromApiToUser(ev.eventDate),\n                            uploadedBy: ev.storedBy,\n                            event: ev.event\n                        };\n\n                        if (ev.dataValues) {\n                            angular.forEach(ev.dataValues, function (dv) {\n                                if (dv.dataElement === typeDataElement.id) {\n                                    doc.folder = dv.value;\n                                } else if (dv.dataElement === fileDataElement.id) {\n                                    doc.value = dv.value;\n                                    FileService.get(dv.value).then(function (res) {\n                                        doc.name = res.displayName || '';\n                                        doc.size = bytesToSize(res.contentLength || 0);\n                                        doc.type = res.contentType || 'undefined';\n                                        doc.path = '/events/files?dataElementUid=' + dv.dataElement + '&eventUid=' + ev.event;\n                                        doc.mda = ev.orgUnitName;\n                                    });\n                                } else {\n                                    var val = dv.value;\n                                    var de = dataElementById[dv.dataElement];\n\n                                    if (de && de.optionSetValue) {\n                                        val = OptionSetService.getName(optionSets[de.optionSet.id].options, String(val));\n                                    }\n\n                                    doc[dv.dataElement] = val;\n                                }\n                            });\n                        }\n                        documents.push(doc);\n                    });\n                }\n                return documents;\n\n            }, function (response) {\n                CommonUtils.errorNotifier(response);\n            });\n\n            return promise;\n        };\n\n        var get = function (eventUid) {\n            var promise = $http.get(DHIS2URL + '/api/events/' + eventUid + '.json').then(function (response) {\n                return response.data;\n            });\n            return promise;\n        };\n\n        var create = function (dhis2Event) {\n            var promise = $http.post(DHIS2URL + '/api/events.json', dhis2Event).then(function (response) {\n                return response.data;\n            });\n            return promise;\n        };\n\n        var deleteEvent = function (dhis2Event) {\n            var promise = $http.delete(DHIS2URL + '/api/events/' + dhis2Event.event).then(function (response) {\n                return response.data;\n            });\n            return promise;\n        };\n\n        var update = function (dhis2Event) {\n            var promise = $http.put(DHIS2URL + '/api/events/' + dhis2Event.event, dhis2Event).then(function (response) {\n                return response.data;\n            });\n            return promise;\n        };\n\n        var getMultiple = function (eventIds) {\n            var def = $q.defer();\n            var promises = [];\n            angular.forEach(eventIds, function (eventId) {\n                promises.push(get(eventId));\n            });\n\n            $q.all(promises).then(function (_events) {\n                def.resolve(processDocuments(_events));\n            });\n            return def.promise;\n        };\n\n        return {\n            get: get,\n            create: create,\n            deleteEvent: deleteEvent,\n            update: update,\n            getMultiple: getMultiple,\n            getByOrgUnitAndProgram: getByOrgUnitAndProgram,\n            getForMultipleOptionCombos: function (orgUnit, mode, pr, attributeCategoryUrl, optionCombos, startDate, endDate) {\n                var def = $q.defer();\n                var promises = [], events = [];\n                angular.forEach(optionCombos, function (oco) {\n                    promises.push(getByOrgUnitAndProgram(orgUnit, mode, pr, attributeCategoryUrl, oco.id, startDate, endDate));\n                });\n\n                $q.all(promises).then(function (_events) {\n                    angular.forEach(_events, function (evs) {\n                        events = events.concat(evs);\n                    });\n\n                    def.resolve(events);\n                });\n                return def.promise;\n            },\n            getForMultiplePrograms: function (orgUnit, mode, programs, attributeCategoryUrl, startDate, endDate) {\n                var def = $q.defer();\n                var promises = [], events = [];\n                angular.forEach(programs, function (pr) {\n                    promises.push(getByOrgUnitAndProgram(orgUnit, mode, pr.id, attributeCategoryUrl, null, startDate, endDate));\n                });\n\n                $q.all(promises).then(function (_events) {\n                    angular.forEach(_events, function (evs) {\n                        events = events.concat(evs);\n                    });\n\n                    def.resolve(events);\n                });\n                return def.promise;\n            }\n        };\n    })\n\n    .service('ProjectService', function ($http, orderByFilter, DateUtils, CommonUtils, OptionSetService) {\n        return {\n            getByProgram: function (pager, filter, orgUnit, program, optionSets, attributesById, dataElementsById) {\n                var url = DHIS2URL +  '/api/tracker/trackedEntities.json?ouMode=DESCENDANTS&order=created:desc&fields=*&orgUnit=' + orgUnit.id + '&program=' + program.id;\n\n                if ( pager ){\n                    var pgSize = pager.pageSize ? pager.pageSize : 50;\n                    var pg = pager.page ? pager.page : 1;\n                    pgSize = pgSize > 1 ? pgSize  : 1;\n                    pg = pg > 1 ? pg : 1;\n                    url += '&pageSize=' + pgSize + '&page=' + pg + '&totalPages=false';\n                }\n\n                if ( filter ){\n                    url += \"&\" + filter;\n                }\n\n                var promise = $http.get(url).then(function (response) {\n                    var teis = response.data && response.data.instances ? response.data.instances : [];\n                    var pager = {};\n                    if ( response.data && response.data.page && response.data.pageSize ){\n                        pager.page = response.data.page;\n                        pager.pageSize = response.data.pageSize;\n                        pager.total = 1;\n                        pager.pageCount = 1;\n                    }\n                    var projects = [];\n                    angular.forEach(teis, function (tei) {\n                        var startDate = '', endDate = '';\n                        if (tei.attributes) {\n                            var project = {\n                                orgUnit: tei.orgUnit,\n                                trackedEntityInstance: tei.trackedEntity,\n                                style: {}\n                            };\n                            angular.forEach(tei.attributes, function (att) {\n                                var attribute = attributesById[att.attribute];\n                                var val = att.value;\n                                if (attribute) {\n                                    val = CommonUtils.formatDataValue(null, val, attribute, optionSets, 'USER');\n                                    if (attribute.code === 'AT_PL_START_DATE') {\n                                        startDate = val;\n                                    }\n                                    if (attribute.code === 'AT_PL_END_DATE') {\n                                        endDate = val;\n                                    }\n\n                                    if (attribute.code === 'AT_PRIORITY' && att.value) {\n                                        var style = CommonUtils.getFixedTrafficStyle();\n                                        if (att.value === 'High') {\n                                            project.style[att.attribute] = style.red;\n                                        }\n                                        if (att.value === 'Normal') {\n                                            project.style[att.attribute] = style.yellow;\n                                        }\n                                        if (att.value === 'Low') {\n                                            project.style[att.attribute] = style.green;\n                                        }\n                                    }\n                                }\n                                project[att.attribute] = val;\n                            });\n                            if (startDate !== '' && endDate !== '') {\n                                var duration = DateUtils.getDifference(startDate, endDate);\n                                project.duration = isNaN(duration) ? '' : Math.floor(duration / 30);\n                            }\n                        }\n                        if (tei.enrollments && tei.enrollments.length === 1) {\n                            project.vote = tei.enrollments[0].orgUnitName;\n                            if (tei.enrollments[0].events) {\n                                tei.enrollments[0].events = orderByFilter(tei.enrollments[0].events, '-occurredAt').reverse();\n                                var len = tei.enrollments[0].events.length;\n                                var ev = tei.enrollments[0].events[len - 1];\n                                if (ev && ev.dataValues && CommonUtils.userHasReadAccess('ACCESSIBLE_PROGRAM_STAGES', 'programStages', ev.programStage) ) {\n                                    project.status = {};\n                                    angular.forEach(ev.dataValues, function (dv) {\n                                        if (dataElementsById[dv.dataElement]) {\n                                            var de = dataElementsById[dv.dataElement];\n                                            var val = dv.value;\n                                            if (de) {\n                                                val = CommonUtils.formatDataValue(null, val, de, optionSets, 'USER');\n                                            }\n                                            if (de.code === 'AT_RATING' && val !== '') {\n                                                var style = CommonUtils.getTrafficColorForValue(val);\n                                                project.style[dv.dataElement] = {\n                                                    inlineStyle: style.inlineStyle,\n                                                    printStyle: style.printStyle\n                                                };\n                                            }\n                                            if (de.code === 'AT_PROGRESS_STATUS' && val !== '') {\n                                                var style = CommonUtils.getFixedTrafficStyle();\n                                                if (dv.value === 'Not started') {\n                                                    project.style[dv.dataElement] = style.red;\n                                                }\n                                                if (dv.value === 'In progress') {\n                                                    project.style[dv.dataElement] = style.yellow;\n                                                }\n                                                if (dv.value === ' Completed') {\n                                                    project.style[dv.dataElement] = style.green;\n                                                }\n                                                if (dv.value === 'Cancelled') {\n                                                    project.style[dv.dataElement] = style.grey;\n                                                }\n                                            }\n                                            if (de.code === 'AT_DELAYED' && val !== '') {\n                                                var style = CommonUtils.getFixedTrafficStyle();\n                                                if (dv.value === 'true') {\n                                                    project.style[dv.dataElement] = style.red;\n                                                }\n                                                if (dv.value === 'false') {\n                                                    project.style[dv.dataElement] = style.green;\n                                                }\n                                            }\n                                            project.status[dv.dataElement] = val;\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                        if (tei.relationships && tei.relationships.length > 0) {\n                            project.relationships = [];\n                            angular.forEach(tei.relationships, function (r) {\n                                project.relationships.push(r.to.trackedEntity);\n                            });\n                        }\n                        projects.push(project);\n                    });\n                    return {projects: projects, pager: pager};\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                });\n                return promise;\n            },\n            getKpi: function (ids, optionSets, attributesById, dataElementsById) {\n                var url = DHIS2URL +  '/api/trackedEntityInstances.json?trackedEntityInstance=' + ids + '&fields=*';\n                var promise = $http.get(url).then(function (response) {\n                    var kpis = [];\n                    if (response.data.trackedEntityInstances && response.data.trackedEntityInstances.length > 1) {\n                        angular.forEach(response.data.trackedEntityInstances, function (tei) {\n                            if (tei.enrollments && tei.enrollments[0] && tei.enrollments[0].events) {\n                                var kpi = {};\n                                var events = tei.enrollments[0].events;\n                                events = orderByFilter(events, '-eventDate');\n                                if (events[0] && CommonUtils.userHasReadAccess('ACCESSIBLE_PROGRAM_STAGES', 'programStages', events[0].programStage) ) {\n                                    kpi.eventDate = DateUtils.formatFromApiToUser(events[0].eventDate);\n                                    angular.forEach(events[0].dataValues, function (dv) {\n                                        var de = dataElementsById[dv.dataElement];\n                                        var val = dv.value;\n                                        if (de) {\n                                            val = CommonUtils.formatDataValue(events[0], val, de, optionSets, 'USER');\n                                        }\n                                        kpi[dv.dataElement] = val;\n                                    });\n                                }\n                                kpis.push(kpi);\n                            }\n                        });\n                    }\n                    return kpis;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                });\n                return promise;\n            },\n            getProjectKpi: function (project, ind) {\n                var indVal = 0, numerator = null;\n                var indRegex = /[A#]{\\w+.?\\w*}/g;\n                if (ind.expression) {\n\n                    var expression = angular.copy(ind.expression);\n                    var matcher = expression.match(indRegex);\n\n                    for (var k in matcher)\n                    {\n                        var match = matcher[k];\n\n                        var operand = match.replace(dhis2.metadata.operatorRegex, '');\n\n                        if (!numerator) {\n                            numerator = operand.substring(1, operand.length);\n                        }\n                        var value = project[operand.substring(1, operand.length)];\n\n                        expression = expression.replace(match, value);\n                    }\n                    indVal = eval(expression);\n                    indVal = isNaN(indVal) ? '-' : parseFloat(indVal * 100).toFixed(2) + '%';\n                }\n\n\n                return {value: indVal, numerator: numerator};\n            }\n        };\n    })\n\n    .service('DataValueService', function ($http, CommonUtils) {\n        return {\n            getDataValueSet: function (params) {\n                var promise = $http.get('../api/dataValueSets.json?' + params).then(function (response) {\n                    return response.data;\n                }, function (response) {\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            }\n        };\n    })\n\n    .service('ClusterDataService', function ($q, $filter, $translate, orderByFilter, NotificationService, CommonUtils, Analytics, FinancialDataService) {\n        return {\n            getData: function (params) {\n                if (!params) {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_params\"));\n                    return;\n                }\n\n                if (!params.selectedOrgUnit || !params.selectedOrgUnit.id) {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n                    return;\n                }\n\n                if (!params.selectedCluster || !params.selectedCluster.options || !params.selectedCluster.options.length) {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n                    return;\n                }\n\n                if (!params.selectedFiscalYear) {\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n                    return;\n                }\n\n                var clusterPeriods = [params.selectedFiscalYear];\n                var clusterDataElementGroupSets = [];\n                var clusterGroups = [];\n                angular.forEach(params.selectedCluster.options, function (op) {\n                    var filter = {ndpProgramme: op.code};\n                    var degss = $filter('filter')(params.dataElementGroupSets, filter, true);\n                    angular.forEach(degss, function (degs) {\n                        clusterDataElementGroupSets.push(degs);\n                        angular.forEach(degs.dataElementGroups, function (deg) {\n                            var _deg = $filter('filter')(params.allDataElementGroups, {indicatorGroupType: params.indicatorGroupType, id: deg.id}, true);\n                            if (_deg.length > 0) {\n                                clusterGroups.push(_deg[0]);\n                            }\n                        });\n                    });\n                });\n\n                clusterGroups = orderByFilter(clusterGroups, '-code').reverse();\n                var analyticsUrl = '';\n                if (clusterGroups && clusterGroups.length > 0 && clusterPeriods.length > 0) {\n                    analyticsUrl += '&filter=ou:' + params.selectedOrgUnit.id + '&displayProperty=NAME&includeMetadataDetails=true';\n\n                    if ( params.displayActionBudgetData ){\n                        analyticsUrl += '&dimension=co&dimension=' + params.bsr.category + ':' + $.map(params.budgetSpentReleaseDimensions, function (dm) {\n                            return dm;\n                        }).join(';');\n                    }\n                    else{\n                        analyticsUrl += '&dimension=co&dimension=' + params.bta.category + ':' + $.map(params.baseLineTargetActualDimensions, function (dm) {\n                            return dm;\n                        }).join(';');\n                    }\n\n                    analyticsUrl += '&dimension=pe:' + $.map(clusterPeriods, function (pe) {\n                        return pe.id;\n                    }).join(';');\n\n                    var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n                    var prds = orderByFilter(clusterPeriods, '-id').reverse();\n                    var clusterPerformanceOverviewHeaders = [];\n                    angular.forEach(prds, function (pe) {\n                        angular.forEach(pHeaders, function (p) {\n                            var h = angular.copy(p);\n                            h.period = pe.id;\n                            clusterPerformanceOverviewHeaders.push(h);\n                        });\n                    });\n\n                    var dataElementGroupsById = clusterGroups.reduce(function (map, obj) {\n                        map[obj.id] = obj;\n                        return map;\n                    }, {});\n\n                    var des = [];\n                    angular.forEach(clusterGroups, function (deg) {\n                        des.push('DE_GROUP-' + deg.id);\n                    });\n                    //analyticsUrl += '&dimension=dx:' + des.join(';');\n\n                    var def = $q.defer();\n\n                    var res = {hasClusterData: false};\n                    var clusterData = {};\n                    FinancialDataService.getLocalData('data/cost.json').then(function (cost) {\n                        Analytics.getDataInBatch(analyticsUrl, des).then(function ( response ) {\n                            if (response && response.data && response.metaData) {\n                                res.clusterMetaData = response.metaData;\n                                res.hasClusterData = true;\n\n                                var dataParams = {\n                                    data: response.data,\n                                    metaData: response.metaData,\n                                    reportPeriods: angular.copy(clusterPeriods),\n                                    bta: params.bta,\n                                    actualDimension: params.actualDimension,\n                                    targetDimension: params.targetDimension,\n                                    baselineDimension: params.baselineDimension,\n                                    selectedDataElementGroupSets: clusterDataElementGroupSets,\n                                    selectedDataElementGroup: params.selectedKra,\n                                    dataElementGroups: clusterGroups,\n                                    maxPeriod: clusterPeriods.slice(-1)[0],\n                                    allPeriods: clusterPeriods,\n                                    dataElementGroupsById: dataElementGroupsById,\n                                    dataElementsById: params.dataElementsById,\n                                    cost: cost,\n                                    legendSetsById: params.legendSetsById,\n                                    defaultLegendSet: params.defaultLegendSet,\n                                    performanceOverviewHeaders: clusterPerformanceOverviewHeaders,\n                                    displayActionBudgetData: params.displayActionBudgetData,\n                                    bsr: params.bsr,\n                                    plannedDimension: params.plannedDimension,\n                                    approvedDimension: params.approvedDimension,\n                                    spentDimension: params.spentDimension,\n                                    releaseDimension: params.releaseDimension\n                                };\n\n                                var processedData = Analytics.processData(dataParams);\n                                var clusterColumnId = params.actualDimension.id + '.' + params.selectedFiscalYear.id;\n                                if ( params.displayActionBudgetData ){\n                                    clusterColumnId = params.plannedDimension.id + '.' + params.releaseDimension.id + '.' + params.selectedFiscalYear.id;\n                                }\n\n                                angular.forEach(params.selectedCluster.options, function (op) {\n                                    if ( params.indicatorGroupType === 'output' ){\n                                        op.code = 'OP' + op.code;\n                                    }else if ( params.indicatorGroupType === 'output4action'){\n                                        op.code = 'AC' + op.code;\n                                    }\n                                    var clusterProgramData = $filter('startsWith')(processedData.tableRows, {dataElementCode: op.code});\n                                    if (!clusterData[op.code]) {\n                                        clusterData[op.code] = {size: clusterProgramData.length, A: {value: 0}, M: {value: 0}, N: {value: 0}, X: {value: 0}};\n                                    }\n\n                                    angular.forEach(clusterProgramData, function (cpd) {\n                                        var st = cpd.styles[clusterColumnId];\n                                        if ( st && st.printStyle ){\n                                            if (st.printStyle === 'green-background') {\n                                                clusterData[op.code].A.value += 1;\n                                                clusterData[op.code].A.pcnt = CommonUtils.getPercent(clusterData[op.code].A.value, clusterData[op.code].size, false, true);\n                                            } else if (st.printStyle === 'yellow-background') {\n                                                clusterData[op.code].M.value += 1;\n                                                clusterData[op.code].M.pcnt = CommonUtils.getPercent(clusterData[op.code].M.value, clusterData[op.code].size, false, true);\n                                            } else if (st.printStyle === 'red-background') {\n                                                clusterData[op.code].N.value += 1;\n                                                clusterData[op.code].N.pcnt = CommonUtils.getPercent(clusterData[op.code].N.value, clusterData[op.code].size, false, true);\n                                            } else {\n                                                clusterData[op.code].X.value += 1;\n                                                clusterData[op.code].X.pcnt = CommonUtils.getPercent(clusterData[op.code].X.value, clusterData[op.code].size, false, true);\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                            res.clusterData = clusterData;\n                            res.clusterPerformanceOverviewHeaders = clusterPerformanceOverviewHeaders;\n                            def.resolve(res);\n                        });\n                    });\n                    return def.promise;\n                }\n            }\n        };\n    })\n    .service('DictionaryService', function($http, DHIS2URL, CommonUtils){\n        var processDataElement = function( de, headers, completeness, categoryCombosById ){\n            var cc = categoryCombosById[de.categoryCombo.id];\n            de.disaggregation = !cc || cc.isDefault ? '-' : cc.displayName;\n            var vote = [];\n            var periodType = [];\n\n            for(var i=0; i<de.dataSetElements.length; i++){\n                var ds = de.dataSetElements[i].dataSet;\n                var pt = ds.periodType  === 'FinancialJuly' ? 'Fiscal year' : ds.periodType;\n                if( periodType.indexOf(pt) === -1){\n                    periodType.push(pt);\n                }\n                if( ds.organisationUnits ){\n                    var votes = ds.organisationUnits.map(function(ou){return ou.code;});\n                    angular.forEach(votes, function(v){\n                        if(vote.indexOf(v) === -1){\n                            vote.push(v);\n                        }\n                    });\n                }\n            }\n\n            if( vote && vote.length > 0 ){\n                vote = vote.sort();\n                if ( vote.length > 10 ){\n                    de.orgUnit = vote.slice(0,5);\n                    de.orgUnit.push('...');\n                    de.orgUnit = de.orgUnit.join(', ');\n                }\n                de.vote = vote.join(', ');\n            }\n\n            if( periodType && periodType.length > 0 ){\n                periodType = periodType.sort();\n                de.periodType = periodType.join(', ');\n            }\n\n            if ( de.dataElementGroups && de.dataElementGroups.length > 0 ){\n                de.indicatorGroups = [];\n                angular.forEach(de.dataElementGroups, function(deg){\n                    de.indicatorGroups.push( deg.displayName );\n                    if ( deg.groupSets && deg.groupSets.length > 0 ){\n                        de.indicatorGroupSets = [];\n                        angular.forEach(deg.groupSets, function(gs){\n                            de.indicatorGroupSets.push( gs.displayName );\n\n                            if ( deg.groupSets && deg.groupSets.length > 0 ){\n                                de.indicatorGroupSets = [];\n                            }\n                        });\n                    }\n                });\n            }\n            de = CommonUtils.getDictionaryCompleteness( de, headers, completeness );\n            return de;\n        };\n        return {\n            getDataElements: function( pager, headers, completeness, categoryCombosById, filter, order ){\n                var params = 'fields=id,code,aggregationType,displayName,shortName,description,formName,valueType,optionSetValue,optionSet[id],legendSets[id],attributeValues[value,attribute[id,name,valueType,code]],categoryCombo[id,isDefault],dataElementGroups[id,displayName,attributeValues[value,attribute[id,name,valueType,code]],groupSets[id,displayName,attributeValues[value,attribute[id,name,valueType,code]]]],dataSetElements[dataSet[id,name,periodType,organisationUnits[id,code,displayName]]]';\n                var url = DHIS2URL + '/api/dataElements.json?' + params;\n\n                if ( filter ){\n                    url = DHIS2URL + '/api/dataElements.json?' + 'filter=identifiable:token:' + filter + '&' + params;\n                }\n\n                if ( order ) {\n                    url += '&order=' + order.name + ':' + order.direction;\n                }\n                if ( pager ){\n                    var pgSize = pager.pageSize ? pager.pageSize : 50;\n                    var pg = pager.page ? pager.page : 1;\n                    pgSize = pgSize > 1 ? pgSize  : 1;\n                    pg = pg > 1 ? pg : 1;\n                    url += '&pageSize=' + pgSize + '&page=' + pg + '&totalPages=true';\n                }\n\n                url = encodeURI(url);\n                var promise = $http.get( url ).then(function(response){\n                    if ( response.data && response.data.dataElements ){\n                        var result = {\n                            dataElements: [],\n                            dataElementsById: {},\n                            totalDataElements: 0,\n                            pager: response.data.pager\n                        };\n\n                        var dataElements = response.data.dataElements;\n                        angular.forEach(dataElements, function(de){\n                            var d = processDataElement( de, headers, completeness, categoryCombosById );\n                            result.dataElementsById[de.id] = d;\n                            result.dataElements.push( d );\n                        });\n\n                        result.totalDataElements = result.dataElements.length;\n                    }\n                    return result;\n                }, function(response){\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            },\n            getDataElement: function( id, headers, completeness, categoryCombosById ){\n                var url = DHIS2URL + '/api/dataElements/' + id + '.json?' + 'fields=id,code,aggregationType,displayName,shortName,description,formName,valueType,optionSetValue,optionSet[id],legendSets[id],attributeValues[value,attribute[id,name,valueType,code]],categoryCombo[id,isDefault],dataElementGroups[id,displayName,attributeValues[value,attribute[id,name,valueType,code]],groupSets[id,displayName,attributeValues[value,attribute[id,name,valueType,code]]]],dataSetElements[dataSet[id,name,periodType,organisationUnits[id,code,displayName]]]';\n                url = encodeURI(url);\n                var promise = $http.get( url ).then(function(response){\n                    if ( response && response.data ){\n                        return processDataElement( response.data, headers, completeness, categoryCombosById );\n                    }\n                    return response.data;\n                }, function(response){\n                    CommonUtils.errorNotifier(response);\n                    return response.data;\n                });\n                return promise;\n            }\n        };        \n    });\n\n\n// WEBPACK FOOTER //\n// ./scripts/services.js","'use strict';\n\n/* Filters */\n\nvar ndpFrameworkFilters = angular.module('ndpFrameworkFilters', [])\n\n.filter('fileSize', function(){\n    return function(bytes){\n\n        if(!bytes ){\n            return;\n        }\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        if (bytes === 0) return '0 Byte';\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n    };\n})\n\n.filter('documentFilter', function(){\n    return function(data, folder, programme, programmeDataElement){\n        if(!data ){\n            return;\n        }\n\n        if(!folder){\n            return data;\n        }\n        else{\n            return data.filter(function(item){\n                var f = false, p = true;\n                if( item.folder ) f = item.folder.indexOf(folder) > -1;\n                if( programme && item[programmeDataElement.id] ){\n                    p = item[programmeDataElement.id].indexOf(programme.displayName) > -1;\n                }\n                return f && p;\n            });\n        }\n    };\n})\n\n.filter('dataFilter', function(){\n    return function(data, obj){\n        if(!data ){\n            return;\n        }\n        if(!obj ){\n            return data;\n        }\n        else{\n            return data.filter(function(item){\n                var match = true;\n                for( var k in obj ){\n                    if ( obj[k] ){\n                        match = match && item[k] === obj[k];\n                        if( !match ){\n                            return match;\n                        }\n                    }\n                }\n                return match;\n            });\n        }\n    };\n})\n\n.filter('getFirst', function(){\n    return function(data, obj){\n        if(!data ){\n            return;\n        }\n        if(!obj){\n            return data;\n        }\n        else{\n            var res = data.filter(function(item){\n                var match = true;\n                for( var k in obj ){\n                    match = match && item[k] === obj[k];\n                    if( !match ){\n                        return match;\n                    }\n                }\n                return match;\n            });\n            if(res && res.length > 0){\n                return res[0];\n            }\n            return null;\n        }\n    };\n})\n\n.filter('startsWith', function(){\n    return function(data, obj){\n        if(!data ){\n            return;\n        }\n        if(!obj){\n            return data;\n        }\n        else{\n            return data.filter(function(item){\n                var match = true;\n                for( var k in obj ){\n                    if ( item[k] && obj && obj[k] ){\n                        match = match && item[k].toLowerCase().indexOf(obj[k].toLowerCase()) === 0;\n                    }\n                    if( !match ){\n                        return match;\n                    }\n                }\n                return match;\n            });\n        }\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./scripts/filters.js","/* global directive, selection, dhis2, angular */\n\n'use strict';\n\n/* Directives */\n\nvar ndpFrameworkDirectives = angular.module('ndpFrameworkDirectives', [])\n\n.directive('d2Blur', function () {\n    return function (scope, elem, attrs) {\n        elem.change(function () {\n            scope.$apply(attrs.d2Blur);\n        });\n    };\n})\n\n.directive('equalHeightNavTabs', function ($timeout) {\n    return function (scope, element, attrs) {\n        $timeout(function () {\n            var tabMenus = '.nav.nav-tabs.nav-justified';\n            $(tabMenus).each(function(){\n                $(this).addClass('hideInPrint');\n            });\n\n            var highest = 0;\n            var selector = '.nav-tabs.nav-justified > li > a';\n            $(selector).each(function(){\n                var h = $(this).height();\n                if(h > highest){\n                   highest = $(this).height();\n                }\n            });\n            if( highest > 0 ){\n                $(\".nav-tabs.nav-justified > li > a\").height(highest);\n            }\n        });\n    };\n})\n\n\n.directive('carouselControls', function() {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            scope.goNext = function() {\n                element.isolateScope().next();\n            };\n            scope.goPrev = function() {\n                element.isolateScope().prev();\n            };\n        }\n    };\n})\n\n.directive('d2MultiSelect', function ($q) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        scope: {\n            selectedLabel: \"@\",\n            availableLabel: \"@\",\n            displayAttr: \"@\",\n            available: \"=\",\n            model: \"=ngModel\"\n        },\n        template:   '<div class=\"row\">'+\n                        '<div class=\"col-sm-5\">' +\n                            '<div class=\"select-list-labels\">{{ availableLabel }}</div>' +\n                            '<div><select class=\"multiSelectAvailable\" ng-dblclick=\"add()\" ng-model=\"selected.available\" multiple ng-options=\"e as e[displayAttr] for e in available | filter:filterText | orderBy: \\'id\\'\"></select></div>' +\n                        '</div>' +\n                        '<div class=\"col-sm-2\">' +\n                            '<div class=\"select-list-buttons\">' +\n                                '<button title=\"{{\\'select\\' | translate}}\" class=\"btn btn-primary btn-block\" ng-click=\"add()\" ng-disabled=\"selected.available.length == 0\">' +\n                                    '<i class=\"fa fa-angle-right\"></i>' +\n                                '</button>' +\n                                '<div class=\"small-vertical-spacing\">' +\n                                    '<button title=\"{{\\'select_all\\' | translate}}\" class=\"btn btn-success btn-block\" ng-click=\"addAll()\" ng-disabled=\"available.length == 0\">' +\n                                        '<i class=\"fa fa-angle-double-right\"></i>' +\n                                    '</button>' +\n                                '</div>' +\n                            '</div>' +\n                            '<div class=\"small-vertical-spacing\">' +\n                                '<button title=\"{{\\'remove\\' | translate}}\" class=\"btn btn-warning btn-block\" ng-click=\"remove()\" ng-disabled=\"selected.current.length == 0\">' +\n                                    '<i class=\"fa fa-angle-left\"></i>' +\n                                '</button>' +\n                            '</div>' +\n                            '<div class=\"small-vertical-spacing\">' +\n                                '<button title=\"{{\\'remove_all\\' | translate}}\" class=\"btn btn-danger btn-block\" ng-click=\"removeAll()\" ng-disabled=\"model.length == 0\">' +\n                                    '<i class=\"fa fa-angle-double-left\"></i>' +\n                                '</button>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"col-sm-5\">' +\n                            '<div class=\"select-list-labels\">{{ selectedLabel }}<span class=\"required\">*</span></div>' +\n                            '<div><select class=\"multiSelectSelected\" ng-dblclick=\"remove()\" name=\"multiSelectSelected\" ng-model=\"selected.current\" multiple ng-options=\"e as e[displayAttr] for e in model | orderBy: \\'id\\'\"></select></div>' +\n                        '</div>' +\n                    '</div>',\n        link: function (scope, elm, attrs) {\n            scope.selected = {\n                available: [],\n                current: []\n            };\n\n            // Handles cases where scope data hasn't been initialized yet\n            var dataLoading = function (scopeAttr) {\n                var loading = $q.defer();\n                if (scope[scopeAttr]) {\n                    loading.resolve(scope[scopeAttr]);\n                } else {\n                    scope.$watch(scopeAttr, function (newValue, oldValue) {\n                        if (newValue !== undefined)\n                            loading.resolve(newValue);\n                    });\n                }\n                return loading.promise;\n            };\n\n            // Filters out items in original that are also in toFilter. Compares by reference.\n            var filterOut = function (original, toFilter) {\n                var filtered = [];\n                angular.forEach(original, function (entity) {\n                    var match = false;\n                    for (var i = 0; i < toFilter.length; i++) {\n                        if (toFilter[i][attrs.displayAttr] === entity[attrs.displayAttr]) {\n                            match = true;\n                            break;\n                        }\n                    }\n                    if (!match) {\n                        filtered.push(entity);\n                    }\n                });\n                return filtered;\n            };\n\n            scope.refreshAvailable = function () {\n                scope.available = filterOut(scope.available, scope.model);\n                scope.selected.available = [];\n                scope.selected.current = [];\n            };\n\n            scope.add = function () {\n                scope.model = scope.model.concat(scope.selected.available);\n                scope.refreshAvailable();\n            };\n\n            scope.addAll = function() {\n                scope.model = scope.model.concat( scope.available );\n                scope.refreshAvailable();\n            };\n\n            scope.remove = function () {\n                scope.available = scope.available.concat(scope.selected.current);\n                scope.model = filterOut(scope.model, scope.selected.current);\n                scope.refreshAvailable();\n            };\n\n            scope.removeAll = function() {\n                scope.available = scope.available.concat(scope.model);\n                scope.model = [];\n                scope.refreshAvailable();\n            };\n\n            $q.all([dataLoading(\"model\"), dataLoading(\"available\")]).then(function (results) {\n                scope.refreshAvailable();\n            });\n        }\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./scripts/directives.js","/* global angular */\n\n'use strict';\n\n/* Controllers */\nvar ndpFrameworkControllers = angular.module('ndpFrameworkControllers', []);\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/controllers.js","/* Controllers */\n\n/* global ndpFramework, dhis2 */\n\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('ActionOutputController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        DateUtils,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        ResulstChainService,\n        CommonUtils,\n        DataValueService,\n        ClusterDataService,\n        Analytics) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        dataElementsById: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        objectives: [],\n        ndpObjectives: [],\n        ndpProgrammes: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedSubProgramme: null,\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n//        selectedPeriodType: 'FinancialJuly',\n        selectedPeriodType: 'Yearly',\n        explanations: [],\n        commentRow: {}\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'financialPerformance', title: 'financial_performance', order: 1, view: 'components/action/financial-performance.html', active: true, class: 'main-horizontal-menu'},\n        //{id: 'clusterPerformance', title: 'cluster_performance', order: 2, view: 'components/action/cluster-performance.html', class: 'main-horizontal-menu'},\n//        {id: 'clusterPerformance', title: 'cluster_performance', order: 2, view: 'views/cluster/cluster-performance.html', class: 'main-horizontal-menu'},\n        {id: 'completeness', title: 'completeness', order: 2, view: 'components/action/completeness.html', class: 'main-horizontal-menu'}\n    ];\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.getOutputs = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'output4action', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n//                $scope.model.subProgrammes = $filter('startsWith')($scope.model.subProgrammes, {code: $scope.model.selectedNdpProgram.code});\n//                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedNdpProgram.code});\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedNdpProgram.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedSubProgramme', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedSubProgramme) ){\n            if( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n//                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedSubProgramme.code});\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedSubProgramme.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedObjective) ){\n            if( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedObjective.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedCluster', function(){\n        $scope.resetDataView();\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    dhis2.ndp.downloadGroupSets( 'sub-intervention4action' ).then(function(){\n\n        MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n            /*angular.forEach(legendSets, function(legendSet){\n                if ( legendSet.isTrafficLight ){\n                    $scope.model.defaultLegendSet = legendSet;\n                }\n                $scope.model.legendSetsById[legendSet.id] = legendSet;\n            });*/\n\n            MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                $scope.model.optionSets = optionSets;\n\n                angular.forEach(optionSets, function(optionSet){\n                    $scope.model.optionSetsById[optionSet.id] = optionSet;\n                });\n\n                $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                    return;\n                }\n\n                $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n                if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n                    return;\n                }\n\n                ResulstChainService.getByOptionSet( $scope.model.piapResultsChain.id ).then(function(chain){\n                    $scope.model.resultsFrameworkChain = chain;\n                    $scope.model.ndpProgrammes = $scope.model.resultsFrameworkChain.programs;\n                    $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n                    $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n                    $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n\n                    MetaDataFactory.getAll('optionGroupSets').then(function(optionGroupSets){\n\n                        $scope.model.optionGroupSets = optionGroupSets;\n\n                        OptionComboService.getBtaDimensions().then(function( btaResponse ){\n\n                            if( !btaResponse || !btaResponse.bta || !btaResponse.baseline || !btaResponse.actual || !btaResponse.target ){\n                                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                                return;\n                            }\n\n                            $scope.model.bta = btaResponse.bta;\n                            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                            $scope.model.actualDimension = btaResponse.actual;\n                            $scope.model.targetDimension = btaResponse.target;\n                            $scope.model.baselineDimension = btaResponse.baseline;\n\n                            OptionComboService.getBsrDimensions().then(function( bsrResponse ){\n\n                                if( !bsrResponse || !bsrResponse.bsr || !bsrResponse.planned || !bsrResponse.approved || !bsrResponse.spent || !bsrResponse.release ){\n                                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bsr_dimensions\"));\n                                    return;\n                                }\n\n                                $scope.model.bsr = bsrResponse.bsr;\n                                $scope.model.budgetSpentReleaseDimensions = $.map($scope.model.bsr.options, function(d){return d.id;});\n                                $scope.model.plannedDimension = bsrResponse.planned;\n                                $scope.model.approvedDimension = bsrResponse.approved;\n                                $scope.model.spentDimension = bsrResponse.spent;\n                                $scope.model.releaseDimension = bsrResponse.release;\n\n                                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                                    $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                                        map[obj.id] = obj;\n                                        return map;\n                                    }, {});\n\n                                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                                        $scope.model.dataElementGroups = dataElementGroups;\n\n                                        MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-intervention4action').then(function(dataElementGroupSets){\n                                            $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                                            var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                            periods = periods.reverse();\n                                            $scope.model.allPeriods = angular.copy( periods );\n                                            $scope.model.periods = periods;\n\n//                                            var selectedPeriodNames = ['2020/21'];\n                                            var selectedPeriodNames = ['2023'];\n                                            var today = DateUtils.getToday();\n//                                            $scope.model.selectedFiscalYear = '';\n                                            angular.forEach($scope.model.periods, function(pe){\n                                                if ( pe.startDate <= today && pe.endDate <= today ){\n                                                    $scope.model.selectedFiscalYear = pe;\n                                                }\n                                            });\n\n                                            if ( $scope.model.selectedFiscalYear ){\n                                                selectedPeriodNames = [$scope.model.selectedFiscalYear.name];\n                                            }\n\n                                            angular.forEach($scope.model.periods, function(pe){\n                                                if(selectedPeriodNames.indexOf(pe.name) > -1 ){\n                                                   $scope.model.selectedPeriods.push(pe);\n                                                }\n                                            });\n\n                                            $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                                            $scope.model.metaDataCached = true;\n                                            $scope.populateMenu();\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedNdpProgram = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n        }\n\n//        var sectorsOpgs = $filter('getFirst')($scope.model.optionGroupSets, {code: $scope.model.selectedMenu.ndp + '_CLUSTER'});\n//\n//        $scope.model.clusters = sectorsOpgs && sectorsOpgs.optionGroups ? sectorsOpgs.optionGroups : [];\n//        if( !$scope.model.clusters || !$scope.model.clusters.length || !$scope.model.clusters.length === 0 ){\n//            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_configuration\"));\n//            return;\n//        }\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.periods = $scope.model.periods.reverse();\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        var selectedResultsLevel = $scope.model.selectedNdpProgram.code;\n\n//        if ( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n//            selectedResultsLevel = $scope.model.selectedSubProgramme.code;\n//        }\n//\n//        if ( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n//            selectedResultsLevel = $scope.model.selectedObjective.code;\n//        }\n\n//        if ( $scope.model.selectedIntervention && $scope.model.selectedIntervention.code ){\n//            selectedResultsLevel = $scope.model.selectedIntervention.code;\n//        }\n\n        $scope.model.selectedDataElementGroupSets = $filter('startsWith')($scope.model.dataElementGroupSets, {code: 'SA' + selectedResultsLevel});\n        $scope.getOutputs();\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_output\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bsr.category + ':' + $.map($scope.model.budgetSpentReleaseDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                map[obj.id] = obj;\n                return map;\n            }, {});\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            Analytics.getData( analyticsUrl ).then(function(data){\n                if( data && data.data && data.metaData ){\n                    $scope.model.data = data.data;\n                    $scope.model.metaData = data.metaData;\n                    $scope.model.reportReady = true;\n                    $scope.model.reportStarted = false;\n\n                    var dataParams = {\n                        data: data.data,\n                        metaData: data.metaData,\n                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                        bta: $scope.model.bta,\n                        actualDimension: $scope.model.actualDimension,\n                        targetDimension: $scope.model.targetDimension,\n                        baselineDimension: $scope.model.baselineDimension,\n                        bsr: $scope.model.bsr,\n                        plannedDimension: $scope.model.plannedDimension,\n                        approvedDimension: $scope.model.approvedDimension,\n                        spentDimension: $scope.model.spentDimension,\n                        releaseDimension: $scope.model.releaseDimension,\n                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                        selectedDataElementGroup: $scope.model.selectedKra,\n                        dataElementGroups: $scope.model.dataElementGroups,\n                        basePeriod: $scope.model.basePeriod,\n                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                        allPeriods: $scope.model.allPeriods,\n                        dataElementGroupsById: $scope.model.dataElementGroupsById,\n                        dataElementsById: $scope.model.dataElementsById,\n                        legendSetsById: $scope.model.legendSetsById,\n                        defaultLegendSet: $scope.model.defaultLegendSet,\n                        displayActionBudgetData: true\n                    };\n\n                    var processedData = Analytics.processData( dataParams );\n\n                    $scope.model.dataHeaders = processedData.dataHeaders;\n                    $scope.model.reportPeriods = processedData.reportPeriods;\n                    $scope.model.dataExists = processedData.dataExists;\n                    $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                    $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                    $scope.model.numerator = processedData.completenessNum;\n                    $scope.model.denominator = processedData.completenessDen;\n                    $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                    $scope.model.tableRows = [];\n                    $scope.model.povTableRows = processedData.povTableRows;\n\n                    angular.forEach(processedData.tableRows, function(row){\n                        angular.forEach($scope.model.dataHeaders, function(dh){\n                            if ( !dh.isRowData ){\n                                if( !row.values || !dh || !dh.denDimensionId || !dh.periodId ){\n                                    return;\n                                }\n                                var num = row.values[dh.numDimensionId + '.' + dh.periodId];\n                                var den = row.values[dh.denDimensionId + '.' + dh.periodId];\n                                var percent = CommonUtils.getPercent(num, den, true, true);\n                                row.values[dh.dimensionId + '.' + dh.periodId] = percent;\n                                row.styles[dh.dimensionId + '.' + dh.periodId] = CommonUtils.getTrafficColorForValue( percent );\n                            }\n                        });\n                        $scope.model.tableRows.push( row );\n                    });\n                }\n            });\n        }\n    };\n\n    $scope.getClusterData = function(){\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n            return;\n        }\n\n        if( !$scope.model.selectedFiscalYear ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n            return;\n        }\n\n        $scope.model.clusterReportReady = false;\n        $scope.model.clusterReportStarted = true;\n        $scope.model.reportReady = false;\n        $scope.model.reportStarted = true;\n\n        dhis2.ndp.downloadGroupSets( 'sub-intervention4action' ).then(function(){\n\n            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                    map[obj.id] = obj;\n                    return map;\n                }, {});\n\n                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                    $scope.model.allDataElementGroups = dataElementGroups;\n                    $scope.model.dataElementGroups = dataElementGroups;\n\n                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-intervention4action').then(function(dataElementGroupSets){\n                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                        $scope.model.metaDataCached = true;\n\n                        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n                            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n                        }\n\n                        $scope.model.selectedDataElementGroupSets = angular.copy($scope.model.dataElementGroupSets);\n                        $scope.getOutputs();\n\n                        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n                            return;\n                        }\n\n                        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n                            return;\n                        }\n\n                        if( !$scope.model.selectedFiscalYear ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n                            return;\n                        }\n\n                        var params = {\n                            indicatorGroupType: 'output4action',\n                            selectedOrgUnit: $scope.selectedOrgUnit,\n                            selectedCluster: $scope.model.selectedCluster,\n                            selectedFiscalYear: $scope.model.selectedFiscalYear,\n                            allDataElementGroups: $scope.model.allDataElementGroups,\n                            dataElementGroupSets: $scope.model.dataElementGroupSets,\n                            bta: $scope.model.bta,\n                            baseLineTargetActualDimensions: $scope.model.baseLineTargetActualDimensions,\n                            actualDimension: $scope.model.actualDimension,\n                            targetDimension: $scope.model.targetDimension,\n                            baselineDimension: $scope.model.baselineDimension,\n                            selectedDataElementGroupSets: $scope.model.clusterDataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementsById: $scope.model.dataElementsById,\n                            legendSetsById: $scope.model.legendSetsById,\n                            defaultLegendSet: $scope.model.defaultLegendSet,\n                            bsr: $scope.model.bsr,\n                            budgetSpentReleaseDimensions: $scope.model.budgetSpentReleaseDimensions,\n                            plannedDimension: $scope.model.plannedDimension,\n                            approvedDimension: $scope.model.approvedDimension,\n                            spentDimension: $scope.model.spentDimension,\n                            releaseDimension: $scope.model.releaseDimension,\n                            displayActionBudgetData: true\n                        };\n\n                        ClusterDataService.getData( params ).then(function(result){\n                            $scope.model.clusterReportReady = true;\n                            $scope.model.clusterReportStarted = false;\n                            $scope.model.reportReady = true;\n                            $scope.model.reportStarted = false;\n                            $scope.model.clusterData = result.clusterData;\n                            $scope.model.hasClusterData = result.hasClusterData;\n                            $scope.model.clusterPerformanceOverviewHeaders = result.clusterPerformanceOverviewHeaders;\n                        });\n                    });\n                });\n            });\n        });\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - action\";\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n                $scope.resetTheView = function(menu, $event) {\n                        $scope.model.horizontalMenus.forEach(function(m) {\n                          m.active = false;\n                        });\n\n                        menu.active = true;\n\n                        $scope.currentView = menu.view;\n                      };\n\n});\n\n\n// WEBPACK FOOTER //\n// ./components/action/action-output-controller.js","/* Controllers */\n\n/* global ndpFramework */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('ClusterController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        Analytics,\n        CommonUtils,\n        DataValueService,\n        FinancialDataService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        dataElementsById: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        ndpProgrammes: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        performanceOverviewHeaders: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        displayProjectOutputs: true,\n        displayDepartmentOutPuts: true,\n        explanations: [],\n        commentRow: {},\n        clusters: []\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'target', title: 'targets', order: 1, view: 'components/outcome/results.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/outcome/physical-performance.html', class: 'main-horizontal-menu'},\n        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/outcome/performance-overview.html', class: 'main-horizontal-menu'},\n        {id: 'clusterPerformance', title: 'cluster_performance', order: 4, view: 'components/outcome/cluster-performance.html', class: 'main-horizontal-menu'},\n        {id: 'completeness', title: 'completeness', order: 5, view: 'components/outcome/completeness.html', class: 'main-horizontal-menu'}\n    ];\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.getOutcomes = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'outcome', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    $scope.$on('MENU', function(){\n        //$scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.resetDataView();\n        $scope.model.objectives = [];\n        $scope.model.selectedDataElementGroupSets = [];\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                var filter = {ndpProgramme: $scope.model.selectedNdpProgram.code};\n                $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, filter, true);\n                $scope.getOutcomes();\n            }\n        }\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    dhis2.ndp.downloadGroupSets( 'objective' ).then(function(){\n\n        MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n            /*angular.forEach(legendSets, function(legendSet){\n                if ( legendSet.isTrafficLight ){\n                    $scope.model.defaultLegendSet = legendSet;\n                }\n                $scope.model.legendSetsById[legendSet.id] = legendSet;\n            });*/\n\n            MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                $scope.model.optionSets = optionSets;\n\n                angular.forEach(optionSets, function(optionSet){\n                    $scope.model.optionSetsById[optionSet.id] = optionSet;\n                });\n\n                $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                    return;\n                }\n\n                OptionComboService.getBtaDimensions().then(function( response ){\n\n                    if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                        NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                        return;\n                    }\n\n                    $scope.model.bta = response.bta;\n                    $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                    $scope.model.actualDimension = response.actual;\n                    $scope.model.targetDimension = response.target;\n                    $scope.model.baselineDimension = response.baseline;\n \n                    MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                        $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                            map[obj.id] = obj;\n                            return map;\n                        }, {});\n\n                        MetaDataFactory.getAll('optionGroupSets').then(function(optionGroupSets){\n                            \n                            $scope.model.optionGroupSets = optionGroupSets;\n\n                            MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                                $scope.model.allDataElementGroups = dataElementGroups;\n                                $scope.model.dataElementGroups = dataElementGroups;\n\n                                MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'objective').then(function(dataElementGroupSets){\n                                    $scope.model.dataElementGroupSets = dataElementGroupSets;\n                                    $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, ['-code', '-displayName']).reverse();\n\n                                    var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                    $scope.model.allPeriods = angular.copy( periods );\n                                    $scope.model.periods = periods;\n\n                                    var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                                    angular.forEach($scope.model.periods, function(pe){\n                                        if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                            $scope.model.selectedPeriods.push(pe);\n                                        }\n                                    });\n\n                                    $scope.model.metaDataCached = true;\n                                    $scope.populateMenu();\n                                    $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                                });\n                            });                            \n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedNdpProgram = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            var prs = $filter('filter')($scope.model.optionSets, {ndp: $scope.model.selectedMenu.ndp, isNDPProgramme: true}, true);\n            if ( !prs || prs.length !== 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_program_config\") + ' - ' + $scope.model.selectedMenu.ndp );\n                return;\n            }\n            else{\n                $scope.model.ndpProgram = prs[0];\n            }\n\n            var sectorsOpgs = $filter('getFirst')($scope.model.optionGroupSets, {code: $scope.model.selectedMenu.ndp + '_CLUSTER'});\n            \n            $scope.model.clusters = sectorsOpgs && sectorsOpgs.optionGroups ? sectorsOpgs.optionGroups : [];\n//            if( !$scope.model.clusters || !$scope.model.clusters.length || !$scope.model.clusters.length === 0 ){\n//                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_configuration\"));\n//                return;\n//            }\n        }\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getClusterData = function(){\n        $scope.model.clusterReportReady = true;\n        $scope.model.hasClusterData = true;\n        var clusterOutcomes = [];\n        angular.forEach($scope.model.selectedCluster.options, function(op){\n            var filter = {ndpProgramme: op.code};\n            var degss = $filter('filter')($scope.model.dataElementGroupSets, filter, true);\n            angular.forEach(degss, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.allDataElementGroups, {indicatorGroupType: 'outcome', id: deg.id}, true);\n                    if ( _deg.length > 0 ){\n                        clusterOutcomes.push( _deg[0] );\n                    }\n                });\n            });\n        });\n        \n        clusterOutcomes = orderByFilter( clusterOutcomes, '-code').reverse();\n        console.log('clusterOutcomes:  ', clusterOutcomes);\n    };\n    \n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - objectives\";\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n    \n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/cluster/cluster-controller.js","/* global angular, dhis2, ndpFramework */\n\n'use strict';\n\nvar ndpFramework = angular.module('ndpFramework');\n\n//Controller for settings page\nndpFramework.controller('CompletenessController',\n        function($scope,\n                $modal,\n                $filter,\n                $translate,\n                orderByFilter,\n                PeriodService,\n                OrgUnitFactory,\n                MetaDataFactory,\n                NotificationService,\n                OptionComboService,\n                CommonUtils,\n                Analytics) {\n\n    $scope.model = {\n        metaDataCached: false,\n        dataElementGroups: [],\n        dataElementGroupSets: [],\n        optionSets: [],\n        optionSetsById: [],\n        objectives: [],\n        ndp: null,\n        programs: [],\n        selectedNdp: null,\n        selectedProgram: null,\n        periods: [],\n        selectedPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly'\n    };\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.$watch('model.selectedNDP', function(){\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.model.dataElementGroup = [];\n        $scope.model.selectedProgram = null;\n        $scope.model.objectives = [];\n        if( angular.isObject($scope.model.selectedNDP) && $scope.model.selectedNDP.id && $scope.model.selectedNDP.code){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedNDP.code, indicatorGroupSetType: 'program'}, true);\n            $scope.model.ndpProgram = $filter('filter')($scope.model.optionSets, {ndp: $scope.model.selectedNDP.code, isNDPProgramme: true}, true)[0];\n        }\n    });\n\n    $scope.$watch('model.selectedProgram', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.model.objectives = [];\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedProgram) && $scope.model.selectedProgram.code){\n            $scope.model.objectives = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedNDP.code, indicatorGroupSetType: 'objective', ndpProgramme: $scope.model.selectedProgram.code}, true);\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.objectives );\n            angular.forEach($scope.model.objectives, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedObjective) && $scope.model.selectedObjective.id){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedObjective.id});\n            angular.forEach($scope.model.selectedObjective.dataElementGroups, function(deg){\n                $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n            });\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.objectives );\n            angular.forEach($scope.model.objectives, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    dhis2.ndp.downloadGroupSets( 'objective' ).then(function(){\n\n        MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n            $scope.model.optionSets = optionSets;\n\n            angular.forEach(optionSets, function(optionSet){\n                $scope.model.optionSetsById[optionSet.id] = optionSet;\n            });\n\n\n            OptionComboService.getBtaDimensions().then(function( bta ){\n\n                if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                    return;\n                }\n\n                $scope.model.bta = bta;\n                $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n\n                MetaDataFactory.getAll('dataElementGroupSets').then(function( dataElementGroupSets ){\n                    $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n                        $scope.model.dataElementGroups = dataElementGroups;\n\n                        $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n\n                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                        angular.forEach($scope.model.periods, function(pe){\n                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                               $scope.model.selectedPeriods.push(pe);\n                            }\n                        });\n\n                        $scope.model.ndp = $filter('filter')($scope.model.optionSets, {code: 'ndp'})[0];\n                    });\n                });\n            });\n        });\n    }, function(){\n        console.log('error');\n    });\n\n    $scope.getPeriods = function(mode){\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getCompleteness = function(){\n\n        if( !$scope.model.selectedNDP ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp\"));\n            return;\n        }\n\n        if( !$scope.model.selectedProgram ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_programme\"));\n            return;\n        }\n\n        if( !$scope.model.dataElementGroup || $scope.model.dataElementGroup.length === 0 ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"program_missing_objective\"));\n            return;\n        }\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.selectedPeriods || !$scope.model.selectedPeriods.length === 0 ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_period\"));\n            return;\n        }\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n        analyticsUrl += '&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n        analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n        var des = [];\n        angular.forEach($scope.model.dataElementGroup, function(deg){\n            angular.forEach(deg.dataElements, function(de){\n                des.push( de.id );\n            });\n        });\n\n        analyticsUrl += '&dimension=dx:' + des.join(';');\n\n        Analytics.getData( analyticsUrl ).then(function(data){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            $scope.model.data = data.data;\n            $scope.model.metaData = data.metaData;\n            $scope.model.reportReady = true;\n            $scope.model.reportStarted = false;\n            $scope.model.dataHeaders = [];\n            angular.forEach($scope.model.selectedPeriods, function(pe){\n                var colSpan = 0;\n                var d = $filter('filter')($scope.model.data, {pe: pe.id});\n                pe.hasData = d && d.length > 0;\n                angular.forEach($scope.model.baseLineTargetActualDimensions, function(dm){\n                    var filterParams = {pe: pe.id};\n                    filterParams[$scope.model.bta.category] = dm;\n                    var d = $filter('dataFilter')($scope.model.data, filterParams);\n                    if( d && d.length > 0 ){\n                        colSpan++;\n                        $scope.model.dataHeaders.push({periodId: pe.id, dimensionId: dm, dimension: $scope.model.bta.category});\n                    }\n                });\n                pe.colSpan = colSpan;\n            });\n\n            if( Object.keys( $scope.model.data ).length === 0 ){\n                $scope.model.dataExists = false;\n                return;\n            }\n            else{\n                $scope.model.dataExists = true;\n                $scope.model.numerator = 0;\n                $scope.model.denominator = 0;\n                angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                    degs.expected = {};\n                    degs.available = {};\n                    angular.forEach(degs.dataElementGroups, function(deg){\n                        var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0];\n                        angular.forEach(_deg.dataElements, function(de){\n                            angular.forEach($scope.model.dataHeaders, function(dh){\n                                var id = [dh.periodId, dh.dimensionId].join('-');\n                                if ( !degs.available[id] ){\n                                    degs.available[id] = 0;\n                                }\n                                if ( !degs.expected[id] ){\n                                    degs.expected[id] = 0;\n                                }\n\n                                degs.expected[id]++;\n                                $scope.model.denominator++;\n                                if( $scope.valueExists(dh, de.id) ){\n                                    degs.available[id]++;\n                                    $scope.model.numerator++;\n                                }\n                            });\n                        });\n                    });\n                });\n            }\n        });\n    };\n\n    $scope.valueExists = function(header, dataElement){\n        if(!header || !$scope.model.data || !header.periodId || !header.dimensionId || !dataElement) {\n            return false;\n        }\n        var filterParams = {\n            dx: dataElement,\n            pe: header.periodId\n        };\n\n        filterParams[$scope.model.bta.category] = header.dimensionId;\n        var res = $filter('dataFilter')($scope.model.data, filterParams)[0];\n        return res && res.value ? true : false;\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = \"Completeness\" + \" .xls\";\n        if( name ){\n            reportName = name + ' completeness.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/completeness/completeness-controller.js","/* global angular, dhis2, ndpFramework */\n\n'use strict';\n\nvar ndpFramework = angular.module('ndpFramework');\n\n\n//Controller for settings page\nndpFramework.controller('DictionaryController',\n        function($scope,\n                $modal,\n                $filter,\n                $translate,\n                Paginator,\n                NotificationService,\n                SessionStorageService,\n                SelectedMenuService,\n                MetaDataFactory,\n                DictionaryService) {\n\n    $scope.model = {\n        data: null,\n        dataElements: [],\n        dataElementsById: [],\n        dataElementGroups: [],\n        dataElementGroupSets: [],\n        selectedDataElementGroups: [],\n        selectedDataElementGroupSets: [],\n        classificationGroupSets: [],\n        classificationGroups: [],\n        classificationDataElements: [],\n        baseLineTargetActualDimensions: [],\n        dataSetsById: {},\n        categoryCombosById: {},\n        optionSets: [],\n        optionSetsById: [],\n        dictionaryItems: [],\n        attributes: [],\n        selectedPeriodType: 'FinancialJuly',\n        selectedDataElementGroup: null,\n        selectedDictionary: null,\n        dictionaryHeaders: [],\n        ndp: null,\n        ndpProgram: null,\n        selectedNDP: null,\n        selectedProgram: null,\n        groupSetSize: {},\n        financialPerformance: true,\n        showProjectDetails: false,\n        classificationGroup: null,\n        completeness: {\n            green: ['displayName', 'code', 'periodType', 'computationMethod', 'indicatorType', 'preferredDataSource', 'rationale', 'responsibilityForIndicator', 'unit'],\n            yellow: ['displayName', 'code', 'accountabilityForIndicator', 'computationMethod', 'preferredDataSource', 'unit'],\n            invalid: ['isProgrammeDocument', 'isDocumentFolder']\n        }\n    };\n\n    //Paging\n    $scope.pager = {pageSize: 50, page: 1, toolBarDisplay: 5};\n\n//    $scope.model.horizontalMenus = [\n//        {id: 'default', title: 'ndp_indicator', order: 1, view: 'components/dictionary/default.html', active: true, class: 'main-horizontal-menu'},\n//        {id: 'classification', title: 'indicator_classification', order: 2, view: 'components/dictionary/classification.html', class: 'main-horizontal-menu'}\n//    ];\n//\n    $scope.model.horizontalMenus = [\n            {id: 'default', title: 'ndp_indicator', order: 1, view: 'components/dictionary/default.html', active: true, class: 'main-horizontal-menu'}\n        ];\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n    $scope.populateMenu = function(){\n        $scope.resetView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n    };\n\n    $scope.getDataElementGroupSetsForNdp = function(){\n        $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n        if( angular.isObject($scope.model.selectedNDP) && $scope.model.selectedNDP.code){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedNDP.code}, true);\n            $scope.model.ndpProgram = $filter('filter')($scope.model.optionSets, {ndp: $scope.model.selectedNDP.code, isNDPProgramme: true}, true)[0];\n        }\n\n        $scope.model.selectedDataElementGroups = [];\n\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                $scope.model.selectedDataElementGroups.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n            });\n        });\n    };\n\n    $scope.getSelectedDataElementGroups = function(){\n        $scope.model.dataElements = [];\n        var available = [];\n        angular.forEach($scope.model.selectedDataElementGroups, function(deg){\n            angular.forEach(deg.dataElements, function(de){\n                var _de = $scope.model.dataElementsById[de.id];\n                if( _de && available.indexOf(de.id) === -1 ){\n                    $scope.model.dataElements.push( _de );\n                    available.push( de.id );\n                }\n            });\n        });\n    };\n\n    $scope.$watch('model.selectedProgram', function(){\n        $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n        $scope.model.selectedDataElementGroups = angular.copy( $scope.model.dataElementGroups );\n        if( angular.isObject($scope.model.selectedProgram) && $scope.model.selectedProgram.code){\n            $scope.model.selectedDataElementGroups = [];\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedNDP.code, ndpProgramme: $scope.model.selectedProgram.code}, true);\n\n            angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.selectedDataElementGroups.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n\n        $scope.getSelectedDataElementGroups();\n    });\n\n    $scope.$watch('model.selectedClassification', function(){\n\n        $scope.model.classificationGroups = angular.copy( $scope.model.dataElementGroups );\n\n        if ( angular.isObject( $scope.model.selectedClassification ) && $scope.model.selectedClassification.id ){\n            $scope.model.classificationGroups = [];\n            var _deg = $filter('filter')($scope.model.dataElementGroups, {id: $scope.model.selectedClassification.id});\n            if (_deg && _deg.length > 0){\n                $scope.model.classificationGroups.push( _deg[0] );\n            }\n        }\n        else{\n            $scope.model.classificationGroups = [];\n            $scope.model.classificationGroupSets = angular.copy( [$scope.model.classificationGroup] );\n            if ( $scope.model.classificationGroup && $scope.model.classificationGroup.dataElementGroups ){\n                angular.forEach($scope.model.classificationGroup.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                    if (_deg && _deg.length > 0){\n                        $scope.model.classificationGroups.push( _deg[0] );\n                    }\n                });\n            }\n        }\n        //$scope.getClassificationGroups();\n    });\n    \n    $scope.fetchIndicators = function(){\n        $scope.model.reportReady = false;\n        $scope.model.reportStarted = true;\n        $scope.model.dataElements = [];\n        $scope.model.totalDataElements = 0;\n        DictionaryService.getDataElements( $scope.pager, $scope.model.dictionaryHeaders, $scope.model.completeness, $scope.model.categoryCombosById, $scope.model.filterText, $scope.sortHeader ).then(function( response ){\n            if ( response && response.dataElements ){\n                $scope.model.dataElementsById = response.dataElementsById;\n                $scope.model.dataElements = response.dataElements;\n                $scope.model.totalDataElements = response.totalDataElements;\n            }\n\n            console.log(\"++++++++++++++++++ $scope.model.dataElements : \",$scope.model.dataElements)\n\n            if ( response.pager ){\n                response.pager.pageSize = response.pager.pageSize ? response.pager.pageSize : $scope.pager.pageSize;\n                $scope.pager = response.pager;\n                $scope.pager.toolBarDisplay = 5;\n\n                Paginator.setPage($scope.pager.page);\n                Paginator.setPageCount($scope.pager.pageCount);\n                Paginator.setPageSize($scope.pager.pageSize);\n                Paginator.setItemCount($scope.pager.total);                \n                $scope.model.totalDataElements = $scope.pager.total;\n            }\n            $scope.model.reportReady = true;\n            $scope.model.reportStarted = false;\n        });\n    };\n\n    dhis2.ndp.downloadMetaData().then(function(){\n        SessionStorageService.set('METADATA_CACHED', true);\n        \n        MetaDataFactory.getAll('attributes').then(function(attributes){\n\n            $scope.model.attributes = attributes;\n\n            MetaDataFactory.getAll('categoryCombos').then(function(categoryCombos){\n                angular.forEach(categoryCombos, function(cc){\n                    $scope.model.categoryCombosById[cc.id] = cc;\n                });\n\n                MetaDataFactory.getAll('optionSets').then(function(optionSets){\n                    $scope.model.optionSets = optionSets;\n                    angular.forEach(optionSets, function(optionSet){\n                        $scope.model.optionSetsById[optionSet.id] = optionSet;\n                    });\n\n                    $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                    if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                        NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                        return;\n                    }\n\n                    $scope.model.ndpProgram = $filter('filter')(optionSets, {code: 'ndpIIIProgram'})[0];\n                    \n                    $scope.sortHeader = {id: 'displayName', name: 'name', colSize: \"col-sm-1\", show: true, fetch: false, direction: 'asc'};\n                    $scope.model.dictionaryHeaders = [\n                        {id: 'displayName', name: 'name', colSize: \"col-sm-1\", show: true, fetch: false, sortable: true, direction: 'asc'},\n                        {id: 'code', name: 'code', colSize: \"col-sm-1\", show: true, fetch: false, sortable: true},\n                        {id: 'aggregationType', name: 'aggregationType', colSize: \"col-sm-1\", show: true, fetch: false, direction: 'asc'},\n                        {id: 'disaggregation', name: 'disaggregation', colSize: \"col-sm-1\", show: true, fetch: false},\n                        {id: 'valueType', name: 'valueType', colSize: \"col-sm-1\", show: true, fetch: false},\n                        {id: 'periodType', name: 'frequency', colSize: \"col-sm-1\", show: true, fetch: false},\n                        {id: 'vote', name: 'vote', colSize: 'col-sm-1', show: true, fetch: false}\n                    ];\n\n//                    angular.forEach($scope.model.attributes, function(att){\n//                        if(att['dataElementAttribute'] && $scope.model.completeness.invalid.indexOf(att.code) === -1 ){\n//                            var header = {id: att.code, name: att.name, show: false, fetch: true, colSize: \"col-sm-1\"};\n//                            $scope.model.dictionaryHeaders.push(header);\n//                        }\n//                    });\n\n                    $scope.populateMenu();\n                    $scope.fetchIndicators();\n                });\n            });\n        });\n    });\n\n    $scope.jumpToPage = function(){\n        if($scope.pager && $scope.pager.page && $scope.pager.pageCount && $scope.pager.page > $scope.pager.pageCount){\n            $scope.pager.page = $scope.pager.pageCount;\n        }\n        $scope.fetchIndicators();\n    };\n\n    $scope.resetPageSize = function(){\n        $scope.pager.page = 1;\n        $scope.fetchIndicators();\n    };\n\n    $scope.getPage = function(page){\n        $scope.pager.page = page;\n        $scope.fetchIndicators();\n    };\n\n    $scope.sortItems = function(header){\n        if ( $scope.sortHeader && $scope.sortHeader.id === header.id ){\n            if ( $scope.sortHeader.direction  === 'desc' ){\n                $scope.sortHeader.direction = 'asc';\n            }\n            else{\n                $scope.sortHeader.direction = 'desc';\n            }\n        }\n        else{\n            $scope.sortHeader = header;\n            $scope.sortHeader.direction = 'asc';\n        }\n        $scope.fetchIndicators();\n    };\n\n    $scope.filterIndicators = function(){\n        $scope.fetchIndicators();\n    };\n\n    $scope.showDetails = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return true;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n        });\n    };\n\n    $scope.showHideColumns = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'views/column-modal.html',\n            controller: 'ColumnDisplayController',\n            resolve: {\n                gridColumns: function () {\n                    return $scope.model.dictionaryHeaders;\n                },\n                hiddenGridColumns: function(){\n                    return ($filter('filter')($scope.model.dictionaryHeaders, {show: false})).length;\n                }\n            }\n        });\n\n        modalInstance.result.then(function (gridColumns) {\n            $scope.model.dictionaryHeaders = gridColumns;\n        });\n    };\n\n    $scope.itemExists = function( item ){\n        return $scope.model.selectedDataElementGroups.indexOf( item ) !== -1;\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = \"indicator-dictionary.xls\";\n        if( name ){\n            reportName = name + '.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.resetView = function( horizontalMenu ){\n        $scope.model.selectedProgram = null;\n        $scope.model.filterText = null;\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n    $scope.resetTheView = function(menu, $event) {\n                $scope.model.horizontalMenus.forEach(function(m) {\n                  m.active = false;\n                });\n\n                menu.active = true;\n\n                $scope.currentView = menu.view;\n              };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/dictionary/dictionary-controller.js","/* Controllers */\n\n/* global ndpFramework */\n\nvar ndpFramework = angular.module('ndpFramework');\n\n\nndpFramework.controller('DictionaryDetailsController',\n    function($scope,\n            $modalInstance,\n            dictionaryItem,\n            fullFetched,\n            DictionaryService,\n            MetaDataFactory){\n\n    $scope.dictionaryItem = dictionaryItem;\n    $scope.model = {\n        completeness: {\n            green: ['displayName', 'code', 'periodType', 'computationMethod', 'indicatorType', 'preferredDataSource', 'rationale', 'responsibilityForIndicator', 'unit'],\n            yellow: ['displayName', 'code', 'accountabilityForIndicator', 'computationMethod', 'preferredDataSource', 'unit'],\n            invalid: ['isProgrammeDocument', 'isDocumentFolder']\n        },\n        dictionaryHeaders: [\n            {id: 'displayName', name: 'name', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'code', name: 'code', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'aggregationType', name: 'aggregationType', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'disaggregation', name: 'disaggregation', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'valueType', name: 'valueType', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'periodType', name: 'frequency', colSize: \"col-sm-1\", show: true, fetch: false},\n            {id: 'vote', name: 'vote', colSize: 'col-sm-1', show: true, fetch: false}\n        ],\n        categoryCombosById: {}\n    };\n\n    MetaDataFactory.getAll('categoryCombos').then(function(categoryCombos){\n        angular.forEach(categoryCombos, function(cc){\n            $scope.model.categoryCombosById[cc.id] = cc;\n        });\n\n        MetaDataFactory.getAll('attributes').then(function(attributes){\n            $scope.model.attributes = attributes;\n            angular.forEach($scope.model.attributes, function(att){\n                if(att['dataElementAttribute'] && $scope.model.completeness.invalid.indexOf(att.code) === -1 ){\n                    var header = {id: att.code, name: att.name, show: false, fetch: true, colSize: \"col-sm-1\"};\n//                    $scope.model.dictionaryHeaders.push(header);\n                }\n            });\n        });\n    });\n\n    $scope.model.dictionaryItem = dictionaryItem;\n    $scope.model.fullFetched = fullFetched;\n\n    if( $scope.dictionaryItem && !$scope.model.fullFetched){\n        DictionaryService.getDataElement( $scope.dictionaryItem, $scope.model.dictionaryHeaders, $scope.model.completeness, $scope.model.categoryCombosById ).then(function( response ){\n            $scope.model.dictionaryItem = response;\n        });\n    }\n\n    $scope.close = function () {\n        $modalInstance.close();\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/dictionary/dictionary-details-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\n/* global ndpFramework */\nndpFramework.controller('DataValueExplanationController',\n    function($scope,\n            $modalInstance,\n            $filter,\n            $window,\n            DHIS2URL,\n            item,\n            DataValueService,\n            DocumentService,\n            MetaDataFactory){\n\n\n    $scope.selectedItem = {};\n    $scope.fetchExplanation = true;\n    $scope.categoryCombosById = [];\n    $scope.dataPeriods = [];\n    $scope.dataVotes = [];\n    $scope.votesById = {};\n\n    if ( !item || !item.details || !item.period || !item.aoc || !item.coc ){\n        $scope.fetchExplanation = false;\n    }\n    else{\n        $scope.dataElementId = item.details;\n        $scope.period = item.period;\n        $scope.aoc = item.aoc;\n        $scope.coc = item.coc;\n\n        $scope.selectedItem = {\n            dataElementId: item.details,\n            period: item.period,\n            aoc: item.aoc,\n            coc: item.coc.id\n        };\n\n        MetaDataFactory.getAll('categoryCombos').then(function(categoryCombos){\n            angular.forEach(categoryCombos, function(cc){\n                $scope.categoryCombosById[cc.id] = cc;\n            });\n            MetaDataFactory.getAll('dataSets').then(function(dataSets){\n\n                angular.forEach(dataSets, function(ds){\n                    ds.dataElements = ds.dataElements.map(function(de){ return de.id; });\n                });\n\n                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n                    for( var j=0; j<dataElements.length; j++){\n                        var de = dataElements[j];\n                        if ( de.id === $scope.selectedItem.dataElementId ){\n                            de.votes = [];\n                            de.periodTypes = [];\n                            de.dataSets = [];\n\n                            de.decc = $scope.categoryCombosById[de.categoryCombo.id];\n                            for( var k=0; k<de.decc.categoryOptionCombos.length; k++ ){\n                                if ( de.decc.categoryOptionCombos[k].id === $scope.selectedItem.coc ){\n                                    $scope.selectedCoc = de.decc.categoryOptionCombos[k];\n                                    break;\n                                }\n                            }\n\n                            for(var i=0; i<dataSets.length; i++){\n                                var ds = dataSets[i];\n                                if( ds && ds.dataElements.indexOf(de.id) !== -1 ){\n                                    de.dscc = $scope.categoryCombosById[ds.categoryCombo.id];\n                                    for( var l=0; l<de.dscc.categoryOptionCombos.length; l++ ){\n                                        var opts = $.map(de.dscc.categoryOptionCombos[l].categoryOptions, function(op){return op.id;});\n                                        if ( opts.indexOf($scope.selectedItem.aoc) !== -1 ){\n                                            $scope.selectedAoc = de.dscc.categoryOptionCombos[l];\n                                            break;\n                                        }\n                                    }\n\n                                    if( de.periodTypes.indexOf(ds.periodType) === -1){\n                                        de.periodTypes.push(ds.periodType);\n                                    }\n                                    angular.forEach(ds.organisationUnits, function(ou){\n                                        $scope.votesById[ou.id] = ou;\n                                        if(de.votes.indexOf(ou.id) === -1){\n                                            de.votes.push(ou.id);\n                                        }\n                                    });\n                                    de.dataSets.push( ds.id );\n                                }\n                            }\n\n                            if ( de.decc.isDefault ){\n                                $scope.selectedItem.displayName = de.displayName;\n                            }\n                            else{\n                                $scope.selectedItem.displayName = de.displayName + ' - ' + $scope.selectedCoc.displayName;\n                            }\n\n                            $scope.selectedItem.dscc = de.dscc;\n                            $scope.selectedItem.orgUnits = de.votes;\n                            $scope.selectedItem.dataSets = de.dataSets;\n                            $scope.selectedItem.periodTypes = de.periodTypes;\n\n                            break;\n                        }\n                    }\n\n                    var dataValueSetUrl = 'dataSet=' + $scope.selectedItem.dataSets.join(',');\n                    dataValueSetUrl += '&orgUnit=' + $scope.selectedItem.orgUnits.join(',');\n                    dataValueSetUrl += '&startDate=' + $scope.period.startDate;\n                    dataValueSetUrl += '&endDate='  + $scope.period.endDate;\n\n                    var pushedVotes = [];\n                    var pushedPeriods = [];\n                    DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                        if( response.dataValues && response.dataValues.length > 0 ){\n                            var params = {\n                                dataElement: $scope.selectedItem.dataElementId,\n                                categoryOptionCombo: $scope.selectedCoc.id\n                            };\n\n                            if ( $scope.selectedAoc && $scope.selectedAoc.id){\n                                params.attributeOptionCombo = $scope.selectedAoc.id;\n                            }\n\n                            $scope.dataValues = $filter('filter')(response.dataValues, params);\n\n                            var eventIds = [];\n\n                            angular.forEach($scope.dataValues, function(dv){\n                                if ( dv.comment ){\n                                    dv.comment = JSON.parse( dv.comment );\n\n                                    if ( dv.comment.attachment ){\n                                        angular.forEach(dv.comment.attachment, function(att){\n                                            eventIds.push( att );\n                                        });\n                                    };\n                                }\n\n                                if ( pushedVotes.indexOf( dv.orgUnit ) === -1 ){\n                                    pushedVotes.push( dv.orgUnit );\n                                    $scope.dataVotes.push( $scope.votesById[dv.orgUnit] );\n                                }\n                                if ( pushedPeriods.indexOf(dv.period) === -1){\n                                    pushedPeriods.push( dv.period );\n                                    $scope.dataPeriods.push( {id: dv.period, name: dv.period} );\n                                }\n                            });\n\n                            $scope.documents = {};\n                            if ( eventIds.length > 0 ){\n                                DocumentService.getMultiple( eventIds ).then(function(docs){\n                                    $scope.documents = docs;\n                                });\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    $scope.downloadFile = function(path, e){\n        if( path ){\n            $window.open(DHIS2URL + path, '_blank', '');\n        }\n        if(e){\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    $scope.close = function () {\n        $modalInstance.close();\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/explanation/datavalue-explanation-controller.js","/* global angular, dhis2, docLibrary */\n\n'use strict';\nvar ndpFramework = angular.module('ndpFramework');\n\n//Controller for settings page\nndpFramework.controller('FaqController',\n        function($scope,\n                $translate,\n                $filter,\n                NotificationService,\n                EventService,\n                MetaDataFactory,\n                OrgUnitFactory) {\n\n    $scope.model = {\n        optionSets: null,\n        events: [],\n        dataElements: [],\n        programmeDataElement: null,\n        showFaqResponse: false,\n        selectedFaq: null,\n        faqs: []\n    };\n\n    /*$scope.model.horizontalMenus = [\n        {id: 'faq', title: 'faq_title', order: 1, view: 'components/faq/faq.html', active: true, class: 'main-horizontal-menu'}\n    ];*/\n\n    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n        $scope.model.optionSets = optionSets.reduce( function(map, obj){\n            map[obj.id] = obj;\n            return map;\n        }, {});\n\n        MetaDataFactory.getAll('programs').then(function(programs){\n            $scope.model.programs = $filter('filter')(programs, {programType: 'WITHOUT_REGISTRATION', programDomain: 'faq'}, true);\n\n            //Get orgunits for the logged in user\n            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                $scope.orgUnits = response.organisationUnits;\n                angular.forEach($scope.orgUnits, function(ou){\n                    ou.show = true;\n                    angular.forEach(ou.children, function(o){\n                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                    });\n                });\n                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n            });\n        });\n    });\n\n    //watch for selection of program\n    $scope.$watch('model.selectedProgram', function() {\n        $scope.model.selectedProgramStage = null;\n        $scope.model.faqs = [];\n        if( angular.isObject($scope.model.selectedProgram) && $scope.model.selectedProgram.id){\n            $scope.loadProgramDetails();\n        }\n    });\n\n    $scope.loadProgramDetails = function (){\n        $scope.model.selectedProgramStage = null;\n        $scope.model.faqs = [];\n        if( $scope.model.selectedProgram && $scope.model.selectedProgram.id && $scope.model.selectedProgram.programStages.length > 0)\n        {\n            $scope.model.selectedProgramStage = $scope.model.selectedProgram.programStages[0];\n\n            var prDes = $scope.model.selectedProgramStage.programStageDataElements;\n\n            $scope.model.dynamicHeaders = [{id: 'faq', displayName: $translate.instant('faq_title')}];\n            $scope.model.dataElements = [];\n            angular.forEach(prDes, function(prDe){\n                $scope.model.dataElements[prDe.dataElement.id] = prDe.dataElement;\n            });\n\n            $scope.fetchEvents();\n        }\n    };\n\n    $scope.fetchEvents = function(){\n\n        if( $scope.selectedOrgUnit && $scope.selectedOrgUnit.id && $scope.model.selectedProgram && $scope.model.selectedProgram.id ){\n\n            EventService.getByOrgUnitAndProgram($scope.selectedOrgUnit.id,\n            'DESCENDANTS',\n            $scope.model.selectedProgram.id,\n            $scope.model.optionSets,\n            $scope.model.dataElements).then(function(events){\n                $scope.model.faqs = events;\n            });\n        }\n    };\n\n    $scope.showFaqResponse = function( faq ){\n        if ( $scope.model.selectedFaq && $scope.model.selectedFaq.event === faq.event ){\n            $scope.model.showFaqResponse = !$scope.model.showFaqResponse;\n            $scope.model.selectedFaq = null;\n        }\n        else{\n            $scope.model.showFaqResponse = true;\n            $scope.model.selectedFaq = faq;\n        }\n    };\n\n    $scope.resetView = function(){\n        $scope.model.selectedProgram = null;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/faq/faq-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\n\n/* global ndpFramework, dhis2 */\nndpFramework.controller('GoalController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        Analytics,\n        CommonUtils,\n        FinancialDataService,\n        DataValueService) {\n\n    $scope.showReportFilters = false;\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        dataElements: [],\n        dataElementsById: [],\n        kra: [],\n        goals: [],\n        selectedKra: null,\n        selectedGoal: null,\n        dataElementGroups: [],\n        baseLineTargetActualDimensions: [],\n        performanceOverviewHeaders: [],\n        categoryCombosById: {},\n        optionSets: [],\n        optionSetsById: [],\n        dictionaryItems: [],\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        groupSetSize: {},\n        physicalPerformance: true,\n        financialPerformance: true,\n        showProjectDetails: false,\n        showExplanation: false,\n        explanations: [],\n        commentRow: {}\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'target', title: 'targets', order: 1, view: 'components/goal/results.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/goal/physical-performance.html', class: 'main-horizontal-menu'},\n        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/goal/performance-overview.html', class: 'main-horizontal-menu'},\n        {id: 'completeness', title: 'completeness', order: 4, view: 'components/goal/completeness.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('model.selectedGoal', function(){\n        $scope.model.selectedKra = null;\n        $scope.model.kras = [];\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedGoal) && $scope.model.selectedGoal.id){\n            angular.forEach($scope.model.selectedGoal.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n\n            $scope.model.kras = $scope.model.selectedGoal.dataElementGroups;\n        }\n        else{\n            angular.forEach($scope.model.dataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                    if ( _deg.length > 0 ){\n                        $scope.model.dataElementGroup.push( _deg[0] );\n                    }\n                });\n            });\n        }\n    });\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedKra', function(){\n        $scope.resetDataView();\n        $scope.model.dataElementGroup = [];\n        if( angular.isObject($scope.model.selectedKra) && $scope.model.selectedKra.id){\n            var _deg = $filter('filter')($scope.model.dataElementGroups, {id: $scope.model.selectedKra.id});\n            if ( _deg.length > 0 ){\n                $scope.model.dataElementGroup.push( _deg[0] );\n            }\n            $scope.getAnalyticsData();\n        }\n        else{\n            $scope.getGoals();\n        }\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    $scope.getGoals = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.dataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if ( _deg.length > 0 ){\n                    _deg[0].dataElementGroupSetName = degs.displayName;\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    dhis2.ndp.downloadGroupSets( 'goal' ).then(function(){\n\n        OptionComboService.getBtaDimensions().then(function( response ){\n            \n            if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                return;\n            }\n\n            $scope.model.bta = response.bta;\n            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n            $scope.model.actualDimension = response.actual;\n            $scope.model.targetDimension = response.target;\n            $scope.model.baselineDimension = response.baseline;\n\n            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                    map[obj.id] = obj;\n                    return map;\n                }, {});\n\n                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                    $scope.model.dataElementGroups = dataElementGroups;\n\n                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'goal').then(function(dataElementGroupSets){\n                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n                        $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                        $scope.model.allPeriods = angular.copy( periods );\n                        $scope.model.periods = periods;\n\n                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                        angular.forEach($scope.model.periods, function(pe){\n                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                $scope.model.selectedPeriods.push(pe);\n                            }\n                        });\n\n                        //Get orgunits for the logged in user\n                        OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                            $scope.orgUnits = response.organisationUnits;\n                            angular.forEach($scope.orgUnits, function(ou){\n                                ou.show = true;\n                                angular.forEach(ou.children, function(o){\n                                    o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                                });\n                            });\n\n                            $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n                            $scope.model.metaDataCached = true;\n                            $scope.populateMenu();\n                            $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                        });\n                    });\n                });\n            });\n        });\n    }, function(){\n        console.log('error');\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedGoal = null;\n        $scope.model.selectedKra = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            if( $scope.model.dataElementGroupSets && $scope.model.dataElementGroupSets.length === 1 ){\n                $scope.model.selectedGoal = $scope.model.dataElementGroupSets[0];\n            }\n            else{\n                $scope.getGoals();\n            }\n        }\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.dataElementGroup || $scope.model.dataElementGroup.length === 0){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_goal\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n            var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n            $scope.model.pHeadersLength = pHeaders.length;\n            var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            $scope.model.performanceOverviewHeaders = [];\n            angular.forEach(prds, function(pe){\n                angular.forEach( pHeaders, function(p){\n                    var h = angular.copy( p );\n                    h.period = pe.id;\n                    $scope.model.performanceOverviewHeaders.push( h );\n                });\n            });\n\n            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                map[obj.id] = obj;\n                return map;\n            }, {});\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            FinancialDataService.getLocalData('data/cost.json').then(function(cost){\n                $scope.model.cost = cost;\n\n                Analytics.getData( analyticsUrl ).then(function(data){\n                    if( data && data.data && data.metaData ){\n                        $scope.model.data = data.data;\n                        $scope.model.metaData = data.metaData;\n                        $scope.model.reportReady = true;\n                        $scope.model.reportStarted = false;\n\n                        var dataParams = {\n                            data: data.data,\n                            metaData: data.metaData,\n                            reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                            bta: $scope.model.bta,\n                            selectedDataElementGroupSets: $scope.model.dataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementGroups: $scope.model.dataElementGroups,\n                            basePeriod: $scope.model.basePeriod,\n                            targetDimension: $scope.model.targetDimension,\n                            baselineDimension: $scope.model.baselineDimension,\n                            actualDimension: $scope.model.actualDimension,\n                            maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                            allPeriods: $scope.model.allPeriods,\n                            dataElementGroupsById: $scope.model.dataElementGroupsById,\n                            dataElementsById: $scope.model.dataElementsById,\n                            cost: $scope.model.cost,\n                            displayVision2040: true,\n                            performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                            displayActionBudgetData: false\n                        };\n\n                        var processedData = Analytics.processData( dataParams );\n                        $scope.model.dataHeaders = processedData.dataHeaders;\n                        $scope.model.reportPeriods = processedData.reportPeriods;\n                        $scope.model.dataExists = processedData.dataExists;\n                        $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                        $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                        $scope.model.numerator = processedData.completenessNum;\n                        $scope.model.denominator = processedData.completenessDen;\n                        $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                        $scope.model.tableRows = processedData.tableRows;\n                        $scope.model.povTableRows = processedData.povTableRows;\n                    }\n                });\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name ).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedMenu.displayName;\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/goal/goal-controller.js","/* global angular, dhis2, ndpFramework */\n\n'use strict';\n\nvar ndpFramework = angular.module('ndpFramework');\n\n//Controller for settings page\nndpFramework.controller('HomeController',\n        function($rootScope,\n                $scope,\n                $modal,\n                $translate,\n                $filter,\n                SessionStorageService,\n                SelectedMenuService,\n                NotificationService,\n                NDPMenuService,\n                MetaDataFactory) {\n\n    $scope.model = {\n        metaDataCached: false,\n        dataElementGroups: [],\n        dataElementGroupSets: [],\n        dataElementGroup: [],\n        optionSets: [],\n        optionSetsById: [],\n        selectedNDP: null,\n        ndp: null,\n        slides: []\n    };\n\n    var start = new Date();\n    $rootScope.DHIS2URL = env.dhisConfig.apiRoot;\n    dhis2.ndp.downloadMetaData().then(function(){\n        var end = new Date();\n        SessionStorageService.set('METADATA_CACHED', true);\n        console.log('Finished loading metadata in about ', Math.floor((end - start) / 1000), ' - secs');\n\n        MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n            $scope.model.ndp = $filter('getFirst')(optionSets, {code: 'ndp'});\n\n            if( !$scope.model.ndp || !$scope.model.ndp.code || !$scope.model.ndp.options || $scope.model.ndp.options.length < 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                return;\n            }\n\n            var currentNDP = $filter('filter')($scope.model.ndp.options, {isCurrentNDP: true});\n            if ( currentNDP && currentNDP.length && currentNDP.length === 1 ){\n                $scope.model.selectedNDP = currentNDP[0];\n            }\n            else{\n                 $scope.model.selectedNDP = $scope.model.ndp.options[0];\n            }\n\n            $scope.model.metaDataCached = true;\n\n//            for( var i=1; i<=12; i++ ){\n//                $scope.model.slides.push({\n//                    id: i,\n//                    type: 'IMG',\n//                    path: 'images/NDPIII/' + i + '.png',\n//                    style: 'background-image:url(images/NDPIII/' + i + '.png)'\n//                });\n//            }\n\n            for( var i=1; i<=3; i++ ){\n                $scope.model.slides.push({\n                    id: i,\n                    type: 'IMG',\n                    path: 'images/NDPIII/' + i + '.jpeg',\n                    style: 'background-image:url(images/NDPIII/' + i + '.jpeg)'\n                });\n            }\n\n            NDPMenuService.getMenu().then(function(menu){\n                $scope.model.menuItems = [\n                    {\n                        id: 'navigation',\n                        order: 0,\n                        displayName: $translate.instant('navigation'),\n                        root: true,\n                        show: true,\n                        children: menu\n                    }\n                ];\n            });\n        });\n    });\n\n    $scope.$watch('model.selectedNDP', function(){\n        $scope.model.selectedMenu = null;\n    });\n\n    $scope.setSelectedMenu = function( menu ){\n\n        if ( menu.address ){\n            window.location.href = menu.address;\n        }\n        else{\n            if ( !menu.hasNoNDP && !$scope.model.selectedNDP ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"please_selected_ndp\"));\n                return;\n            }\n\n            if( $scope.model.selectedMenu && $scope.model.selectedMenu.id === menu.id ){\n                $scope.model.selectedMenu = null;\n            }\n            else{\n                $scope.model.selectedMenu = menu;\n                if( $scope.model.selectedNDP && $scope.model.selectedNDP.code ){\n                    $scope.model.selectedMenu.ndp = $scope.model.selectedNDP.code;\n                }\n            }\n            SelectedMenuService.setSelectedMenu($scope.model.selectedMenu);\n            $scope.$broadcast('MENU', $scope.model.selectedMenu);\n        }\n    };\n\n    $scope.setBottomMenu = function(menu){\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.domain === menu){\n            $scope.model.selectedMenu = null;\n        }\n        else{\n            $scope.model.selectedMenu = {domain: menu, view: $scope.model.bottomMenu[menu]};\n        }\n    };\n\n    $scope.goToMenu = function( menuLink ){\n        window.location.href = menuLink;\n    };\n\n    $scope.getMenuStyle = function( menu ){\n        var style = menu.class + ' horizontal-menu font-16';\n        if( menu.active ){\n            style += ' active-horizontal-menu';\n        }\n        return style;\n    };\n\n    $scope.getTreeMenuStyle = function( menuItem ){\n        var style = \"\";\n        if ( menuItem ){\n            if ( menuItem.id !== 'SPACE' ){\n                style += 'active-menu-item';\n            }\n        }\n\n        return style;\n    };\n\n    $scope.settings = function(){\n\n        var modalInstance = $modal.open({\n            templateUrl: 'components/settings/settings-modal.html',\n            controller: 'SettingsController'\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.isSubMenuOpen = {\n        NPD: false\n    };\n    $scope.toggleSubMenu = function(menuName) {\n      $scope.isSubMenuOpen[menuName] = !$scope.isSubMenuOpen[menuName];\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/home/home-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('IntermediateOutcomeController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        ResulstChainService,\n        CommonUtils,\n        DateUtils,\n        DataValueService,\n        ClusterDataService,\n        Analytics) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        dataElementsById: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        objectives: [],\n        ndpObjectives: [],\n        ndpProgrammes: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        performanceOverviewHeaders: [],\n        dataElementGroups: [],\n        allDataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        displayProjectOutputs: true,\n        displayDepartmentOutPuts: true,\n        explanations: [],\n        commentRow: {}\n    };\n\n//    $scope.model.horizontalMenus = [\n//        {id: 'result', title: 'targets', order: 1, view: 'components/intermediate-outcome/results.html', active: true, class: 'main-horizontal-menu'},\n//        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/intermediate-outcome/physical-performance.html', class: 'main-horizontal-menu'},\n//        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/intermediate-outcome/performance-overview.html', class: 'main-horizontal-menu'},\n//        {id: 'clusterPerformance', title: 'cluster_performance', order: 4, view: 'views/cluster/cluster-performance.html', class: 'main-horizontal-menu'},\n//        {id: 'completeness', title: 'completeness', order: 5, view: 'components/intermediate-outcome/completeness.html', class: 'main-horizontal-menu'}\n//    ];\n\n     $scope.model.horizontalMenus = [\n            {id: 'result', title: 'targets', order: 1, view: 'components/intermediate-outcome/results.html', active: true, class: 'main-horizontal-menu'},\n            {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/intermediate-outcome/physical-performance.html', class: 'main-horizontal-menu'},\n            {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/intermediate-outcome/performance-overview.html', class: 'main-horizontal-menu'},\n            {id: 'completeness', title: 'completeness', order: 4, view: 'components/intermediate-outcome/completeness.html', class: 'main-horizontal-menu'}\n        ];\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.getOutcomes = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'intermediateOutcome', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n     $scope.getObjectives = function(){\n                $scope.model.dataElementGroup = [];\n                angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                    angular.forEach(degs.dataElementGroups, function(deg){\n                        var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                        if ( _deg.length > 0 ){\n                            $scope.model.dataElementGroup.push( _deg[0] );\n\n                        }\n                    });\n                });\n\n                 $scope.model.subProgrammes = $scope.model.dataElementGroup\n            };\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n      $scope.$watch('model.selectedNdpProgram', function(){\n                $scope.model.selectedKra = null;\n                $scope.model.dataElementGroup = [];\n                $scope.resetDataView();\n                if( angular.isObject($scope.model.selectedObjective) && $scope.model.selectedObjective.id){\n                    $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedObjective.id});\n                    angular.forEach($scope.model.selectedObjective.dataElementGroups, function(deg){\n                        var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                        if ( _deg.length > 0 ){\n                            $scope.model.dataElementGroup.push( _deg[0] );\n                        }\n                    });\n\n                    $scope.model.subProgrammes = $scope.model.selectedObjective.dataElementGroups\n                }\n                else{\n                    $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n                    angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                        angular.forEach(degs.dataElementGroups, function(deg){\n                            var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                            if ( _deg.length > 0 ){\n                                $scope.model.dataElementGroup.push( _deg[0] );\n                            }\n                        });\n                    });\n                }\n            });\n\n\n        $scope.$watch('model.selectedSubProgramme', function(){\n               $scope.resetDataView();\n               $scope.model.dataElementGroup = [];\n               if( angular.isObject($scope.model.selectedKra) && $scope.model.selectedKra.id){\n                   var _deg = $filter('filter')($scope.model.dataElementGroups, {id: $scope.model.selectedKra.id});\n                   if ( _deg.length > 0 ){\n                       $scope.model.dataElementGroup.push( _deg[0] );\n                   }\n\n                   $scope.getAnalyticsData();\n               }\n               else{\n                   $scope.getObjectives();\n               }\n           });\n\n//    $scope.$watch('model.selectedNdpProgram', function(){\n//        $scope.resetDataView();\n//\n//        if( $scope.model.resultsFrameworkChain && $scope.model.resultsFrameworkChain.subPrograms ){\n//            $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n//        }\n//\n//        $scope.model.selectedSubProgramme = null;\n//        if( angular.isObject($scope.model.selectedNdpProgram) ){\n//            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n//                $scope.model.subProgrammes = $filter('startsWith')($scope.model.subProgrammes, {code: $scope.model.selectedNdpProgram.code});\n//            }\n//        }\n//    });\n//\n//    $scope.$watch('model.selectedSubProgramme', function(){\n//        $scope.resetDataView();\n//    });\n//\n//    $scope.$watch('model.selectedCluster', function(){\n//        $scope.resetDataView();\n//    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n//    dhis2.ndp.downloadGroupSets( 'sub-programme' ).then(function(){\n//\n//        MetaDataFactory.getAll('legendSets').then(function(legendSets){\n//\n//            /*angular.forEach(legendSets, function(legendSet){\n//                if ( legendSet.isTrafficLight ){\n//                    $scope.model.defaultLegendSet = legendSet;\n//                }\n//                $scope.model.legendSetsById[legendSet.id] = legendSet;\n//            });*/\n//\n//            MetaDataFactory.getAll('optionSets').then(function(optionSets){\n//\n//                $scope.model.optionSets = optionSets;\n//\n//                angular.forEach(optionSets, function(optionSet){\n//                    $scope.model.optionSetsById[optionSet.id] = optionSet;\n//                });\n//\n//                $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n//\n//                if( !$scope.model.ndp || !$scope.model.ndp.code ){\n//                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n//                    return;\n//                }\n//\n//                $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n//                if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n//                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n//                    return;\n//                }\n//\n//                ResulstChainService.getByOptionSet( $scope.model.piapResultsChain.id ).then(function(chain){\n//                    $scope.model.resultsFrameworkChain = chain;\n//                    $scope.model.ndpProgrammes = $scope.model.resultsFrameworkChain.programs;\n//                    $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n//\n//                    OptionComboService.getBtaDimensions().then(function( response ){\n//\n//                        if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n//                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n//                            return;\n//                        }\n//\n//                        $scope.model.bta = response.bta;\n//                        $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n//                        $scope.model.actualDimension = response.actual;\n//                        $scope.model.targetDimension = response.target;\n//                        $scope.model.baselineDimension = response.baseline;\n//\n//                        MetaDataFactory.getAll('dataElements').then(function(dataElements){\n//\n//                            $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n//                                map[obj.id] = obj;\n//                                return map;\n//                            }, {});\n//\n//                            MetaDataFactory.getAll('optionGroupSets').then(function(optionGroupSets){\n//\n//                                $scope.model.optionGroupSets = optionGroupSets;\n//\n//                                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n//\n//                                    $scope.model.allDataElementGroups = dataElementGroups;\n//                                    $scope.model.dataElementGroups = dataElementGroups;\n//\n//                                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-programme').then(function(dataElementGroupSets){\n//                                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n//\n//                                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n//                                        $scope.model.allPeriods = angular.copy( periods );\n//                                        $scope.model.periods = periods;\n//\n//                                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n//                                        var today = DateUtils.getToday();\n//                                        angular.forEach($scope.model.periods, function(pe){\n//                                            if ( pe.startDate <= today && pe.endDate >= today ){\n//                                                $scope.model.selectedFiscalYear = pe;\n//                                            }\n//                                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n//                                                $scope.model.selectedPeriods.push(pe);\n//                                            }\n//                                        });\n//\n//                                        $scope.model.metaDataCached = true;\n//                                        $scope.populateMenu();\n//                                        $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n//                                    });\n//                                });\n//                            });\n//                        });\n//\n//                    });\n//\n//                });\n//            });\n//        });\n//    });\n\n    dhis2.ndp.downloadGroupSets( 'resultsFrameworkObjective' ).then(function(){\n\n            OptionComboService.getBtaDimensions().then(function( response ){\n\n                if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                    return;\n                }\n\n                $scope.model.bta = response.bta;\n                $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                $scope.model.actualDimension = response.actual;\n                $scope.model.targetDimension = response.target;\n                $scope.model.baselineDimension = response.baseline;\n\n                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                    $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                        map[obj.id] = obj;\n                        return map;\n                    }, {});\n\n                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                        $scope.model.dataElementGroups = dataElementGroups;\n\n                        MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'resultsframeworkobjective').then(function(dataElementGroupSets){\n                            $scope.model.dataElementGroupSets = dataElementGroupSets;\n                            $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                            var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                            $scope.model.allPeriods = angular.copy( periods );\n                            $scope.model.periods = periods;\n\n                            var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                            angular.forEach($scope.model.periods, function(pe){\n                                if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                    $scope.model.selectedPeriods.push(pe);\n                                }\n                            });\n\n                            //Get orgunits for the logged in user\n                            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                                $scope.orgUnits = response.organisationUnits;\n                                angular.forEach($scope.orgUnits, function(ou){\n                                    ou.show = true;\n                                    angular.forEach(ou.children, function(o){\n                                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                                    });\n                                });\n                                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n                                $scope.model.metaDataCached = true;\n                                $scope.populateMenu();\n                                $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n    $scope.populateMenuOld = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedNdpProgram = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n        }\n        \n        var sectorsOpgs = $filter('getFirst')($scope.model.optionGroupSets, {code: $scope.model.selectedMenu.ndp + '_CLUSTER'});\n            \n        $scope.model.clusters = sectorsOpgs && sectorsOpgs.optionGroups ? sectorsOpgs.optionGroups : [];\n        if( !$scope.model.clusters || !$scope.model.clusters.length || !$scope.model.clusters.length === 0 ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_configuration\"));\n            return;\n        }\n    };\n\n    $scope.populateMenu = function(){\n               $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n               $scope.model.selectedNdpProgram = null;\n               $scope.model.selectedKra = null;\n               $scope.resetDataView();\n\n               if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n                   $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n                   $scope.model.ndpProgrammes = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n                   $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n                   if( $scope.model.dataElementGroupSets && $scope.model.dataElementGroupSets.length === 1 ){\n                        $scope.model.selectedNdpProgram = $scope.model.dataElementGroupSets[0];\n             }\n                   else{\n                       $scope.getObjectives();\n                   }\n               }\n           };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.clusterData = null;\n        $scope.model.reportReady = false;\n        $scope.model.clusterReportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsDataOld = function(){\n\n        $scope.model.data = null;\n        $scope.resetDataView();\n\n        var analyticsUrl = '';\n\n        var selectedResultsLevel = $scope.model.selectedNdpProgram.code;\n\n        if ( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n            selectedResultsLevel = $scope.model.selectedSubProgramme.code;\n        }\n\n        $scope.model.selectedDataElementGroupSets = $filter('startsWith')($scope.model.dataElementGroupSets, {code: selectedResultsLevel});\n        $scope.getOutcomes();\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_outcome_output\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n            var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n            $scope.model.pHeadersLength = pHeaders.length;\n            var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            $scope.model.performanceOverviewHeaders = [];\n            angular.forEach(prds, function(pe){\n                angular.forEach( pHeaders, function(p){\n                    var h = angular.copy( p );\n                    h.period = pe.id;\n                    $scope.model.performanceOverviewHeaders.push( h );\n                });\n            });\n\n            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                map[obj.id] = obj;\n                return map;\n            }, {});\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            Analytics.getData( analyticsUrl ).then(function(data){\n                if( data && data.data && data.metaData ){\n                    $scope.model.data = data.data;\n                    $scope.model.metaData = data.metaData;\n                    $scope.model.reportReady = true;\n                    $scope.model.reportStarted = false;\n\n                    var dataParams = {\n                        data: data.data,\n                        metaData: data.metaData,\n                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                        bta: $scope.model.bta,\n                        actualDimension: $scope.model.actualDimension,\n                        targetDimension: $scope.model.targetDimension,\n                        baselineDimension: $scope.model.baselineDimension,\n                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                        selectedDataElementGroup: $scope.model.selectedKra,\n                        dataElementGroups: $scope.model.dataElementGroups,\n                        basePeriod: $scope.model.basePeriod,\n                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                        allPeriods: $scope.model.allPeriods,\n                        dataElementGroupsById: $scope.model.dataElementGroupsById,\n                        dataElementsById: $scope.model.dataElementsById,\n                        legendSetsById: $scope.model.legendSetsById,\n                        defaultLegendSet: $scope.model.defaultLegendSet,\n                        performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                        displayActionBudgetData: false\n                    };\n\n                    var processedData = Analytics.processData( dataParams );\n                    $scope.model.dataHeaders = processedData.dataHeaders;\n                    $scope.model.reportPeriods = processedData.reportPeriods;\n                    $scope.model.dataExists = processedData.dataExists;\n                    $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                    $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                    $scope.model.numerator = processedData.completenessNum;\n                    $scope.model.denominator = processedData.completenessDen;\n                    $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                    $scope.model.tableRows = processedData.tableRows;\n                    $scope.model.povTableRows = processedData.povTableRows;\n                }\n            });\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n                $scope.model.data = null;\n                var analyticsUrl = '';\n\n                if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n                    return;\n                }\n\n                if( !$scope.model.dataElementGroup || $scope.model.dataElementGroup.length === 0){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_objective\"));\n                    return;\n                }\n\n                $scope.getBasePeriod();\n\n                if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n                    return;\n                }\n\n                console.log($scope.model.dataElementGroup)\n\n                if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n                    analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n                    analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n                    analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n                    var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n                    $scope.model.pHeadersLength = pHeaders.length;\n                    var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n                    $scope.model.performanceOverviewHeaders = [];\n                    angular.forEach(prds, function(pe){\n                        angular.forEach( pHeaders, function(p){\n                            var h = angular.copy( p );\n                            h.period = pe.id;\n                            $scope.model.performanceOverviewHeaders.push( h );\n                        });\n                    });\n\n                    $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                        map[obj.id] = obj;\n                        return map;\n                    }, {});\n\n                    var des = [];\n                    $scope.model.theRows = [];\n                    angular.forEach($scope.model.dataElementGroup, function(deg){\n                        des.push('DE_GROUP-' + deg.id);\n                    });\n                    analyticsUrl += '&dimension=dx:' + des.join(';');\n\n                    $scope.model.reportReady = false;\n                    $scope.model.reportStarted = true;\n\n                     Analytics.getData( analyticsUrl ).then(function(data){\n                                                    if( data && data.data && data.metaData ){\n                                                        $scope.model.data = data.data;\n                                                        $scope.model.metaData = data.metaData;\n                                                        $scope.model.reportReady = true;\n                                                        $scope.model.reportStarted = false;\n\n                                                        var dataParams = {\n                                                            data: data.data,\n                                                            metaData: data.metaData,\n                                                            reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                                                            bta: $scope.model.bta,\n                                                            actualDimension: $scope.model.actualDimension,\n                                                            targetDimension: $scope.model.targetDimension,\n                                                            baselineDimension: $scope.model.baselineDimension,\n                                                            selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                                                            selectedDataElementGroup: $scope.model.selectedKra,\n                                                            dataElementGroups: $scope.model.dataElementGroups,\n                                                            basePeriod: $scope.model.basePeriod,\n                                                            maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                                                            allPeriods: $scope.model.allPeriods,\n                                                            dataElementGroupsById: $scope.model.dataElementGroupsById,\n                                                            dataElementsById: $scope.model.dataElementsById,\n                                                            legendSetsById: $scope.model.legendSetsById,\n                                                            defaultLegendSet: $scope.model.defaultLegendSet,\n                                                            performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                                                            displayActionBudgetData: false\n                                                        };\n\n                                                        var processedData = Analytics.processData( dataParams );\n                                                        $scope.model.dataHeaders = processedData.dataHeaders;\n                                                        $scope.model.reportPeriods = processedData.reportPeriods;\n                                                        $scope.model.dataExists = processedData.dataExists;\n                                                        $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                                                        $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                                                        $scope.model.numerator = processedData.completenessNum;\n                                                        $scope.model.denominator = processedData.completenessDen;\n                                                        $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                                                        $scope.model.tableRows = processedData.tableRows;\n                                                        $scope.model.povTableRows = processedData.povTableRows;\n                                                    }\n                                                });\n                }\n            };\n\n    $scope.getClusterData = function(){\n        \n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n            return;\n        }\n\n        if( !$scope.model.selectedFiscalYear ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n            return;\n        }\n\n        var params = {\n            indicatorGroupType: 'intermediateOutcome',\n            selectedOrgUnit: $scope.selectedOrgUnit,\n            selectedCluster: $scope.model.selectedCluster,\n            selectedFiscalYear: $scope.model.selectedFiscalYear,\n            allDataElementGroups: $scope.model.allDataElementGroups,\n            dataElementGroupSets: $scope.model.dataElementGroupSets,\n            bta: $scope.model.bta,\n            baseLineTargetActualDimensions: $scope.model.baseLineTargetActualDimensions,\n            actualDimension: $scope.model.actualDimension,\n            targetDimension: $scope.model.targetDimension,\n            baselineDimension: $scope.model.baselineDimension,\n            selectedDataElementGroupSets: $scope.model.clusterDataElementGroupSets,\n            selectedDataElementGroup: $scope.model.selectedKra,\n            dataElementsById: $scope.model.dataElementsById,\n            legendSetsById: $scope.model.legendSetsById,\n            defaultLegendSet: $scope.model.defaultLegendSet\n        };\n\n        $scope.model.clusterReportReady = false;\n        $scope.model.clusterReportStarted = true;\n        ClusterDataService.getData( params ).then(function(result){\n            $scope.model.clusterReportReady = true;\n            $scope.model.clusterReportStarted = false;\n            $scope.model.clusterData = result.clusterData;\n            $scope.model.hasClusterData = result.hasClusterData;\n            $scope.model.clusterPerformanceOverviewHeaders = result.clusterPerformanceOverviewHeaders;\n        });\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - intermediate outcome\";\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n    \n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/intermediate-outcome/intermediate-outcome-controller.js","/* global angular, dhis2, docLibrary */\n\n'use strict';\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('LibraryController',\n        function($scope,\n                $translate,\n                $filter,\n                $window,\n                $modal,\n                NotificationService,\n                DocumentService,\n                MetaDataFactory,\n                OrgUnitFactory,\n                DHIS2URL) {\n\n    $scope.model = {\n        optionSets: null,\n        fileDataElement: null,\n        typeDataElement: null,\n        descDataElement: null,\n        selectedOptionSet: null,\n        events: [],\n        ndpDocumentFolders: [],\n        programDocumentFolders: [],\n        selectedNdpDocumentFolder: null,\n        selectedProgrammeDocumentFolder: null,\n        fileInput: null,\n        showFileUpload: false,\n        dataElements: [],\n        dynamicHeaders: [],\n        isProgrammeDocument: false,\n        selectedNdpProgram: null,\n        programmeDataElement: null\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'ndp_doc', title: 'ndp_documents', order: 1, view: 'components/library/ndp-documents.html', active: true, class: 'main-horizontal-menu'}\n//        {id: 'prg_doc', title: 'program_documents', order: 2, view: 'components/library/program-documents.html', active: true, class: 'main-horizontal-menu'}\n    ];\n\n    $scope.model.staticHeaders = [\n        {id: 'name', title: 'file_name'},\n        {id: 'size', title: 'file_size'},\n        {id: 'dateUploaded', title: 'date_uploaded'},\n        {id: 'uploadedBy', title: 'uploaded_by'},\n        {id: 'mda', title: 'mda'}\n    ];\n\n    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n        $scope.model.optionSets = optionSets.reduce( function(map, obj){\n            map[obj.id] = obj;\n            return map;\n        }, {});\n\n        MetaDataFactory.getAllByProperty('programs', 'programType', 'without_registration').then(function(programs){\n            $scope.model.programs = programs;\n            angular.forEach(programs, function(pr){\n                if ( pr.documentFolderType === 'general' ){\n                    $scope.model.ndpDocumentFolders.push( pr );\n                }\n                else if ( pr.documentFolderType === 'programme' ){\n                    $scope.model.programDocumentFolders.push( pr );\n                }\n            });\n\n            //Get orgunits for the logged in user\n            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                $scope.orgUnits = response.organisationUnits;\n                angular.forEach($scope.orgUnits, function(ou){\n                    ou.show = true;\n                    angular.forEach(ou.children, function(o){\n                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                    });\n                });\n                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n            });\n        });\n    });\n\n    //watch for selection of program\n    $scope.$watch('model.selectedProgram', function() {\n        $scope.model.selectedProgramStage = null;\n        $scope.model.selectedOptionSet = null;\n        $scope.model.selectedNdpProgram = null;\n        $scope.model.isProgrammeDocument = false;\n        $scope.model.documents = [];\n        if( angular.isObject($scope.model.selectedProgram) && $scope.model.selectedProgram.id){\n            $scope.loadProgramDetails();\n        }\n    });\n\n    $scope.loadProgramDetails = function (){\n        $scope.model.selectedProgramStage = null;\n        $scope.model.selectedOptionSet = null;\n        $scope.model.selectedNdpProgram = null;\n        $scope.model.isProgrammeDocument = false;\n        $scope.model.documents = [];\n        if( $scope.model.selectedProgram && $scope.model.selectedProgram.id && $scope.model.selectedProgram.programStages.length > 0)\n        {\n            if ( $scope.model.selectedProgram.programStages.length > 1 )\n            {\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_document_folder\"));\n                return;\n            }\n\n            $scope.model.selectedProgramStage = $scope.model.selectedProgram.programStages[0];\n\n            var prDes = $scope.model.selectedProgramStage.programStageDataElements;\n\n            var docDe = $filter('filter')(prDes, {dataElement: {valueType: 'FILE_RESOURCE'}});\n            var typeDe = $filter('filter')(prDes, {dataElement: {isDocumentFolder: true}});\n            var progDe = $filter('filter')(prDes, {dataElement: {isProgrammeDocument: true}});\n\n            if( docDe.length !== 1 || typeDe.length !== 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_document_folder_configuration\"));\n                return;\n            }\n\n            if( progDe.length === 1 ){\n                $scope.model.isProgrammeDocument = true;\n                $scope.model.programmeDataElement = progDe[0].dataElement;\n            };\n\n            $scope.model.fileDataElement = docDe[0].dataElement;\n            $scope.model.typeDataElement = typeDe[0].dataElement;\n            $scope.model.selectedOptionSet = $scope.model.optionSets[$scope.model.typeDataElement.optionSet.id];\n\n            $scope.model.dynamicHeaders = [];\n            $scope.model.dataElements = [];\n            angular.forEach(prDes, function(prDe){\n                $scope.model.dataElements[prDe.dataElement.id] = prDe.dataElement;\n                if( prDe.dataElement.valueType !== 'FILE_RESOURCE' && !prDe.dataElement.isDocumentFolder && !prDe.dataElement.isProgrammeDocument){\n                    $scope.model.dynamicHeaders.push(prDe.dataElement);\n                }\n            });\n\n            if( !$scope.model.selectedOptionSet || $scope.model.selectedOptionSet.lenth === 0 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_document_types\"));\n                return;\n            }\n\n            $scope.fetchEvents();\n        }\n    };\n\n    $scope.fetchEvents = function(){\n\n        if( $scope.selectedOrgUnit && $scope.selectedOrgUnit.id && $scope.model.selectedProgram && $scope.model.selectedProgram.id ){\n\n            DocumentService.getByOrgUnitAndProgram($scope.selectedOrgUnit.id,\n            'DESCENDANTS',\n            $scope.model.selectedProgram.id,\n            $scope.model.typeDataElement,\n            $scope.model.fileDataElement,\n            $scope.model.optionSets,\n            $scope.model.dataElements).then(function(events){\n                $scope.model.documents = events;\n            });\n        }\n    };\n\n    $scope.downloadFile = function(path, e){\n        if( path ){\n            $window.open(DHIS2URL + path, '_blank', '');\n        }\n        if(e){\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.loadProgramDetails();\n            }\n        });\n    };\n\n    $scope.resetView = function(){\n        $scope.model.selectedProgram = null;\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n        $scope.resetTheView = function(menu, $event) {\n                    $scope.model.horizontalMenus.forEach(function(m) {\n                      m.active = false;\n                    });\n\n                    menu.active = true;\n\n                    $scope.currentView = menu.view;\n                  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/library/library-controller.js","/* Controllers */\n\n/* global ndpFramework */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('LLGController',\n        function($scope,\n        $translate,\n        $modal,\n        $filter,\n        NotificationService,\n        SelectedMenuService,\n        orderByFilter,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        Analytics,\n        OptionComboService,\n        OrgUnitGroupSetService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        sectors: [],\n        selectedVote: null,\n        selectedSector: null,\n        interventions: [],\n        objectives: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly'\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'physicalPerformance', title: 'physical_performance', order: 1, view: 'components/llg/physical-performance.html', active: true, class: 'main-horizontal-menu'},\n        //{id: 'budgetPerformance', title: 'budget_performance', order: 2, view: 'components/llg/budget-performance.html', class: 'main-horizontal-menu'},\n        {id: 'financialPerformance', title: 'financial_performance', order: 2, view: 'components/llg/finance-performance.html', class: 'main-horizontal-menu'},\n        {id: 'dashboard', title: 'dashboard', order: 3, view: 'components/llg/dashboard.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('selectedOrgUnit', function(){\n        $scope.resetDataView();\n        if( angular.isObject($scope.selectedOrgUnit) && $scope.selectedOrgUnit.id){\n            OrgUnitGroupSetService.getByVote( $scope.selectedOrgUnit.id ).then(function(data){\n                $scope.model.selectedVote = data;\n                $scope.getInterventions();\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedNDP', function(){\n        $scope.model.selectedNdpProgram = null;\n        $scope.model.ndpProgram = null;\n        $scope.model.objectives = [];\n        $scope.model.subPrograms = [];\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedNDP) && $scope.model.selectedNDP.id && $scope.model.selectedNDP.code){\n            $scope.model.ndpProgram = $filter('getFirst')($scope.model.optionSets, {ndp: $scope.model.selectedNDP.code, isNDPProgramme: true}, true);\n\n            $scope.getInterventions();\n        }\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.model.objectives = [];\n        $scope.model.subPrograms = [];\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                $scope.model.objectives = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp, indicatorGroupSetType: $scope.model.selectedMenu.code, ndpProgramme: $scope.model.selectedNdpProgram.code}, true);\n                $scope.model.subPrograms = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp, indicatorGroupSetType: 'sub-programme', ndpProgramme: $scope.model.selectedNdpProgram.code}, true);\n                $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.objectives );\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        $scope.model.selectedIntervention = null;\n        if( $scope.model.selectedObjective ){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {programObjective: $scope.model.selectedObjective});\n            angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.interventions );\n            angular.forEach($scope.model.interventions, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedIntervention', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedIntervention) && $scope.model.selectedIntervention.id){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedIntervention.id});\n            angular.forEach($scope.model.selectedIntervention.dataElementGroups, function(deg){\n                $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n            });\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.interventions );\n            angular.forEach($scope.model.interventions, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = null;\n\n        OrgUnitGroupSetService.getByGroup('llg').then(function(llgs){\n            $scope.model.llgs = llgs;\n\n            MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n                angular.forEach(legendSets, function(legendSet){\n                    if ( legendSet.isTrafficLight ){\n                        $scope.model.defaultLegendSet = legendSet;\n                    }\n                    $scope.model.legendSetsById[legendSet.id] = legendSet;\n                });\n\n                MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                    $scope.model.optionSets = optionSets;\n\n                    angular.forEach(optionSets, function(optionSet){\n                        $scope.model.optionSetsById[optionSet.id] = optionSet;\n                    });\n\n                    $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                    if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                        NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                        return;\n                    }\n\n                    OptionComboService.getBtaDimensions().then(function( bta ){\n\n                        if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                            return;\n                        }\n\n                        $scope.model.bta = bta;\n                        $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                        $scope.model.actualDimension = null;\n                        $scope.model.targetDimension = null;\n                        $scope.model.baselineDimension = null;\n                        angular.forEach(bta.options, function(op){\n                            if ( op.dimensionType === 'actual' ){\n                                $scope.model.actualDimension = op;\n                            }\n                            if ( op.dimensionType === 'target' ){\n                                $scope.model.targetDimension = op;\n                            }\n                            if ( op.dimensionType === 'baseline' ){\n                                $scope.model.baselineDimension = op;\n                            }\n                        });\n\n                        MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                            $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                                map[obj.id] = obj;\n                                return map;\n                            }, {});\n\n\n                            MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                                $scope.model.dataElementGroups = dataElementGroups;\n\n                                MetaDataFactory.getAll('dataElementGroupSets').then(function(dataElementGroupSets){\n\n                                    $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                                    var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                    $scope.model.allPeriods = angular.copy( periods );\n                                    $scope.model.periods = periods;\n\n                                    var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                                    angular.forEach($scope.model.periods, function(pe){\n                                        if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                           $scope.model.selectedPeriods.push(pe);\n                                        }\n                                    });\n\n                                    $scope.model.metaDataCached = true;\n\n                                    $scope.populateMenu();\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp ){\n            $scope.model.selectedNDP = $filter('getFirst')($scope.model.ndp.options, {code: $scope.model.selectedMenu.ndp});\n        }\n    };\n\n    $scope.getObjectives = function(){\n        $scope.model.objectives = [];\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            if ( degs.programObjective && $scope.model.objectives.indexOf(degs.programObjective) === -1 ){\n                $scope.model.objectives.push( degs.programObjective );\n            }\n            angular.forEach(degs.dataElementGroups, function(deg){\n                $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n            });\n        });\n    };\n\n    $scope.getInterventions = function(){\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.model.objectives = [];\n        $scope.model.dataElementGroup = [];\n\n        if( $scope.model.selectedVote && $scope.model.selectedVote.dataSets.length > 0 ){\n            var groupSetIds = [];\n            angular.forEach($scope.model.selectedVote.dataSets,function(ds){\n                angular.forEach(ds.dataSetElements,function(dse){\n                    angular.forEach(dse.dataElement.dataElementGroups,function(deg){\n                        angular.forEach(deg.groupSets,function(degs){\n                            if(groupSetIds.indexOf(degs.id) === -1 ){\n                                groupSetIds.push(degs.id);\n                            }\n                        });\n                    });\n                });\n            });\n\n            angular.forEach(groupSetIds,function(groupSetId){\n                $scope.model.selectedDataElementGroupSets.push( $filter('filter')($scope.model.dataElementGroupSets, {id: groupSetId})[0] );\n            });\n\n            if( $scope.model.selectedNDP && $scope.model.selectedNDP.code ){\n                $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.selectedDataElementGroupSets, {indicatorGroupSetType: 'intervention', ndp: $scope.model.selectedNDP.code}, true);\n            }\n            else{\n                $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.selectedDataElementGroupSets, {indicatorGroupSetType: 'intervention'}, true);\n            }\n\n            $scope.getOutputs();\n        }\n    };\n\n    $scope.getOutputs = function(){\n        $scope.model.selectedDataElementGroupSets = $scope.model.selectedDataElementGroupSets.filter(function(obj){\n            return obj.dataElementGroups && obj.dataElementGroups.length && obj.dataElementGroups.length > 0;\n        });\n\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'output', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    $scope.resetView = function(horizontalMenu){\n        $scope.model.activeHorizontalMenu = horizontalMenu;\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n    };\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_invervention\"));\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            Analytics.getData( analyticsUrl ).then(function(data){\n                if( data && data.data && data.metaData ){\n                    $scope.model.data = data.data;\n                    $scope.model.metaData = data.metaData;\n                    $scope.model.reportReady = true;\n                    $scope.model.reportStarted = false;\n\n                    var dataParams = {\n                        data: data.data,\n                        metaData: data.metaData,\n                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                        bta: $scope.model.bta,\n                        actualDimension: $scope.model.actualDimension,\n                        targetDimension: $scope.model.targetDimension,\n                        baselineDimension: $scope.model.baselineDimension,\n                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                        selectedDataElementGroup: $scope.model.selectedKra,\n                        dataElementGroups: $scope.model.dataElementGroups,\n                        basePeriod: $scope.model.basePeriod,\n                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                        allPeriods: $scope.model.allPeriods,\n                        dataElementsById: $scope.model.dataElementsById,\n                        cost: $scope.model.cost,\n                        legendSetsById: $scope.model.legendSetsById,\n                        defaultLegendSet: $scope.model.defaultLegendSet\n                    };\n\n                    var processedData = Analytics.processData( dataParams );\n\n                    $scope.model.dataHeaders = processedData.dataHeaders;\n                    $scope.model.reportPeriods = processedData.reportPeriods;\n                    $scope.model.dataExists = processedData.dataExists || false;\n                    $scope.model.resultData = processedData.resultData || [];\n                    $scope.model.performanceData = processedData.performanceData || [];\n                    $scope.model.physicalPerformanceData = processedData.physicalPerformanceData || [];\n                    $scope.model.cumulativeData = processedData.cumulativeData || [];\n                }\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return $scope.model.llgs;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.filterData = function(header, dataElement){\n        if(!header || !$scope.model.data || !header.periodId || !header.dimensionId || !dataElement) return;\n        var res = $filter('filter')($scope.model.data, {dx: dataElement, Duw5yep8Vae: header.dimensionId, pe: header.periodId})[0];\n        return res && res.value ? res.value : '';\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - interventions\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/llg/llg-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('LOGController',\n        function($scope,\n        $translate,\n        $modal,\n        $filter,\n        NotificationService,\n        SelectedMenuService,\n        orderByFilter,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        Analytics,\n        OptionComboService,\n        OrgUnitGroupSetService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        sectors: [],\n        selectedVote: null,\n        selectedSector: null,\n        interventions: [],\n        objectives: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly'\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'physicalPerformance', title: 'physical_performance', order: 1, view: 'components/log/physical-performance.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'budgetPerformance', title: 'budget_performance', order: 2, view: 'components/log/budget-performance.html', class: 'main-horizontal-menu'},\n        {id: 'dashboard', title: 'dashboard', order: 3, view: 'components/log/dashboard.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('selectedOrgUnit', function(){\n        $scope.resetDataView();\n        if( angular.isObject($scope.selectedOrgUnit) && $scope.selectedOrgUnit.id){\n            OrgUnitGroupSetService.getByVote( $scope.selectedOrgUnit.id ).then(function(data){\n                $scope.model.selectedVote = data;\n                $scope.getInterventions();\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.voteDataElementGroupSets );\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.voteDataElementGroupSets, {ndpProgramme: $scope.model.selectedNdpProgram.code}, true);\n            }\n        }\n        $scope.getOutputs();\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        $scope.model.selectedIntervention = null;\n        if( $scope.model.selectedObjective ){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {programObjective: $scope.model.selectedObjective});\n            angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.interventions );\n            angular.forEach($scope.model.interventions, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedIntervention', function(){\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedIntervention) && $scope.model.selectedIntervention.id){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedIntervention.id});\n            angular.forEach($scope.model.selectedIntervention.dataElementGroups, function(deg){\n                $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n            });\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.interventions );\n            angular.forEach($scope.model.interventions, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    $scope.model.dataElementGroup.push( $filter('filter')($scope.model.dataElementGroups, {id: deg.id})[0] );\n                });\n            });\n        }\n    });\n\n    dhis2.ndp.downloadGroupSets( 'intervention' ).then(function(){\n\n        //Get orgunits for the logged in user\n        OrgUnitFactory.getViewTreeRoot().then(function(response) {\n            $scope.orgUnits = response.organisationUnits;\n            angular.forEach($scope.orgUnits, function(ou){\n                ou.show = true;\n                angular.forEach(ou.children, function(o){\n                    o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                });\n            });\n            $scope.selectedOrgUnit = null;\n\n            OrgUnitGroupSetService.getByGroup('lg').then(function(lgs){\n                $scope.model.lgs = lgs;\n\n                MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n                    angular.forEach(legendSets, function(legendSet){\n                        if ( legendSet.isTrafficLight ){\n                            $scope.model.defaultLegendSet = legendSet;\n                        }\n                        $scope.model.legendSetsById[legendSet.id] = legendSet;\n                    });\n\n                    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                        $scope.model.optionSets = optionSets;\n\n                        angular.forEach(optionSets, function(optionSet){\n                            $scope.model.optionSetsById[optionSet.id] = optionSet;\n                        });\n\n                        $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                        if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.resultsFrameworkLevel = $filter('getFirst')($scope.model.optionSets, {code: 'RFL'});\n                        if( !$scope.model.resultsFrameworkLevel || !$scope.model.resultsFrameworkLevel.code ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_results_framework_level_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n                        if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.piapResultsChainByCode = $scope.model.piapResultsChain.options.reduce( function(map, obj){\n                            map[obj.code] = obj;\n                            return map;\n                        }, {});\n\n                        $scope.model.ndpProgrammes = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'PR'}, true);\n                        $scope.model.subProgrammes = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'S'}, true);\n                        $scope.model.piapObjectives = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'O'}, true);\n                        $scope.model.interventions = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'IN'}, true);\n\n                        OptionComboService.getBtaDimensions().then(function( bta ){\n\n                            if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                                return;\n                            }\n\n                            $scope.model.bta = bta;\n                            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                            $scope.model.actualDimension = null;\n                            $scope.model.targetDimension = null;\n                            $scope.model.baselineDimension = null;\n                            angular.forEach(bta.options, function(op){\n                                if ( op.dimensionType === 'actual' ){\n                                    $scope.model.actualDimension = op;\n                                }\n                                if ( op.dimensionType === 'target' ){\n                                    $scope.model.targetDimension = op;\n                                }\n                                if ( op.dimensionType === 'baseline' ){\n                                    $scope.model.baselineDimension = op;\n                                }\n                            });\n\n                            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                                    map[obj.id] = obj;\n                                    return map;\n                                }, {});\n\n\n                                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n                                    $scope.model.dataElementGroups = dataElementGroups;\n\n                                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'intervention').then(function(dataElementGroupSets){\n                                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n                                        $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                        $scope.model.allPeriods = angular.copy( periods );\n                                        $scope.model.periods = periods;\n\n                                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                                        angular.forEach($scope.model.periods, function(pe){\n                                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                               $scope.model.selectedPeriods.push(pe);\n                                            }\n                                        });\n\n                                        $scope.model.metaDataCached = true;\n                                        $scope.populateMenu();\n                                    });\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            $scope.model.ndpProgram = $filter('getFirst')($scope.model.optionSets, {ndp: $scope.model.selectedMenu.ndp, isNDPProgramme: true}, true);\n        }\n    };\n\n    $scope.getInterventions = function(){\n        $scope.model.voteDataElementGroupSets = [];\n        $scope.model.objectives = [];\n        $scope.model.dataElementGroup = [];\n        if( $scope.model.selectedVote && $scope.model.selectedVote.dataSets.length > 0 ){\n            var groupSetIds = [];\n            angular.forEach($scope.model.selectedVote.dataSets,function(ds){\n                angular.forEach(ds.dataSetElements,function(dse){\n                    angular.forEach(dse.dataElement.dataElementGroups,function(deg){\n                        angular.forEach(deg.groupSets,function(degs){\n                            if(groupSetIds.indexOf(degs.id) === -1 ){\n                                groupSetIds.push(degs.id);\n                            }\n                        });\n                    });\n                });\n            });\n\n            angular.forEach(groupSetIds,function(groupSetId){\n                var degs = $filter('getFirst')($scope.model.dataElementGroupSets, {id: groupSetId}, true);\n                if ( degs && degs.id ){\n                    $scope.model.voteDataElementGroupSets.push( degs );\n                }\n            });\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.voteDataElementGroupSets );\n            $scope.getOutputs();\n        }\n    };\n\n    $scope.getOutputs = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('getFirst')($scope.model.dataElementGroups, {indicatorGroupType: 'output', id: deg.id}, true);\n                if ( _deg && _deg.id ){\n                    $scope.model.dataElementGroup.push( _deg );\n                }\n            });\n        });\n    };\n\n    $scope.resetView = function(horizontalMenu){\n        $scope.model.activeHorizontalMenu = horizontalMenu;\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n    };\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_invervention\"));\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            Analytics.getData( analyticsUrl ).then(function(data){\n                if( data && data.data && data.metaData ){\n                    $scope.model.data = data.data;\n                    $scope.model.metaData = data.metaData;\n                    $scope.model.reportReady = true;\n                    $scope.model.reportStarted = false;\n\n                    var dataParams = {\n                        data: data.data,\n                        metaData: data.metaData,\n                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                        bta: $scope.model.bta,\n                        actualDimension: $scope.model.actualDimension,\n                        targetDimension: $scope.model.targetDimension,\n                        baselineDimension: $scope.model.baselineDimension,\n                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                        selectedDataElementGroup: $scope.model.selectedKra,\n                        dataElementGroups: $scope.model.dataElementGroups,\n                        basePeriod: $scope.model.basePeriod,\n                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                        allPeriods: $scope.model.allPeriods,\n                        dataElementsById: $scope.model.dataElementsById,\n                        cost: $scope.model.cost,\n                        legendSetsById: $scope.model.legendSetsById,\n                        defaultLegendSet: $scope.model.defaultLegendSet\n                    };\n\n                    var processedData = Analytics.processData( dataParams );\n\n                    $scope.model.dataHeaders = processedData.dataHeaders;\n                    $scope.model.reportPeriods = processedData.reportPeriods;\n                    $scope.model.dataExists = processedData.dataExists || false;\n                    $scope.model.resultData = processedData.resultData || [];\n                    $scope.model.performanceData = processedData.performanceData || [];\n                    $scope.model.physicalPerformanceData = processedData.physicalPerformanceData || [];\n                    $scope.model.cumulativeData = processedData.cumulativeData || [];\n                }\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return $scope.model.lgs;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.filterData = function(header, dataElement){\n        if(!header || !$scope.model.data || !header.periodId || !header.dimensionId || !dataElement) return;\n        var res = $filter('filter')($scope.model.data, {dx: dataElement, Duw5yep8Vae: header.dimensionId, pe: header.periodId})[0];\n        return res && res.value ? res.value : '';\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - interventions\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/log/log-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('MDAController',\n        function($scope,\n        $translate,\n        $modal,\n        $filter,\n        NotificationService,\n        SelectedMenuService,\n        orderByFilter,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        Analytics,\n        ResulstChainService,\n        OptionComboService,\n        OrgUnitGroupSetService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        sectors: [],\n        selectedVote: null,\n        selectedSector: null,\n        interventions: [],\n        objectives: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly'\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'physicalPerformance', title: 'physical_performance', order: 1, view: 'components/mda/physical-performance.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'budgetPerformance', title: 'budget_performance', order: 2, view: 'components/mda/budget-performance.html', class: 'main-horizontal-menu'},\n        {id: 'dashboard', title: 'dashboard', order: 4, view: 'components/mda/dashboard.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('selectedOrgUnit', function(){\n        $scope.resetDataView();\n        if( angular.isObject($scope.selectedOrgUnit) && $scope.selectedOrgUnit.id){\n            OrgUnitGroupSetService.getByVote( $scope.selectedOrgUnit.id ).then(function(data){\n                $scope.model.selectedVote = data;\n                $scope.getInterventions();\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                $scope.model.subProgrammes = $filter('startsWith')($scope.model.subProgrammes, {code: $scope.model.selectedNdpProgram.code});\n                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedNdpProgram.code});\n                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedNdpProgram.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedSubProgramme', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedSubProgramme) ){\n            if( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedSubProgramme.code});\n                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedSubProgramme.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedObjective) ){\n            if( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedObjective.code});\n            }\n        }\n    });\n\n    dhis2.ndp.downloadGroupSets( 'sub-intervention' ).then(function(){\n\n        //Get orgunits for the logged in user\n        OrgUnitFactory.getViewTreeRoot().then(function(response) {\n            $scope.orgUnits = response.organisationUnits;\n            angular.forEach($scope.orgUnits, function(ou){\n                ou.show = true;\n                angular.forEach(ou.children, function(o){\n                    o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                });\n            });\n            $scope.selectedOrgUnit = null;\n\n            OrgUnitGroupSetService.getByGroup('mda').then(function(mdas){\n                $scope.model.mdas = mdas;\n\n                MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n                    angular.forEach(legendSets, function(legendSet){\n                        if ( legendSet.isTrafficLight ){\n                            $scope.model.defaultLegendSet = legendSet;\n                        }\n                        $scope.model.legendSetsById[legendSet.id] = legendSet;\n                    });\n\n                    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                        $scope.model.optionSets = optionSets;\n\n                        angular.forEach(optionSets, function(optionSet){\n                            $scope.model.optionSetsById[optionSet.id] = optionSet;\n                        });\n\n                        $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                        if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n                        if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n                            return;\n                        }\n\n                        ResulstChainService.getByOptionSet( $scope.model.piapResultsChain.id ).then(function(chain){\n                            $scope.model.resultsFrameworkChain = chain;\n                            $scope.model.ndpProgrammes = $scope.model.resultsFrameworkChain.programs;\n                            $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n                            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n                            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n\n                            OptionComboService.getBtaDimensions().then(function( bta ){\n\n                                if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                                    return;\n                                }\n\n                                $scope.model.bta = bta;\n                                $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                                $scope.model.actualDimension = null;\n                                $scope.model.targetDimension = null;\n                                $scope.model.baselineDimension = null;\n                                angular.forEach(bta.options, function(op){\n                                    if ( op.dimensionType === 'actual' ){\n                                        $scope.model.actualDimension = op;\n                                    }\n                                    if ( op.dimensionType === 'target' ){\n                                        $scope.model.targetDimension = op;\n                                    }\n                                    if ( op.dimensionType === 'baseline' ){\n                                        $scope.model.baselineDimension = op;\n                                    }\n                                });\n\n                                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                                    $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                                        map[obj.id] = obj;\n                                        return map;\n                                    }, {});\n\n                                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                                        $scope.model.dataElementGroups = dataElementGroups;\n\n                                        MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-intervention').then(function(dataElementGroupSets){\n                                            $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                                            var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                            $scope.model.allPeriods = angular.copy( periods );\n                                            $scope.model.periods = periods;\n\n                                            var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                                            angular.forEach($scope.model.periods, function(pe){\n                                                if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                                   $scope.model.selectedPeriods.push(pe);\n                                                }\n                                            });\n\n                                            $scope.model.metaDataCached = true;\n                                            $scope.populateMenu();\n\n                                            /*$scope.model.dashboardName = 'Sub-Programme Outputs';\n                                            DashboardService.getByName( $scope.model.dashboardName ).then(function( result ){\n                                                $scope.model.dashboardItems = result.dashboardItems;\n                                                $scope.model.charts = result.charts;\n                                                $scope.model.tables = result.tables;\n                                                $scope.model.maps = result.maps;\n                                                $scope.model.dashboardFetched = true;\n                                            });*/\n                                        });\n                                    });\n                                });\n\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    /*dhis2.ndp.downloadGroupSets( 'intervention' ).then(function(){\n\n        //Get orgunits for the logged in user\n        OrgUnitFactory.getViewTreeRoot().then(function(response) {\n            $scope.orgUnits = response.organisationUnits;\n            angular.forEach($scope.orgUnits, function(ou){\n                ou.show = true;\n                angular.forEach(ou.children, function(o){\n                    o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                });\n            });\n            $scope.selectedOrgUnit = null;\n\n            OrgUnitGroupSetService.getByGroup('mda').then(function(mdas){\n                $scope.model.mdas = mdas;\n\n                MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n                    angular.forEach(legendSets, function(legendSet){\n                        if ( legendSet.isTrafficLight ){\n                            $scope.model.defaultLegendSet = legendSet;\n                        }\n                        $scope.model.legendSetsById[legendSet.id] = legendSet;\n                    });\n\n                    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                        $scope.model.optionSets = optionSets;\n\n                        angular.forEach(optionSets, function(optionSet){\n                            $scope.model.optionSetsById[optionSet.id] = optionSet;\n                        });\n\n                        $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                        if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.resultsFrameworkLevel = $filter('getFirst')($scope.model.optionSets, {code: 'RFL'});\n                        if( !$scope.model.resultsFrameworkLevel || !$scope.model.resultsFrameworkLevel.code ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_results_framework_level_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n                        if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n                            return;\n                        }\n\n                        $scope.model.piapResultsChainByCode = $scope.model.piapResultsChain.options.reduce( function(map, obj){\n                            map[obj.code] = obj;\n                            return map;\n                        }, {});\n\n                        $scope.model.ndpProgrammes = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'PR'}, true);\n                        $scope.model.subProgrammes = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'S'}, true);\n                        $scope.model.piapObjectives = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'O'}, true);\n                        $scope.model.interventions = $filter('filter')($scope.model.piapResultsChain.options, {resultsFrameworkLevel: 'IN'}, true);\n\n                        OptionComboService.getBtaDimensions().then(function( bta ){\n\n                            if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                                return;\n                            }\n\n                            $scope.model.bta = bta;\n                            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                            $scope.model.actualDimension = null;\n                            $scope.model.targetDimension = null;\n                            $scope.model.baselineDimension = null;\n                            angular.forEach(bta.options, function(op){\n                                if ( op.dimensionType === 'actual' ){\n                                    $scope.model.actualDimension = op;\n                                }\n                                if ( op.dimensionType === 'target' ){\n                                    $scope.model.targetDimension = op;\n                                }\n                                if ( op.dimensionType === 'baseline' ){\n                                    $scope.model.baselineDimension = op;\n                                }\n                            });\n\n                            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                                    map[obj.id] = obj;\n                                    return map;\n                                }, {});\n\n\n                                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n                                    $scope.model.dataElementGroups = dataElementGroups;\n\n                                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'intervention').then(function(dataElementGroupSets){\n                                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n                                        $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                        $scope.model.allPeriods = angular.copy( periods );\n                                        $scope.model.periods = periods;\n\n                                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                                        angular.forEach($scope.model.periods, function(pe){\n                                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                               $scope.model.selectedPeriods.push(pe);\n                                            }\n                                        });\n\n                                        $scope.model.metaDataCached = true;\n                                        $scope.populateMenu();\n                                    });\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });*/\n\n    $scope.populateMenu = function(){\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            $scope.model.ndpProgram = $filter('getFirst')($scope.model.optionSets, {ndp: $scope.model.selectedMenu.ndp, isNDPProgramme: true}, true);\n        }\n    };\n\n    $scope.getInterventions = function(){\n        $scope.model.voteDataElementGroupSets = [];\n        $scope.model.objectives = [];\n        $scope.model.dataElementGroup = [];\n        if( $scope.model.selectedVote && $scope.model.selectedVote.dataSets.length > 0 ){\n            var groupSetIds = [];\n            angular.forEach($scope.model.selectedVote.dataSets,function(ds){\n                angular.forEach(ds.dataSetElements,function(dse){\n                    angular.forEach(dse.dataElement.dataElementGroups,function(deg){\n                        angular.forEach(deg.groupSets,function(degs){\n                            if(groupSetIds.indexOf(degs.id) === -1 ){\n                                groupSetIds.push(degs.id);\n                            }\n                        });\n                    });\n                });\n            });\n\n            angular.forEach(groupSetIds,function(groupSetId){\n                var degs = $filter('getFirst')($scope.model.dataElementGroupSets, {id: groupSetId}, true);\n                if ( degs && degs.id ){\n                    $scope.model.voteDataElementGroupSets.push( degs );\n                }\n            });\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.voteDataElementGroupSets );\n            $scope.getOutputs();\n        }\n    };\n\n    $scope.getOutputs = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'output', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    $scope.resetView = function(horizontalMenu){\n        $scope.model.activeHorizontalMenu = horizontalMenu;\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n    };\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        var selectedResultsLevel = $scope.model.selectedNdpProgram.code;\n\n        if ( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n            selectedResultsLevel = $scope.model.selectedSubProgramme.code;\n        }\n\n        if ( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n            selectedResultsLevel = $scope.model.selectedObjective.code;\n        }\n\n        if ( $scope.model.selectedIntervention && $scope.model.selectedIntervention.code ){\n            selectedResultsLevel = $scope.model.selectedIntervention.code;\n        }\n\n        $scope.model.selectedDataElementGroupSets = $filter('startsWith')($scope.model.dataElementGroupSets, {code: selectedResultsLevel});\n        $scope.getOutputs();\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_output\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            Analytics.getData( analyticsUrl ).then(function(data){\n                if( data && data.data && data.metaData ){\n                    $scope.model.data = data.data;\n                    $scope.model.metaData = data.metaData;\n                    $scope.model.reportReady = true;\n                    $scope.model.reportStarted = false;\n\n                    var dataParams = {\n                        data: data.data,\n                        metaData: data.metaData,\n                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                        bta: $scope.model.bta,\n                        actualDimension: $scope.model.actualDimension,\n                        targetDimension: $scope.model.targetDimension,\n                        baselineDimension: $scope.model.baselineDimension,\n                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                        selectedDataElementGroup: $scope.model.selectedKra,\n                        dataElementGroups: $scope.model.dataElementGroups,\n                        basePeriod: $scope.model.basePeriod,\n                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                        allPeriods: $scope.model.allPeriods,\n                        dataElementsById: $scope.model.dataElementsById,\n                        cost: $scope.model.cost,\n                        legendSetsById: $scope.model.legendSetsById,\n                        defaultLegendSet: $scope.model.defaultLegendSet\n                    };\n\n                    var processedData = Analytics.processData( dataParams );\n\n                    $scope.model.dataHeaders = processedData.dataHeaders;\n                    $scope.model.reportPeriods = processedData.reportPeriods;\n                    $scope.model.dataExists = processedData.dataExists || false;\n                    $scope.model.resultData = processedData.resultData || [];\n                    $scope.model.performanceData = processedData.performanceData || [];\n                    $scope.model.physicalPerformanceData = processedData.physicalPerformanceData || [];\n                    $scope.model.cumulativeData = processedData.cumulativeData || [];\n                }\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return $scope.model.mdas;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.filterData = function(header, dataElement){\n        if(!header || !$scope.model.data || !header.periodId || !header.dimensionId || !dataElement) return;\n        var res = $filter('filter')($scope.model.data, {dx: dataElement, Duw5yep8Vae: header.dimensionId, pe: header.periodId})[0];\n        return res && res.value ? res.value : '';\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - interventions\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/mda/mda-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('ObjectiveController',\n    function($rootScope,\n        $scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        Analytics,\n        CommonUtils,\n        FinancialDataService,\n        DataValueService) {\n\n    $scope.showReportFilters = false;\n    \n    $rootScope.DHIS2URL = env.dhisConfig.apiRoot;\n    \n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        dataElements: [],\n        dataElementsById: [],\n        kra: [],\n        objectives: [],\n        selectedKra: null,\n        selectedObjective: null,\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        baseLineTargetActualDimensions: [],\n        performanceOverviewHeaders: [],\n        dataSetsById: {},\n        categoryCombosById: {},\n        optionSets: [],\n        optionSetsById: [],\n        dictionaryItems: [],\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n//        selectedPeriodType: 'FinancialJuly',\n        selectedPeriodType: 'Yearly',\n        groupSetSize: {},\n        physicalPerformance: true,\n        financialPerformance: true,\n        showProjectDetails: false,\n        showExplanation: false,\n        explanations: [],\n        commentRow: {}\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'target', title: 'targets', order: 1, view: 'components/objective/results.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/objective/physical-performance.html', class: 'main-horizontal-menu'},\n        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/objective/performance-overview.html', class: 'main-horizontal-menu'},\n        {id: 'completeness', title: 'completeness', order: 4, view: 'components/objective/completeness.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.model.selectedKra = null;\n        $scope.model.kras = [];\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedObjective) && $scope.model.selectedObjective.id){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedObjective.id});\n            angular.forEach($scope.model.selectedObjective.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n\n            $scope.model.kras = $scope.model.selectedObjective.dataElementGroups;\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n            angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                    if ( _deg.length > 0 ){\n                        $scope.model.dataElementGroup.push( _deg[0] );\n                    }\n                });\n            });\n        }\n    });\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedKra', function(){\n        $scope.resetDataView();\n        $scope.model.dataElementGroup = [];\n        if( angular.isObject($scope.model.selectedKra) && $scope.model.selectedKra.id){\n            var _deg = $filter('filter')($scope.model.dataElementGroups, {id: $scope.model.selectedKra.id});\n            if ( _deg.length > 0 ){\n                $scope.model.dataElementGroup.push( _deg[0] );\n            }\n            $scope.getAnalyticsData();\n        }\n        else{\n            $scope.getObjectives();\n        }\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n\n    };\n\n    $scope.getObjectives = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    dhis2.ndp.downloadGroupSets( 'resultsFrameworkObjective' ).then(function(){\n\n        OptionComboService.getBtaDimensions().then(function( response ){\n\n            if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                return;\n            }\n\n            $scope.model.bta = response.bta;\n            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n            $scope.model.actualDimension = response.actual;\n            $scope.model.targetDimension = response.target;\n            $scope.model.baselineDimension = response.baseline;\n\n            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                    map[obj.id] = obj;\n                    return map;\n                }, {});\n\n                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                    $scope.model.dataElementGroups = dataElementGroups;\n\n                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'resultsframeworkobjective').then(function(dataElementGroupSets){\n                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n                        $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                        $scope.model.allPeriods = angular.copy( periods );\n                        $scope.model.periods = periods;\n\n//                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n                        var selectedPeriodNames = ['2023', '2024', '2025', '2026', '2027'];\n\n                        angular.forEach($scope.model.periods, function(pe){\n//                            if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                            if(selectedPeriodNames.indexOf(pe.name) > -1 ){\n                                $scope.model.selectedPeriods.push(pe);\n                            }\n                        });\n\n                        //Get orgunits for the logged in user\n                        OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                            $scope.orgUnits = response.organisationUnits;\n                            angular.forEach($scope.orgUnits, function(ou){\n                                ou.show = true;\n                                angular.forEach(ou.children, function(o){\n                                    o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                                });\n                            });\n                            $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n                            $scope.model.metaDataCached = true;\n                            $scope.populateMenu();\n                            $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedKra = null;\n        $scope.resetDataView();\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n            if( $scope.model.dataElementGroupSets && $scope.model.dataElementGroupSets.length === 1 ){\n                $scope.model.selectedObjective = $scope.model.dataElementGroupSets[0];\n            }\n            else{\n                $scope.getObjectives();\n            }\n        }\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.dataElementGroup || $scope.model.dataElementGroup.length === 0){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_objective\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n            var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n            $scope.model.pHeadersLength = pHeaders.length;\n            var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            $scope.model.performanceOverviewHeaders = [];\n            angular.forEach(prds, function(pe){\n                angular.forEach( pHeaders, function(p){\n                    var h = angular.copy( p );\n                    h.period = pe.id;\n                    $scope.model.performanceOverviewHeaders.push( h );\n                });\n            });\n\n            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                map[obj.id] = obj;\n                return map;\n            }, {});\n\n            var des = [];\n            $scope.model.theRows = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            FinancialDataService.getLocalData('data/cost.json').then(function(cost){\n                $scope.model.cost = cost;\n                Analytics.getData( analyticsUrl ).then(function(data){\n                    if( data && data.data && data.metaData ){\n                        $scope.model.data = data.data;\n                        $scope.model.metaData = data.metaData;\n                        $scope.model.reportReady = true;\n                        $scope.model.reportStarted = false;\n\n                        var dataParams = {\n                            data: data.data,\n                            metaData: data.metaData,\n                            reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                            bta: $scope.model.bta,\n                            selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementGroups: $scope.model.dataElementGroups,\n                            basePeriod: $scope.model.basePeriod,\n                            targetDimension: $scope.model.targetDimension,\n                            baselineDimension: $scope.model.baselineDimension,\n                            actualDimension: $scope.model.actualDimension,\n                            maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                            allPeriods: $scope.model.allPeriods,\n                            dataElementGroupsById: $scope.model.dataElementGroupsById,\n                            dataElementsById: $scope.model.dataElementsById,\n                            cost: $scope.model.cost,\n                            displayVision2040: true,\n                            performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                            displayActionBudgetData: false\n                        };\n\n                        var processedData = Analytics.processData( dataParams );\n                        $scope.model.dataHeaders = processedData.dataHeaders;\n                        $scope.model.reportPeriods = processedData.reportPeriods;\n                        $scope.model.dataExists = processedData.dataExists;\n                        $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                        $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                        $scope.model.numerator = processedData.completenessNum;\n                        $scope.model.denominator = processedData.completenessDen;\n                        $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                        $scope.model.tableRows = processedData.tableRows;\n                        $scope.model.povTableRows = processedData.povTableRows;\n                        $scope.model.hasEmptyRows = processedData.tableRows.hasEmptyRows;\n                    }\n                });\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedMenu.displayName;\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n    \n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n    $scope.resetTheView = function(menu, $event) {\n            $scope.model.horizontalMenus.forEach(function(m) {\n              m.active = false;\n            });\n\n            menu.active = true;\n\n            $scope.currentView = menu.view;\n          };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/objective/objective-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('OutcomeController',\n    function($rootScope,\n        $scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        Analytics,\n        CommonUtils,\n        DataValueService,\n        FinancialDataService,\n        ClusterDataService,\n        DateUtils) {\n\n    $rootScope.DHIS2URL = env.dhisConfig.apiRoot;\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        dataElementsById: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        ndpProgrammes: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        performanceOverviewHeaders: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        displayProjectOutputs: true,\n        displayDepartmentOutPuts: true,\n        explanations: [],\n        commentRow: {},\n        clusters: []\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'target', title: 'targets', order: 1, view: 'components/outcome/results.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/outcome/physical-performance.html', class: 'main-horizontal-menu'},\n        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/outcome/performance-overview.html', class: 'main-horizontal-menu'},\n        {id: 'clusterPerformance', title: 'cluster_performance', order: 4, view: 'views/cluster/cluster-performance.html', class: 'main-horizontal-menu'},\n        {id: 'completeness', title: 'completeness', order: 5, view: 'components/outcome/completeness.html', class: 'main-horizontal-menu'}\n    ];\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.getOutcomes = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'outcome', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    $scope.$on('MENU', function(){\n        //$scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.resetDataView();\n        $scope.model.objectives = [];\n        $scope.model.selectedDataElementGroupSets = [];\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                var filter = {ndpProgramme: $scope.model.selectedNdpProgram.code};\n                $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, filter, true);\n                $scope.getOutcomes();\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedCluster', function(){\n        $scope.resetDataView();\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            var p = $scope.model.selectedPeriods[0];\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n            $scope.model.basePeriod = res.period;\n            location = res.location;\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    dhis2.ndp.downloadGroupSets( 'objective' ).then(function(){\n\n        MetaDataFactory.getAll('legendSets').then(function(legendSets){\n\n            /*angular.forEach(legendSets, function(legendSet){\n                if ( legendSet.isTrafficLight ){\n                    $scope.model.defaultLegendSet = legendSet;\n                }\n                $scope.model.legendSetsById[legendSet.id] = legendSet;\n            });*/\n\n            MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n                $scope.model.optionSets = optionSets;\n\n                angular.forEach(optionSets, function(optionSet){\n                    $scope.model.optionSetsById[optionSet.id] = optionSet;\n                });\n\n                $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n                if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                    return;\n                }\n\n                OptionComboService.getBtaDimensions().then(function( response ){\n\n                    if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                        NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                        return;\n                    }\n\n                    $scope.model.bta = response.bta;\n                    $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                    $scope.model.actualDimension = response.actual;\n                    $scope.model.targetDimension = response.target;\n                    $scope.model.baselineDimension = response.baseline;\n \n                    MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                        $scope.model.allDataElements = dataElements;\n\n                        $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                            map[obj.id] = obj;\n                            return map;\n                        }, {});\n\n                        MetaDataFactory.getAll('optionGroupSets').then(function(optionGroupSets){\n                            \n                            $scope.model.optionGroupSets = optionGroupSets;\n\n                            MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                                $scope.model.allDataElementGroups = dataElementGroups;\n                                $scope.model.dataElementGroups = dataElementGroups;\n\n                                MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'objective').then(function(dataElementGroupSets){\n                                    $scope.model.dataElementGroupSets = dataElementGroupSets;\n                                    $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, ['-code', '-displayName']).reverse();\n\n                                    var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                                    $scope.model.allPeriods = angular.copy( periods );\n                                    $scope.model.periods = periods;\n                                    \n                                    var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n                                    var today = DateUtils.getToday();\n                                    angular.forEach($scope.model.periods, function(pe){\n                                        if ( pe.startDate <= today && pe.endDate >= today ){\n                                            $scope.model.selectedFiscalYear = pe;\n                                        }\n                                        if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                            $scope.model.selectedPeriods.push(pe);\n                                        }\n                                    });\n\n                                    $scope.model.metaDataCached = true;\n                                    $scope.populateMenu();\n                                    $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n                                });\n                            });                            \n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedNdpProgram = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            var prs = $filter('filter')($scope.model.optionSets, {ndp: $scope.model.selectedMenu.ndp, isNDPProgramme: true}, true);\n            if ( !prs || prs.length !== 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_program_config\") + ' - ' + $scope.model.selectedMenu.ndp );\n                return;\n            }\n            else{\n                $scope.model.ndpProgram = prs[0];\n            }\n\n            var sectorsOpgs = $filter('getFirst')($scope.model.optionGroupSets, {code: $scope.model.selectedMenu.ndp + '_CLUSTER'});\n            \n            $scope.model.clusters = sectorsOpgs && sectorsOpgs.optionGroups ? sectorsOpgs.optionGroups : [];\n//            if( !$scope.model.clusters || !$scope.model.clusters.length || !$scope.model.clusters.length === 0 ){\n//                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_configuration\"));\n//                return;\n//            }\n        }\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.clusterData = null;\n        $scope.model.reportReady = false;\n        $scope.model.clusterReportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_outcome\"));\n            return;\n        }\n\n        $scope.getBasePeriod();\n\n        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n            var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n            $scope.model.pHeadersLength = pHeaders.length;\n            var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            $scope.model.performanceOverviewHeaders = [];\n            angular.forEach(prds, function(pe){\n                angular.forEach( pHeaders, function(p){\n                    var h = angular.copy( p );\n                    h.period = pe.id;\n                    $scope.model.performanceOverviewHeaders.push( h );\n                });\n            });\n\n            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                map[obj.id] = obj;\n                return map;\n            }, {});\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            $scope.model.reportReady = false;\n            $scope.model.reportStarted = true;\n            FinancialDataService.getLocalData('data/cost.json').then(function(cost){\n                $scope.model.cost = cost;\n\n\n                Analytics.getData( analyticsUrl ).then(function(data){\n                    if( data && data.data && data.metaData ){\n                        $scope.model.data = data.data;\n                        $scope.model.metaData = data.metaData;\n                        $scope.model.reportReady = true;\n                        $scope.model.reportStarted = false;\n\n                        var dataParams = {\n                            data: data.data,\n                            metaData: data.metaData,\n                            reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                            bta: $scope.model.bta,\n                            actualDimension: $scope.model.actualDimension,\n                            targetDimension: $scope.model.targetDimension,\n                            baselineDimension: $scope.model.baselineDimension,\n                            selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementGroups: $scope.model.dataElementGroups,\n                            basePeriod: $scope.model.basePeriod,\n                            maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                            allPeriods: $scope.model.allPeriods,\n                            dataElementGroupsById: $scope.model.dataElementGroupsById,\n                            dataElementsById: $scope.model.dataElementsById,\n                            cost: $scope.model.cost,\n                            legendSetsById: $scope.model.legendSetsById,\n                            defaultLegendSet: $scope.model.defaultLegendSet,\n                            performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                            displayActionBudgetData: false\n                        };\n\n                        var processedData = Analytics.processData( dataParams );\n                        $scope.model.dataHeaders = processedData.dataHeaders;\n                        $scope.model.reportPeriods = processedData.reportPeriods;\n                        $scope.model.dataExists = processedData.dataExists;\n                        $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                        $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                        $scope.model.numerator = processedData.completenessNum;\n                        $scope.model.denominator = processedData.completenessDen;\n                        $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                        $scope.model.tableRows = processedData.tableRows;\n                        $scope.model.povTableRows = processedData.povTableRows;\n                    }\n                });\n            });\n        }\n    };\n    \n    $scope.getClusterData = function(){\n        \n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n            return;\n        }\n\n        if( !$scope.model.selectedFiscalYear ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n            return;\n        }\n\n        var params = {\n            indicatorGroupType: 'outcome',\n            selectedOrgUnit: $scope.selectedOrgUnit,\n            selectedCluster: $scope.model.selectedCluster,\n            selectedFiscalYear: $scope.model.selectedFiscalYear,            \n            allDataElementGroups: $scope.model.allDataElementGroups,\n            dataElementGroupSets: $scope.model.dataElementGroupSets,\n            bta: $scope.model.bta,\n            baseLineTargetActualDimensions: $scope.model.baseLineTargetActualDimensions,\n            actualDimension: $scope.model.actualDimension,\n            targetDimension: $scope.model.targetDimension,\n            baselineDimension: $scope.model.baselineDimension,\n            selectedDataElementGroupSets: $scope.model.clusterDataElementGroupSets,\n            selectedDataElementGroup: $scope.model.selectedKra,\n            dataElementsById: $scope.model.dataElementsById,\n            legendSetsById: $scope.model.legendSetsById,\n            defaultLegendSet: $scope.model.defaultLegendSet\n        };\n\n        $scope.model.clusterReportReady = false;\n        $scope.model.clusterReportStarted = true;\n        ClusterDataService.getData( params ).then(function(result){\n            $scope.model.clusterReportReady = true;\n            $scope.model.clusterReportStarted = false;\n            $scope.model.clusterData = result.clusterData;\n            $scope.model.hasClusterData = result.hasClusterData;\n            $scope.model.clusterPerformanceOverviewHeaders = result.clusterPerformanceOverviewHeaders;\n        });        \n    };\n    \n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - objectives\";\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n    \n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/outcome/outcome-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('OutputController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        ResulstChainService,\n        CommonUtils,\n        DataValueService,\n        Analytics,\n        ClusterDataService,\n        DateUtils) {\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        dataElementsById: [],\n        optionSetsById: [],\n        optionSets: [],\n        legendSetsById: [],\n        defaultLegendSet: null,\n        objectives: [],\n        ndpObjectives: [],\n        ndpProgrammes: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        performanceOverviewHeaders: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        selectedSubProgramme: null,\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n//        selectedPeriodType: 'FinancialJuly',\n        selectedPeriodType: 'Yearly',\n        explanations: [],\n        commentRow: {}\n    };\n\n//    $scope.model.horizontalMenus = [\n//        {id: 'result', title: 'targets', order: 1, view: 'components/output/results.html', active: true, class: 'main-horizontal-menu'},\n//        {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/output/physical-performance.html', class: 'main-horizontal-menu'},\n//        {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/output/performance-overview.html', class: 'main-horizontal-menu'},\n//        {id: 'clusterPerformance', title: 'cluster_performance', order: 4, view: 'views/cluster/cluster-performance.html', class: 'main-horizontal-menu'},\n//        {id: 'completeness', title: 'completeness', order: 5, view: 'components/output/completeness.html', class: 'main-horizontal-menu'}\n//    ];\n\n      $scope.model.horizontalMenus = [\n            {id: 'result', title: 'targets', order: 1, view: 'components/output/results.html', active: true, class: 'main-horizontal-menu'},\n            {id: 'physicalPerformance', title: 'performance', order: 2, view: 'components/output/physical-performance.html', class: 'main-horizontal-menu'},\n            {id: 'performanceOverview', title: 'performance_overview', order: 3, view: 'components/output/performance-overview.html', class: 'main-horizontal-menu'},\n            {id: 'completeness', title: 'completeness', order: 4, view: 'components/output/completeness.html', class: 'main-horizontal-menu'}\n        ];\n\n          $scope.$on('MENU', function(){\n              $scope.populateMenu();\n          });\n\n    //Get orgunits for the logged in user\n    OrgUnitFactory.getViewTreeRoot().then(function(response) {\n        $scope.orgUnits = response.organisationUnits;\n        angular.forEach($scope.orgUnits, function(ou){\n            ou.show = true;\n            angular.forEach(ou.children, function(o){\n                o.hasChildren = o.children && o.children.length > 0 ? true : false;\n            });\n        });\n        $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n    });\n\n    $scope.getOutputs = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {indicatorGroupType: 'output', id: deg.id}, true);\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    /*$scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });*/\n\n    $scope.$watch('model.selectedNdpProgram', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n//            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedNdpProgram) ){\n            if( $scope.model.selectedNdpProgram && $scope.model.selectedNdpProgram.code ){\n                $scope.model.subProgrammes = $filter('startsWith')($scope.model.subProgrammes, {code: $scope.model.selectedNdpProgram.code});\n                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedNdpProgram.code});\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedNdpProgram.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedSubProgramme', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n            $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n//            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedObjective = null;\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedSubProgramme) ){\n            if( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n                $scope.model.piapObjectives = $filter('startsWith')($scope.model.piapObjectives, {code: $scope.model.selectedSubProgramme.code});\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedSubProgramme.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedObjective', function(){\n        $scope.resetDataView();\n\n        if( $scope.model.piapResultsChain && $scope.model.piapResultsChain.code ){\n//            $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n        }\n\n        $scope.model.selectedIntervention = null;\n        if( angular.isObject($scope.model.selectedObjective) ){\n            if( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n//                $scope.model.interventions = $filter('startsWith')($scope.model.interventions, {code: $scope.model.selectedObjective.code});\n            }\n        }\n    });\n\n    $scope.$watch('model.selectedIntervention', function(){\n        $scope.resetDataView();\n\n        $scope.model.dataElementsById = [];\n        $scope.model.dataElementGroups = [];\n        $scope.model.selectedDataElementGroupSets = [];\n    });\n\n    $scope.$watch('model.selectedCluster', function(){\n        $scope.resetDataView();\n    });\n\n    $scope.getBasePeriod = function(){\n        $scope.model.basePeriod = null;\n        var location = -1;\n\n        var getBase = function(){\n            $scope.model.selectedPeriods = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n            if($scope.model.selectedPeriods.length>0){\n            var p = $scope.model.selectedPeriods[0];\n            if(p!=null){\n            var res = PeriodService.getPreviousPeriod( p.id, $scope.model.allPeriods );\n                        $scope.model.basePeriod = res.period;\n                        location = res.location;\n            }\n            }\n        };\n\n        getBase();\n\n        if( location === 0 ){\n            $scope.getPeriods('PREV');\n            getBase();\n        }\n    };\n\n    MetaDataFactory.getAll('legendSets').then(function(legendSets){\n        MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n            $scope.model.optionSets = optionSets;\n\n            angular.forEach(optionSets, function(optionSet){\n                $scope.model.optionSetsById[optionSet.id] = optionSet;\n            });\n\n            $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n            if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                return;\n            }\n\n            $scope.model.piapResultsChain = $filter('getFirst')($scope.model.optionSets, {code: 'piapResultsChain'});\n\n            if( !$scope.model.piapResultsChain || !$scope.model.piapResultsChain.code || !$scope.model.piapResultsChain.options || $scope.model.piapResultsChain.options.length < 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_piap_results_chain_configuration\"));\n                return;\n            }\n\n            ResulstChainService.getByOptionSet( $scope.model.piapResultsChain.id ).then(function(chain){\n                $scope.model.resultsFrameworkChain = chain;\n\n                $scope.model.ndpProgrammes = $scope.model.resultsFrameworkChain.programs;\n                $scope.model.subProgrammes = $scope.model.resultsFrameworkChain.subPrograms;\n                $scope.model.piapObjectives = $scope.model.resultsFrameworkChain.objectives;\n//                $scope.model.interventions = $scope.model.resultsFrameworkChain.interventions;\n\n                MetaDataFactory.getAll('optionGroupSets').then(function(optionGroupSets){\n\n                    $scope.model.optionGroupSets = optionGroupSets;\n\n                    OptionComboService.getBtaDimensions().then(function( response ){\n\n                        if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                            return;\n                        }\n\n                        $scope.model.bta = response.bta;\n                        $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n                        $scope.model.actualDimension = response.actual;\n                        $scope.model.targetDimension = response.target;\n                        $scope.model.baselineDimension = response.baseline;\n\n                        var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                        $scope.model.allPeriods = angular.copy( periods );\n                        $scope.model.periods = periods;\n\n//                        var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n                        var selectedPeriodNames = ['2023', '2024', '2025', '2026', '2027'];\n\n                        var today = DateUtils.getToday();\n                        angular.forEach($scope.model.periods, function(pe){\n                            if ( pe.startDate <= today && pe.endDate >= today ){\n                                $scope.model.selectedFiscalYear = pe;\n                            }\n\n                            if(selectedPeriodNames.indexOf(pe.name) > -1){\n                                $scope.model.selectedPeriods.push(pe);\n                            }\n                        });\n\n                        $scope.model.metaDataCached = true;\n                        $scope.populateMenu();\n                        $scope.model.performanceOverviewLegends = CommonUtils.getPerformanceOverviewHeaders();\n\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedNdpProgram = null;\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n        }\n\n        var sectorsOpgs = $filter('getFirst')($scope.model.optionGroupSets, {code: $scope.model.selectedMenu.ndp + '_CLUSTER'});\n\n//        $scope.model.clusters = sectorsOpgs && sectorsOpgs.optionGroups ? sectorsOpgs.optionGroups : [];\n//        if( !$scope.model.clusters || !$scope.model.clusters.length || !$scope.model.clusters.length === 0 ){\n//            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster_configuration\"));\n//            return;\n//        }\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.clusterData = null;\n        $scope.model.reportReady = false;\n        $scope.model.clusterReportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n    $scope.getPeriods = function(mode){\n        var periods = [];\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n\n        var periodsById = {};\n        angular.forEach($scope.model.periods, function(p){\n            periodsById[p.id] = p;\n        });\n\n        angular.forEach(periods, function(p){\n            if( !periodsById[p.id] ){\n                periodsById[p.id] = p;\n            }\n        });\n\n        $scope.model.periods = Object.values( periodsById );\n\n        $scope.model.allPeriods = angular.copy( $scope.model.periods );\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        var selectedResultsLevel = $scope.model.selectedNdpProgram.code;\n\n        if ( $scope.model.selectedSubProgramme && $scope.model.selectedSubProgramme.code ){\n            selectedResultsLevel = $scope.model.selectedSubProgramme.code;\n        }\n\n        if ( $scope.model.selectedObjective && $scope.model.selectedObjective.code ){\n            selectedResultsLevel = $scope.model.selectedObjective.code;\n        }\n\n//        if ( $scope.model.selectedIntervention && $scope.model.selectedIntervention.code ){\n//            selectedResultsLevel = $scope.model.selectedIntervention.code;\n//        }\n\n        $scope.model.reportReady = false;\n        $scope.model.reportStarted = true;\n\n        dhis2.ndp.downloadGroupSets( 'sub-intervention', selectedResultsLevel ).then(function(){\n\n            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                    map[obj.id] = obj;\n                    return map;\n                }, {});\n\n                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                    $scope.model.allDataElementGroups = dataElementGroups;\n                    $scope.model.dataElementGroups = dataElementGroups;\n\n                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-intervention').then(function(dataElementGroupSets){\n                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                        $scope.model.metaDataCached = true;\n\n//                        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n//                            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n//                        }\n\n//                        $scope.model.selectedDataElementGroupSets = $filter('startsWith')($scope.model.dataElementGroupSets, {code: selectedResultsLevel});\n//                        $scope.model.selectedDataElementGroupSets = $filter('startsWith')($scope.model.dataElementGroupSets, {code: selectedResultsLevel});\n\n                        $scope.model.selectedDataElementGroupSets= dataElementGroupSets;\n                        $scope.getOutputs();\n\n                        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n                            return;\n                        }\n\n                        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_output\"));\n                            return;\n                        }\n\n                        $scope.getBasePeriod();\n\n                        if ( !$scope.model.basePeriod || !$scope.model.basePeriod.id ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_base_period\"));\n                            return;\n                        }\n\n                        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n                            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n                            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n                            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods.concat( $scope.model.basePeriod ), function(pe){return pe.id;}).join(';');\n\n                            var pHeaders = CommonUtils.getPerformanceOverviewHeaders();\n                            $scope.model.pHeadersLength = pHeaders.length;\n                            var prds = orderByFilter( $scope.model.selectedPeriods, '-id').reverse();\n                            $scope.model.performanceOverviewHeaders = [];\n                            angular.forEach(prds, function(pe){\n                                angular.forEach( pHeaders, function(p){\n                                    var h = angular.copy( p );\n                                    h.period = pe.id;\n                                    $scope.model.performanceOverviewHeaders.push( h );\n                                });\n                            });\n\n                            $scope.model.dataElementGroupsById = $scope.model.dataElementGroup.reduce( function(map, obj){\n                                map[obj.id] = obj;\n                                return map;\n                            }, {});\n\n                            var des = [];\n                            angular.forEach($scope.model.dataElementGroup, function(deg){\n                                des.push('DE_GROUP-' + deg.id);\n                            });\n                            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n                            Analytics.getData( analyticsUrl ).then(function(data){\n                                if( data && data.data && data.metaData ){\n                                    $scope.model.data = data.data;\n                                    $scope.model.metaData = data.metaData;\n                                    $scope.model.reportReady = true;\n                                    $scope.model.reportStarted = false;\n\n                                    var dataParams = {\n                                        data: data.data,\n                                        metaData: data.metaData,\n                                        reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                                        bta: $scope.model.bta,\n                                        actualDimension: $scope.model.actualDimension,\n                                        targetDimension: $scope.model.targetDimension,\n                                        baselineDimension: $scope.model.baselineDimension,\n                                        selectedDataElementGroupSets: $scope.model.selectedDataElementGroupSets,\n                                        selectedDataElementGroup: $scope.model.selectedKra,\n                                        dataElementGroups: $scope.model.dataElementGroups,\n                                        basePeriod: $scope.model.basePeriod,\n                                        maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                                        allPeriods: $scope.model.allPeriods,\n                                        dataElementGroupsById: $scope.model.dataElementGroupsById,\n                                        dataElementsById: $scope.model.dataElementsById,\n                                        legendSetsById: $scope.model.legendSetsById,\n                                        defaultLegendSet: $scope.model.defaultLegendSet,\n                                        performanceOverviewHeaders: $scope.model.performanceOverviewHeaders,\n                                        displayActionBudgetData: false\n                                    };\n\n                                    var processedData = Analytics.processData( dataParams );\n                                    $scope.model.dataHeaders = processedData.dataHeaders;\n                                    $scope.model.reportPeriods = processedData.reportPeriods;\n                                    $scope.model.dataExists = processedData.dataExists;\n                                    $scope.model.selectedDataElementGroupSets = processedData.selectedDataElementGroupSets;\n                                    $scope.model.hasPhysicalPerformanceData = processedData.hasPhysicalPerformanceData;\n                                    $scope.model.numerator = processedData.completenessNum;\n                                    $scope.model.denominator = processedData.completenessDen;\n                                    $scope.model.dataElementRowIndex = processedData.dataElementRowIndex;\n                                    $scope.model.tableRows = processedData.tableRows;\n                                    $scope.model.povTableRows = processedData.povTableRows;\n                                }\n                            });\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    $scope.getClusterData = function(){\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n//        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n//            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n//            return;\n//        }\n\n        if( !$scope.model.selectedFiscalYear ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n            return;\n        }\n\n        $scope.model.clusterReportReady = false;\n        $scope.model.clusterReportStarted = true;\n        $scope.model.reportReady = false;\n        $scope.model.reportStarted = true;\n\n        dhis2.ndp.downloadGroupSets( 'sub-intervention' ).then(function(){\n            MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                    map[obj.id] = obj;\n                    return map;\n                }, {});\n\n                MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                    $scope.model.allDataElementGroups = dataElementGroups;\n                    $scope.model.dataElementGroups = dataElementGroups;\n\n                    MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sub-intervention').then(function(dataElementGroupSets){\n\n                        $scope.model.dataElementGroupSets = dataElementGroupSets;\n\n                        $scope.model.metaDataCached = true;\n\n//                        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n//                            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n//                        }\n\n                        $scope.model.selectedDataElementGroupSets = angular.copy($scope.model.dataElementGroupSets);\n\n                        $scope.getOutputs();\n\n                        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n                            return;\n                        }\n\n                        if( !$scope.model.selectedCluster || !$scope.model.selectedCluster.options || !$scope.model.selectedCluster.options.length ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_cluster\"));\n                            return;\n                        }\n\n                        if( !$scope.model.selectedFiscalYear ){\n                            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_fiscal_year\"));\n                            return;\n                        }\n\n                        var params = {\n                            indicatorGroupType: 'output',\n                            selectedOrgUnit: $scope.selectedOrgUnit,\n                            selectedCluster: $scope.model.selectedCluster,\n                            selectedFiscalYear: $scope.model.selectedFiscalYear,\n                            allDataElementGroups: $scope.model.allDataElementGroups,\n                            dataElementGroupSets: $scope.model.dataElementGroupSets,\n                            bta: $scope.model.bta,\n                            baseLineTargetActualDimensions: $scope.model.baseLineTargetActualDimensions,\n                            actualDimension: $scope.model.actualDimension,\n                            targetDimension: $scope.model.targetDimension,\n                            baselineDimension: $scope.model.baselineDimension,\n                            selectedDataElementGroupSets: $scope.model.clusterDataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementsById: $scope.model.dataElementsById,\n                            legendSetsById: $scope.model.legendSetsById,\n                            defaultLegendSet: $scope.model.defaultLegendSet\n                        };\n\n                        ClusterDataService.getData( params ).then(function(result){\n                            $scope.model.clusterReportReady = true;\n                            $scope.model.clusterReportStarted = false;\n                            $scope.model.reportReady = true;\n                            $scope.model.reportStarted = false;\n                            $scope.model.clusterData = result.clusterData;\n                            $scope.model.hasClusterData = result.hasClusterData;\n                            $scope.model.clusterPerformanceOverviewHeaders = result.clusterPerformanceOverviewHeaders;\n                        });\n                    });\n                });\n            });\n        });\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById(name).innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedNdpProgram.displayName + \" - output\";\n\n        if ( name ) {\n            reportName += \" - \" + name;\n        }\n\n        reportName += \".xls\";\n\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                },\n                fullFetched: function(){\n                    return false;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getExplanations = function(){\n        $scope.model.showExplanation = !$scope.model.showExplanation;\n        if ( $scope.model.showExplanation && $scope.model.explanations.length === 0 ){\n            var dataValueSetUrl = 'orgUnit=' + $scope.selectedOrgUnit.id;\n            dataValueSetUrl += '&children=true';\n            dataValueSetUrl += '&startDate=' + $scope.model.selectedPeriods[0].startDate;\n            dataValueSetUrl += '&endDate='  + $scope.model.selectedPeriods.slice(-1)[0].endDate;\n\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                dataValueSetUrl += '&dataElementGroup=' + deg.id;\n            });\n\n            DataValueService.getDataValueSet( dataValueSetUrl ).then(function( response ){\n                if ( response && response.dataValues){\n                    angular.forEach(response.dataValues, function(dv){\n                        if(dv.comment){\n                            dv.comment = JSON.parse( dv.comment );\n                            if ( dv.comment.explanation ){\n                                $scope.model.explanations.push({\n                                    dataElement: dv.dataElement,\n                                    order: $scope.model.dataElementRowIndex[dv.dataElement],\n                                    comment: dv.comment.explanation\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.model.explanations = orderByFilter( $scope.model.explanations, '-order').reverse();\n                    var index = 1;\n                    angular.forEach($scope.model.explanations, function(exp){\n                        $scope.model.commentRow[exp.dataElement] = index;\n                        index++;\n                    });\n                }\n            });\n        }\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getCoverage = function(numerator, denominator){\n        return CommonUtils.getPercent(numerator, denominator, false, true);\n    };\n\n    $scope.getHeaderClass = function(header){\n        return header.style;\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n            $scope.resetTheView = function(menu, $event) {\n                    $scope.model.horizontalMenus.forEach(function(m) {\n                      m.active = false;\n                    });\n\n                    menu.active = true;\n\n                    $scope.currentView = menu.view;\n                  };\n\n});\n\n\n// WEBPACK FOOTER //\n// ./components/output/output-controller.js","/* global angular, ndpFramework */\n\n'use strict';\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('OuTreeController',\n        function($scope,\n                $modalInstance,\n                orgUnits,\n                selectedOrgUnit,\n                validOrgUnits,\n                OrgUnitFactory){\n\n    $scope.orgUnits = orgUnits;\n    $scope.selectedOrgUnit = selectedOrgUnit;\n    $scope.validOrgUnits = validOrgUnits;\n    $scope.treeLoadingStarted = false;\n    $scope.treeLoaded = true;\n    //expand/collapse of search orgunit tree\n    $scope.expandCollapse = function(orgUnit) {\n        if( orgUnit.hasChildren ){\n            //Get children for the selected orgUnit\n            $scope.treeLoadingStarted = true;\n            $scope.treeLoaded = false;\n            OrgUnitFactory.getChildren(orgUnit.id).then(function(ou) {\n                orgUnit.show = !orgUnit.show;\n                orgUnit.hasChildren = false;\n                orgUnit.children = ou.children;\n                angular.forEach(orgUnit.children, function(ou){\n                    ou.hasChildren = ou.children && ou.children.length > 0 ? true : false;\n                });\n                $scope.treeLoadingStarted = false;\n                $scope.treeLoaded = true;\n            });\n        }\n        else{\n            orgUnit.show = !orgUnit.show;\n        }\n    };\n\n    $scope.setSelectedOrgUnit = function( orgUnit ){\n    \t$scope.selectedOrgUnit = orgUnit;\n    };\n\n    $scope.select = function () {\n        $modalInstance.close( $scope.selectedOrgUnit );\n    };\n\n    $scope.cancel = function(){\n        $modalInstance.close();\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/outree/orgunit-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('PolicyController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        Paginator,\n        SelectedMenuService,\n        MetaDataFactory,\n        ProgramFactory,\n        OrgUnitFactory,\n        ProjectService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        showOnlyCoreProject: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        optionSetsById: [],\n        optionSets: [],\n        objectives: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        ndpProgrammes: [],\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        coreProjectAttribute: null,\n        bac: null,\n        ac: null,\n        timePerformance: [],\n        costPerformance: [],\n        showProjectFilter: false,\n        filterText: {}\n    };\n\n    //Paging\n    $scope.pager = {pageSize: 50, page: 1, toolBarDisplay: 5};\n\n    $scope.model.horizontalMenus = [\n        {id: 'synthesis', title: 'project_synthesis', order: 1, view: 'components/policy/synthesis.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'time_performance', title: 'time_performance', order: 2, view: 'components/policy/time-performance.html', class: 'main-horizontal-menu'},\n        {id: 'cost_performance', title: 'cost_performance', order: 3, view: 'components/policy/cost-performance.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.model.performanceHeaders = [\n        {id: 'KPI', displayName: $translate.instant(\"kpi\"), order: 1},\n        {id: 'IND', displayName: $translate.instant('indicator'), order: 2},\n        {id: 'INT', displayName: $translate.instant('interpretation'), order: 3},\n        {id: 'UNI', displayName: $translate.instant('unit'), order: 4},\n        {id: 'BSL', displayName: $translate.instant('baseline'), order: 5}\n    ];\n\n    $scope.$watch('model.selectedProgram', function(){\n        $scope.resetData();\n        if ( $scope.model.selectedMenu && $scope.model.selectedMenu.code ){\n            $scope.fetchProgramDetails();\n        }\n    });\n\n\n    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n        $scope.model.optionSets = optionSets;\n\n        angular.forEach(optionSets, function(optionSet){\n            $scope.model.optionSetsById[optionSet.id] = optionSet;\n        });\n\n        $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n        ProgramFactory.getAll('programs').then(function(programs){\n            $scope.model.programs = $filter('filter')(programs, {programType: 'WITH_REGISTRATION', programDomain: 'policyAction'}, true);\n            $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n\n            //Get orgunits for the logged in user\n            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                $scope.orgUnits = response.organisationUnits;\n                angular.forEach($scope.orgUnits, function(ou){\n                    ou.show = true;\n                    angular.forEach(ou.children, function(o){\n                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                    });\n                });\n                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n            });\n        });\n    });\n\n    $scope.fetchProgramDetails = function(){\n        $scope.model.coreProjectAttribute = null;\n        $scope.pager = {pageSize: 50, page: 1, toolBarDisplay: 5};\n        $scope.model.filterText = {};\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.code && $scope.model.selectedProgram && $scope.model.selectedProgram.id && $scope.model.selectedProgram.programTrackedEntityAttributes ){\n\n            angular.forEach($scope.model.selectedProgram.programTrackedEntityAttributes, function(pta){\n                $scope.model.attributesById[pta.trackedEntityAttribute.id] = pta.trackedEntityAttribute;\n            });\n\n            angular.forEach($scope.model.selectedProgram.programStages, function(stage){\n                angular.forEach(stage.programStageDataElements, function(prstDe){\n                    var de = prstDe.dataElement;\n                    if( de ){\n                        $scope.model.dataElementsById[de.id] = de;\n                    }\n                });\n            });\n            $scope.fetchProjects();\n        }\n    };\n\n    $scope.fetchProjects = function(){\n        $scope.model.projectFetchStarted = true;\n        var filter = [];\n        if ( Object.keys( $scope.model.filterText ).length > 0 ){\n            for(var key in $scope.model.filterText ){\n                if ( $scope.model.filterText[key] && $scope.model.filterText[key] !== '' )\n                filter.push( \"&filter=\" + key + ':LIKE:' + $scope.model.filterText[key] );\n            }\n        }\n\n        ProjectService.getByProgram($scope.pager, filter.length > 0 ? filter.join('&') : null, $scope.selectedOrgUnit, $scope.model.selectedProgram, $scope.model.optionSetsById, $scope.model.attributesById, $scope.model.dataElementsById ).then(function( response ){\n            $scope.model.projects = response.projects;\n            $scope.model.projectsFetched = true;\n            $scope.model.projectFetchStarted = false;\n\n            response.pager.pageSize = response.pager.pageSize ? response.pager.pageSize : $scope.pager.pageSize;\n            $scope.pager = response.pager;\n            $scope.pager.toolBarDisplay = 5;\n            $scope.pager.length = $scope.model.projects.length;\n\n            Paginator.setPage($scope.pager.page);\n            Paginator.setPageCount($scope.pager.pageCount);\n            Paginator.setPageSize($scope.pager.pageSize);\n            Paginator.setItemCount($scope.pager.total);\n        });\n    };\n\n    $scope.searchProjects = function(){\n        $scope.fetchProjects();\n    };\n\n    $scope.jumpToPage = function(){\n        if($scope.pager && $scope.pager.page && $scope.pager.pageCount && $scope.pager.page > $scope.pager.pageCount){\n            $scope.pager.page = $scope.pager.pageCount;\n        }\n        $scope.fetchProjects();\n    };\n\n    $scope.resetPageSize = function(){\n        $scope.pager.page = 1;\n        $scope.fetchProjects();\n    };\n\n    $scope.getPage = function(page){\n        $scope.pager.page = page;\n        $scope.fetchProjects();\n    };\n\n    $scope.resetData = function(){\n        $scope.model.attributesById = [];\n        $scope.model.dataElementsById = [];\n        $scope.model.projectsFetched = false;\n        $scope.model.projects = [];\n    };\n\n    $scope.resetView = function(horizontalMenu, e){\n        $scope.model.activeHorizontalMenu = horizontalMenu;\n        if(e){\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetData();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedProgram.displayName + \" - project status\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n        $scope.resetTheView = function(menu, $event) {\n                $scope.model.horizontalMenus.forEach(function(m) {\n                  m.active = false;\n                });\n\n                menu.active = true;\n\n                $scope.currentView = menu.view;\n              };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/policy/policy-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('ProjectController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        Paginator,\n        NotificationService,\n        SelectedMenuService,\n        MetaDataFactory,\n        ProgramFactory,\n        OrgUnitFactory,\n        ProjectService) {\n\n    $scope.model = {\n        metaDataCached: false,\n        showOnlyCoreProject: false,\n        data: null,\n        reportReady: false,\n        dataExists: false,\n        dataHeaders: [],\n        optionSetsById: [],\n        programsById: [],\n        dataElementsById: [],\n        attributesById: [],\n        optionSets: [],\n        objectives: [],\n        dataElementGroup: [],\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        selectedNdpProgram: null,\n        ndpProgrammes: [],\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        coreProjectAttribute: null,\n        bac: null,\n        ac: null,\n        timePerformance: [],\n        costPerformance: [],\n        showProjectFilter: false,\n        filterText: {}\n    };\n\n    //Paging\n    $scope.pager = {pageSize: 50, page: 1, toolBarDisplay: 5};\n\n    $scope.model.horizontalMenus = [\n        {id: 'financial_performance', title: 'financial_performance', order: 1, view: 'components/project/financial-performance.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'physical_performance', title: 'physical_performance', order: 2, view: 'components/project/physical-performance.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.model.performanceHeaders = [\n        {id: 'KPI', displayName: $translate.instant(\"kpi\"), order: 1},\n        {id: 'IND', displayName: $translate.instant('indicator'), order: 2},\n        {id: 'INT', displayName: $translate.instant('interpretation'), order: 3},\n        {id: 'UNI', displayName: $translate.instant('unit'), order: 4},\n        {id: 'BSL', displayName: $translate.instant('baseline'), order: 5}\n    ];\n\n    $scope.$watch('model.selectedProgram', function(){\n        $scope.resetData();\n        if ( $scope.model.selectedMenu && $scope.model.selectedMenu.code ){\n            $scope.fetchProgramDetails();\n        }\n    });\n\n    MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n        $scope.model.optionSets = optionSets;\n\n        angular.forEach(optionSets, function(optionSet){\n            $scope.model.optionSetsById[optionSet.id] = optionSet;\n        });\n\n        $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n        ProgramFactory.getAll('programs').then(function(programs){\n            angular.forEach(programs, function(pr){                \n                angular.forEach(pr.programTrackedEntityAttributes, function(pta){\n                    $scope.model.attributesById[pta.trackedEntityAttribute.id] = pta.trackedEntityAttribute;\n                });\n                $scope.model.programsById[pr.id] = pr;\n                angular.forEach(pr.programStages, function(stage){\n                    angular.forEach(stage.programStageDataElements, function(prstDe){\n                        $scope.model.dataElementsById[prstDe.dataElement.id] = prstDe.dataElement;\n                    });\n                });\n            });\n            \n            $scope.model.programs = $filter('filter')(programs, {programType: 'WITH_REGISTRATION', programDomain: 'projectTracker'}, true);\n            $scope.model.kpiProgram =  $filter('getFirst')(programs, {programType: 'WITH_REGISTRATION', programDomain: 'projectKpi'}, true);\n\n            $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n\n            //Get orgunits for the logged in user\n            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                $scope.orgUnits = response.organisationUnits;\n                angular.forEach($scope.orgUnits, function(ou){\n                    ou.show = true;\n                    angular.forEach(ou.children, function(o){\n                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                    });\n                });\n                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n            });\n        });\n    });\n\n    $scope.fetchProgramDetails = function(){\n        $scope.model.selectedProgramStage = null;\n        $scope.pager = {pageSize: 50, page: 1, toolBarDisplay: 5};\n        $scope.model.filterText = {};\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.code && $scope.model.selectedProgram && $scope.model.selectedProgram.id && $scope.model.selectedProgram.programTrackedEntityAttributes ){\n\n            if ( $scope.model.selectedProgram.programStages && $scope.model.selectedProgram.programStages.length > 1 ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_project_stage\"));\n                return;\n            }\n            \n            $scope.model.selectedProgramStage = $scope.model.selectedProgram.programStages[0];\n            $scope.fetchProjects();\n        }\n    };\n\n    $scope.searchProjects = function(){\n        $scope.fetchProjects();\n    };\n\n    $scope.fetchProjects = function(){\n        $scope.model.projectFetchStarted = true;\n        var filter = [];\n        if ( Object.keys( $scope.model.filterText ).length > 0 ){\n            for(var key in $scope.model.filterText ){\n                if ( $scope.model.filterText[key] && $scope.model.filterText[key] !== '' )\n                filter.push( \"&filter=\" + key + ':LIKE:' + $scope.model.filterText[key] );\n            }\n        }\n\n        ProjectService.getByProgram($scope.pager, filter.length > 0 ? filter.join('&') : null, $scope.selectedOrgUnit, $scope.model.selectedProgram, $scope.model.optionSetsById, $scope.model.attributesById, $scope.model.dataElementsById ).then(function( response ){\n            $scope.model.projects = response.projects;\n            $scope.model.projectsFetched = true;\n            $scope.model.projectFetchStarted = false;\n\n            response.pager.pageSize = response.pager.pageSize ? response.pager.pageSize : $scope.pager.pageSize;\n            $scope.pager = response.pager;\n            $scope.pager.toolBarDisplay = 5;\n            $scope.pager.length = $scope.model.projects.length;\n\n            Paginator.setPage($scope.pager.page);\n            Paginator.setPageCount($scope.pager.pageCount);\n            Paginator.setPageSize($scope.pager.pageSize);\n            Paginator.setItemCount($scope.pager.total);\n        });\n    };\n\n    $scope.getProjectDetails = function( project ){\n        if ( $scope.model.selectedProject && $scope.model.selectedProject.trackedEntityInstance === project.trackedEntityInstance ){\n            $scope.model.showProjectDetails = !$scope.model.showProjectDetails;\n            $scope.model.selectedProject = null;\n        }\n        else{\n            \n            $scope.model.selectedProject = project;\n            $scope.model.showProjectDetails = true;\n            $scope.model.projectKpis = [];\n            if( !project.relationships ){\n                NotificationService.showNotifcationDialog($translate.instant(\"warning\"), $translate.instant(\"missing_project_kpi\"));\n            }\n\n            if( project && project.relationships ){\n                ProjectService.getKpi( project.relationships.join(';'), $scope.model.optionSetsById, $scope.model.attributesById , $scope.model.dataElementsById ).then(function( data ){\n                    $scope.model.projectKpis = data;\n                });\n            }\n        }\n    };\n\n    $scope.jumpToPage = function(){\n        if($scope.pager && $scope.pager.page && $scope.pager.pageCount && $scope.pager.page > $scope.pager.pageCount){\n            $scope.pager.page = $scope.pager.pageCount;\n        }\n        $scope.fetchProjects();\n    };\n\n    $scope.resetPageSize = function(){\n        $scope.pager.page = 1;\n        $scope.fetchProjects();\n    };\n\n    $scope.getPage = function(page){\n        $scope.pager.page = page;\n        $scope.fetchProjects();\n    };\n\n    $scope.resetData = function(){\n        $scope.model.projectsFetched = false;\n        $scope.model.projects = [];\n    };\n\n    $scope.resetView = function(horizontalMenu, e){\n        $scope.model.activeHorizontalMenu = horizontalMenu;\n        if(e){\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetData();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedProgram.displayName + \" - project status\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n     $scope.currentView = $scope.model.horizontalMenus.find(m => m.active).view;\n        $scope.resetTheView = function(menu, $event) {\n                $scope.model.horizontalMenus.forEach(function(m) {\n                  m.active = false;\n                });\n\n                menu.active = true;\n\n                $scope.currentView = menu.view;\n              };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/project/project-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('SDGController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        NotificationService,\n        SelectedMenuService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        Analytics,\n        FinancialDataService) {\n\n    $scope.showReportFilters = false;\n\n    $scope.model = {\n        metaDataCached: false,\n        data: null,\n        dataElements: [],\n        dataElementsById: [],\n        kra: [],\n        goals: [],\n        objectives: [],\n        selectedKra: null,\n        selectedSdg: null,\n        selectedDataElementGroupSets: [],\n        dataElementGroups: [],\n        baseLineTargetActualDimensions: [],\n        dataSetsById: {},\n        categoryCombosById: {},\n        optionSets: [],\n        optionSetsById: [],\n        dictionaryItems: [],\n        selectedPeriods: [],\n        periods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly',\n        groupSetSize: {},\n        physicalPerformance: true,\n        financialPerformance: true,\n        showProjectDetails: false\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'physicalPerformance', title: 'physical_performance', order: 1, view: 'components/sdg/physical-performance.html', active: true, class: 'main-horizontal-menu'},\n        {id: 'budgetPerformance', title: 'budget_performance', order: 2, view: 'components/sdg/budget-performance.html', class: 'main-horizontal-menu'},\n        {id: 'dashboard', title: 'dashboard', order: 6, view: 'views/dashboard.html', class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$watch('model.selectedSdgGoal', function(){\n        $scope.model.selectedTarget = null;\n        $scope.model.targets = [];\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedSdgGoal) && $scope.model.selectedSdgGoal.id){\n            angular.forEach($scope.model.selectedSdgGoal.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if ( _deg.length > 0 ){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n\n            $scope.model.targets = $scope.model.selectedSdgGoal.dataElementGroups;\n        }\n        else{\n            angular.forEach($scope.model.dataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                    if ( _deg.length > 0 ){\n                        $scope.model.dataElementGroup.push( _deg[0] );\n                    }\n                });\n            });\n        }\n    });\n\n    $scope.$watch('model.selectedTarget', function(){\n        $scope.model.selectedIndicator = null;\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.model.dataElementGroup = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedTarget) && $scope.model.selectedTarget.id){\n            $scope.model.selectedDataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {id: $scope.model.selectedTarget.id});\n            $scope.getTargets();\n        }\n        else{\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.targets );\n            $scope.getTargets();\n        }\n    });\n\n    $scope.getTargets = function(){\n        $scope.model.dataElementGroup = [];\n        angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n            angular.forEach(degs.dataElementGroups, function(deg){\n                var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                if (_deg && _deg.length > 0){\n                    $scope.model.dataElementGroup.push( _deg[0] );\n                }\n            });\n        });\n    };\n\n    dhis2.ndp.downloadGroupSets( 'sdg' ).then(function(){\n\n        MetaDataFactory.getAll('optionSets').then(function(optionSets){\n\n            $scope.model.optionSets = optionSets;\n\n            angular.forEach(optionSets, function(optionSet){\n                $scope.model.optionSetsById[optionSet.id] = optionSet;\n            });\n\n            $scope.model.ndp = $filter('getFirst')($scope.model.optionSets, {code: 'ndp'});\n\n            if( !$scope.model.ndp || !$scope.model.ndp.code ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_ndp_configuration\"));\n                return;\n            }\n\n            OptionComboService.getBtaDimensions().then(function( bta ){\n\n                if( !bta || !bta.category || !bta.options || bta.options.length !== 3 ){\n                    NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                    return;\n                }\n\n                $scope.model.bta = bta;\n                $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n\n                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                    $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                        map[obj.id] = obj;\n                        return map;\n                    }, {});\n\n                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                        $scope.model.dataElementGroups = dataElementGroups;\n\n                        MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'sdg').then(function(dataElementGroupSets){\n                            $scope.model.dataElementGroupSets = dataElementGroupSets;\n                            $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-code').reverse();\n\n                            var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                            $scope.model.allPeriods = angular.copy( periods );\n                            $scope.model.periods = periods;\n\n                            var selectedPeriodNames = ['2020/21', '2021/22', '2022/23', '2023/24', '2024/25'];\n\n                            angular.forEach($scope.model.periods, function(pe){\n                                if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                   $scope.model.selectedPeriods.push(pe);\n                                }\n                            });\n\n                            //Get orgunits for the logged in user\n                            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                                $scope.orgUnits = response.organisationUnits;\n                                angular.forEach($scope.orgUnits, function(ou){\n                                    ou.show = true;\n                                    angular.forEach(ou.children, function(o){\n                                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                                    });\n                                });\n                                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n                            });\n\n                            $scope.model.metaDataCached = true;\n                            $scope.populateMenu();\n\n                            /*$scope.model.dashboardName = 'SDGs';\n                            DashboardService.getByName( $scope.model.dashboardName ).then(function( result ){\n                                $scope.model.dashboardItems = result.dashboardItems;\n                                $scope.model.charts = result.charts;\n                                $scope.model.tables = result.tables;\n                                $scope.model.maps = result.maps;\n                                $scope.model.dashboardFetched = true;\n\n                                $scope.populateMenu();\n                            });*/\n                        });\n                    });\n                });\n            });\n        });\n\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.resetDataView();\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedSdg = null;\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            $scope.model.sdgGoals = angular.copy( $scope.model.dataElementGroupSets );\n            if( $scope.model.sdgGoals && $scope.model.sdgGoals.length === 1 ){\n                $scope.model.selectedSdg = $scope.model.sdgGoals[0];\n            }\n        }\n    };\n\n    $scope.getPeriods = function(mode){\n        if( mode === 'NXT'){\n            $scope.model.periodOffset = $scope.model.periodOffset + 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n        else{\n            $scope.model.periodOffset = $scope.model.periodOffset - 1;\n            $scope.model.periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup.length === 0 || !$scope.model.dataElementGroup ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_target_or_proxy\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            FinancialDataService.getLocalData('data/cost.json').then(function(cost){\n                $scope.model.cost = cost;\n\n                Analytics.getData( analyticsUrl ).then(function(data){\n                    if( data && data.data && data.metaData ){\n                        $scope.model.data = data.data;\n                        $scope.model.metaData = data.metaData;\n                        $scope.model.reportReady = true;\n                        $scope.model.reportStarted = false;\n\n                        var dataParams = {\n                            data: data.data,\n                            metaData: data.metaData,\n                            reportPeriods: angular.copy( $scope.model.selectedPeriods ),\n                            bta: $scope.model.bta,\n                            selectedDataElementGroupSets: $scope.model.dataElementGroupSets,\n                            selectedDataElementGroup: $scope.model.selectedKra,\n                            dataElementGroups: $scope.model.dataElementGroups,\n                            basePeriod: $scope.model.basePeriod,\n                            maxPeriod: $scope.model.selectedPeriods.slice(-1)[0],\n                            allPeriods: $scope.model.allPeriods,\n                            dataElementsById: $scope.model.dataElementsById,\n                            cost: $scope.model.cost\n                        };\n\n                        var processedData = Analytics.processData( dataParams );\n\n                        $scope.model.dataHeaders = processedData.dataHeaders;\n                        $scope.model.reportPeriods = processedData.reportPeriods;\n                        $scope.model.dataExists = processedData.dataExists;\n                        $scope.model.resultData = processedData.resultData || [];\n                        $scope.model.performanceData = processedData.performanceData || [];\n                        $scope.model.cumulativeData = processedData.cumulativeData || [];\n                        $scope.model.costData = processedData.costData || [];\n                        $scope.model.costEffData = processedData.costEffData || [];\n                        $scope.model.sdgView = true;\n                    }\n                });\n            });\n        }\n    };\n\n    $scope.showOrgUnitTree = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/outree/orgunit-tree.html',\n            controller: 'OuTreeController',\n            resolve: {\n                orgUnits: function(){\n                    return $scope.orgUnits;\n                },\n                selectedOrgUnit: function(){\n                    return $scope.selectedOrgUnit;\n                },\n                validOrgUnits: function(){\n                    return null;\n                }\n            }\n        });\n\n        modalInstance.result.then(function ( selectedOu ) {\n            if( selectedOu && selectedOu.id ){\n                $scope.selectedOrgUnit = selectedOu;\n                $scope.resetDataView();\n            }\n        });\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedSdg.ndp + \" objective\" + \" .xls\";\n        if( name ){\n            reportName = name + ' performance.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getRFInformation = function( item ){\n        NotificationService.showNotifcationDialog($translate.instant(\"info\"), $translate.instant(\"Need to display NDP program source here ...\"));\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/sdg/sdg-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('SettingsController',\n    function($scope,\n            $modalInstance,\n            $route){\n\n\n\n    $scope.close = function () {\n        $modalInstance.close();\n    };\n\n    $scope.clear = function(){\n        sessionStorage.removeItem('METADATA_CACHED');\n        $route.reload();\n        $scope.close();\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./components/settings/settings-controller.js","/* Controllers */\n\nvar ndpFramework = angular.module('ndpFramework');\n\nndpFramework.controller('VisionController',\n    function($scope,\n        $translate,\n        $modal,\n        $filter,\n        orderByFilter,\n        SelectedMenuService,\n        NotificationService,\n        PeriodService,\n        MetaDataFactory,\n        OrgUnitFactory,\n        OptionComboService,\n        FinancialDataService,\n        Analytics) {\n\n    $scope.model = {\n        metaDataCached: false,\n        dataElements: [],\n        dataElementsById: [],\n        dataElementGroups: [],\n        dataSetsById: {},\n        categoryCombosById: {},\n        optionSets: [],\n        optionSetsById: [],\n        dictionaryItems: [],\n        vision2040: [],\n        charts: [],\n        tables: [],\n        maps: [],\n        selectedPeriods: [],\n        periods: [],\n        allPeriods: [],\n        periodOffset: 0,\n        openFuturePeriods: 10,\n        selectedPeriodType: 'FinancialJuly'\n    };\n\n    $scope.model.horizontalMenus = [\n        {id: 'target', title: 'targets', order: 1, view: 'components/vision/results.html', active: true, class: 'main-horizontal-menu'}\n    ];\n\n    $scope.$on('MENU', function(){\n        $scope.populateMenu();\n    });\n\n    $scope.$watch('model.selectedNDP', function(){\n        $scope.model.selectedNdpProgram = null;\n        $scope.model.ndpProgram = null;\n        $scope.model.objectives = [];\n        $scope.model.subPrograms = [];\n        $scope.model.selectedSubProgramme = null;\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.resetDataView();\n        if( angular.isObject($scope.model.selectedNDP) && $scope.model.selectedNDP.id && $scope.model.selectedNDP.code){\n            $scope.model.ndpProgram = $filter('getFirst')($scope.model.optionSets, {ndp: $scope.model.selectedNDP.code, isNDPProgramme: true}, true);\n\n            $scope.getInterventions();\n        }\n    });\n\n    dhis2.ndp.downloadGroupSets( 'vision2040' ).then(function(){\n\n        OptionComboService.getBtaDimensions().then(function( response ){\n\n            if( !response || !response.bta || !response.baseline || !response.actual || !response.target ){\n                NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"invalid_bta_dimensions\"));\n                return;\n            }\n\n            $scope.model.bta = response.bta;\n            $scope.model.baseLineTargetActualDimensions = $.map($scope.model.bta.options, function(d){return d.id;});\n            $scope.model.actualDimension = response.actual;\n            $scope.model.targetDimension = response.target;\n            $scope.model.baselineDimension = response.baseline;\n                    \n  \n            MetaDataFactory.getAll('categoryCombos').then(function(ccs){\n                angular.forEach(ccs, function(cc){\n                    $scope.model.categoryCombosById[cc.id] = cc;\n                });\n\n                MetaDataFactory.getAll('dataElements').then(function(dataElements){\n\n                    $scope.model.dataElementsById = dataElements.reduce( function(map, obj){\n                        map[obj.id] = obj;\n                        return map;\n                    }, {});\n\n                    MetaDataFactory.getDataElementGroups().then(function(dataElementGroups){\n\n                        $scope.model.downloadLabel = $translate.instant('download_visualization');\n                        $scope.model.metaDataCached = true;\n\n                        $scope.model.dataElementGroups = dataElementGroups;\n\n                        MetaDataFactory.getAllByProperty('dataElementGroupSets', 'indicatorGroupSetType', 'vision2040').then(function(dataElementGroupSets){\n                            $scope.model.dataElementGroupSets = dataElementGroupSets;\n                            $scope.model.dataElementGroupSets = orderByFilter( $scope.model.dataElementGroupSets, '-displayName').reverse();\n\n                            var periods = PeriodService.getPeriods($scope.model.selectedPeriodType, $scope.model.periodOffset, $scope.model.openFuturePeriods);\n                            $scope.model.allPeriods = angular.copy( periods );\n                            $scope.model.periods = periods;\n\n                            var selectedPeriodNames = ['2024/25'];\n\n                            $scope.model.selectedPeriods.push( {displayName: '2009/10', id: '2009July'} );\n                            angular.forEach($scope.model.periods, function(pe){\n                                if(selectedPeriodNames.indexOf(pe.displayName) > -1 ){\n                                   $scope.model.selectedPeriods.push(pe);\n                                }\n                            });\n\n                            $scope.model.selectedPeriods.push( {displayName: '2039/40', id: '2039July'} );\n\n                            //Get orgunits for the logged in user\n                            OrgUnitFactory.getViewTreeRoot().then(function(response) {\n                                $scope.orgUnits = response.organisationUnits;\n                                angular.forEach($scope.orgUnits, function(ou){\n                                    ou.show = true;\n                                    angular.forEach(ou.children, function(o){\n                                        o.hasChildren = o.children && o.children.length > 0 ? true : false;\n                                    });\n                                });\n                                $scope.selectedOrgUnit = $scope.orgUnits[0] ? $scope.orgUnits[0] : null;\n\n                                $scope.populateMenu();\n\n                                $scope.getAnalyticsData();\n\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    $scope.populateMenu = function(){\n\n        $scope.model.selectedMenu = SelectedMenuService.getSelectedMenu();\n        $scope.model.selectedGoal = null;\n        $scope.model.selectedKra = null;\n        $scope.model.selectedDataElementGroupSets = [];\n        $scope.model.dataElementGroup = [];\n\n        if( $scope.model.selectedMenu && $scope.model.selectedMenu.ndp && $scope.model.selectedMenu.code ){\n            $scope.model.dataElementGroupSets = $filter('filter')($scope.model.dataElementGroupSets, {ndp: $scope.model.selectedMenu.ndp}, true);\n            $scope.model.selectedDataElementGroupSets = angular.copy( $scope.model.dataElementGroupSets );\n            angular.forEach($scope.model.selectedDataElementGroupSets, function(degs){\n                angular.forEach(degs.dataElementGroups, function(deg){\n                    var _deg = $filter('filter')($scope.model.dataElementGroups, {id: deg.id});\n                    if ( _deg.length > 0 ){\n                        $scope.model.dataElementGroup.push( _deg[0] );\n                    }\n                });\n            });\n        }\n    };\n\n    $scope.getAnalyticsData = function(){\n\n        $scope.model.data = null;\n        var analyticsUrl = '';\n\n        if( !$scope.selectedOrgUnit || !$scope.selectedOrgUnit.id ){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vote\"));\n            return;\n        }\n\n        if( !$scope.model.dataElementGroup || $scope.model.dataElementGroup.length === 0){\n            NotificationService.showNotifcationDialog($translate.instant(\"error\"), $translate.instant(\"missing_vision2040_items\"));\n            return;\n        }\n\n        if( $scope.model.dataElementGroup && $scope.model.dataElementGroup.length > 0 && $scope.model.selectedPeriods.length > 0){\n            analyticsUrl += '&filter=ou:'+ $scope.selectedOrgUnit.id +'&displayProperty=NAME&includeMetadataDetails=true';\n            analyticsUrl += '&dimension=co&dimension=' + $scope.model.bta.category + ':' + $.map($scope.model.baseLineTargetActualDimensions, function(dm){return dm;}).join(';');\n            analyticsUrl += '&dimension=pe:' + $.map($scope.model.selectedPeriods, function(pe){return pe.id;}).join(';');\n\n            $scope.model.dataElements = [];\n            var des = [];\n            angular.forEach($scope.model.dataElementGroup, function(deg){\n                des.push('DE_GROUP-' + deg.id);\n                angular.forEach(deg.dataElements, function(de){\n                    var _de = $scope.model.dataElementsById[de.id];\n                    $scope.model.dataElements.push( _de );\n                });\n            });\n            analyticsUrl += '&dimension=dx:' + des.join(';');\n\n            FinancialDataService.getLocalData('data/cost.json').then(function(cost){\n                $scope.model.cost = cost;\n\n                Analytics.getData( analyticsUrl ).then(function(data){\n                    if( data && data.data && data.metaData ){\n                        $scope.model.data = data.data;\n                        $scope.model.metaData = data.metaData;\n                        $scope.model.reportReady = true;\n                        $scope.model.reportStarted = false;\n                    }\n                });\n            });\n        }\n    };\n\n    $scope.getBaselineValue = function( dataElement, oc ){\n\n        var filterParams = {\n            dx: dataElement.id,\n            pe: $scope.model.selectedPeriods[0].id,\n            co: oc\n        };\n\n        var res = $filter('dataFilter')($scope.model.data, filterParams);\n        return res && res[0] && res[0].value ? res[0].value : '';\n    };\n\n    $scope.getTargetValue = function( dataElement, oc ){\n\n        var filterParams = {\n            dx: dataElement.id,\n            pe: $scope.model.selectedPeriods[1].id,\n            co: oc\n        };\n\n        var res = $filter('dataFilter')($scope.model.data, filterParams);\n        return res && res[0] && res[0].value ? res[0].value : '';\n    };\n\n    $scope.getVision2040Value = function( dataElement, oc ){\n\n        var filterParams = {\n            dx: dataElement.id,\n            pe: $scope.model.selectedPeriods[2].id,\n            co: oc\n        };\n\n        var res = $filter('dataFilter')($scope.model.data, filterParams);\n        return res && res[0] && res[0].value ? res[0].value : '';\n    };\n\n    $scope.exportData = function ( name ) {\n        var blob = new Blob([document.getElementById('exportTable').innerHTML], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n        });\n\n        var reportName = $scope.model.selectedMenu.displayName + \"Vision 2040 Targets.xls\";\n\n        if( name ){\n            reportName = name + '.xls';\n        }\n        saveAs(blob, reportName);\n    };\n\n    $scope.getIndicatorDictionary = function(item) {\n        var modalInstance = $modal.open({\n            templateUrl: 'components/dictionary/details-modal.html',\n            controller: 'DictionaryDetailsController',\n            resolve: {\n                dictionaryItem: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.getDataValueExplanation = function( item ){\n        var modalInstance = $modal.open({\n            templateUrl: 'components/explanation/explanation-modal.html',\n            controller: 'DataValueExplanationController',\n            windowClass: 'comment-modal-window',\n            resolve: {\n                item: function(){\n                    return item;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n\n        });\n    };\n\n    $scope.resetDataView = function(){\n        $scope.model.data = null;\n        $scope.model.reportReady = false;\n        $scope.model.dataExists = false;\n        $scope.model.dataHeaders = [];\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./components/vision/vision-controller.js"],"sourceRoot":""}